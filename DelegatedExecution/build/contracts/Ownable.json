{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        1055
      ]
    },
    "id": 1056,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1014,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1055,
        "linearizedBaseContracts": [
          1055
        ],
        "name": "Ownable",
        "nameLocation": "83:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1023,
              "nodeType": "Block",
              "src": "117:80:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1017,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "132:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "132:9:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206f776e6572",
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "143:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2da8196ad7a6feb6778e45b491f524dc95953e2a8a077225fb77939d3551b45",
                          "typeString": "literal_string \"Function accessible only by the owner\""
                        },
                        "value": "Function accessible only by the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2da8196ad7a6feb6778e45b491f524dc95953e2a8a077225fb77939d3551b45",
                          "typeString": "literal_string \"Function accessible only by the owner\""
                        }
                      ],
                      "id": 1016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "124:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "124:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "124:59:2"
                },
                {
                  "id": 1022,
                  "nodeType": "PlaceholderStatement",
                  "src": "190:1:2"
                }
              ]
            },
            "id": 1024,
            "name": "onlyOwner",
            "nameLocation": "105:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:2:2"
            },
            "src": "96:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1026,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "217:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "201:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1025,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "242:24:2",
              "statements": [
                {
                  "expression": {
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1029,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "244:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1030,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "253:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "257:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "253:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "244:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "244:19:2"
                }
              ]
            },
            "id": 1035,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:2"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:0:2"
            },
            "scope": 1055,
            "src": "228:38:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1042,
              "nodeType": "Block",
              "src": "316:18:2",
              "statements": [
                {
                  "expression": {
                    "id": 1040,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1026,
                    "src": "325:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1041,
                  "nodeType": "Return",
                  "src": "318:13:2"
                }
              ]
            },
            "functionSelector": "8da5cb5b",
            "id": 1043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "279:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "284:2:2"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "307:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "306:9:2"
            },
            "scope": 1055,
            "src": "270:64:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "385:32:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1048,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "394:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "398:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "394:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1050,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "408:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1047,
                  "id": 1052,
                  "nodeType": "Return",
                  "src": "387:27:2"
                }
              ]
            },
            "functionSelector": "8f32d59b",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "349:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:2"
            },
            "returnParameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "379:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:6:2"
            },
            "scope": 1055,
            "src": "340:77:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1056,
        "src": "74:346:2",
        "usedErrors": []
      }
    ],
    "src": "39:381:2"
  },
  "bytecode": "6080604052348015600f57600080fd5b50600080546001600160a01b0319163317905560aa806100306000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea2646970667358221220649738723f6e352759d0ee619e95b3880140a14d3215565ec5a6e2091fc2273964736f6c63430008110033",
  "bytecodeSha1": "672f70f06f11b1d7dfeb0f73ad0bb11d0c9972ad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Ownable",
  "coverageMap": {
    "branches": {
      "2": {}
    },
    "statements": {
      "2": {
        "Ownable.isOwner": {
          "1": [
            387,
            414
          ]
        },
        "Ownable.owner": {
          "0": [
            318,
            331
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea2646970667358221220649738723f6e352759d0ee619e95b3880140a14d3215565ec5a6e2091fc2273964736f6c63430008110033",
  "deployedSourceMap": "74:346:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:64;307:7;325:6;270:64;;-1:-1:-1;;;;;325:6:2;;;160:51:4;;148:2;133:18;270:64:2;;;;;;;;340:77;379:4;408:6;-1:-1:-1;;;;;408:6:2;394:10;:20;340:77;;387:14:4;;380:22;362:41;;350:2;335:18;340:77:2;222:187:4",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    74,
    420
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x9738723F6E CALLDATALOAD 0x27 MSIZE 0xD0 0xEE PUSH2 0x9E95 0xB3 DUP9 ADD BLOCKHASH LOG1 0x4D ORIGIN ISZERO JUMP 0x5E 0xC5 0xA6 0xE2 MULMOD 0x1F 0xC2 0x27 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "REVERT",
      "path": "2"
    },
    "15": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "POP",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "LT",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "24": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "27": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "SHR",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "40": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8F32D59B"
    },
    "46": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "EQ",
      "path": "2"
    },
    "47": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x57"
    },
    "49": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "51": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        74,
        420
      ],
      "op": "REVERT",
      "path": "2"
    },
    "55": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "56": {
      "fn": "Ownable.owner",
      "offset": [
        307,
        314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "58": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 0
    },
    "59": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "61": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "62": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "64": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "66": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "68": {
      "op": "SHL"
    },
    "69": {
      "op": "SUB"
    },
    "70": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "71": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "72": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "AND",
      "path": "2"
    },
    "73": {
      "op": "DUP2"
    },
    "74": {
      "op": "MSTORE"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "77": {
      "op": "ADD"
    },
    "78": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "79": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "81": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "82": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "DUP1",
      "path": "2"
    },
    "83": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "84": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "SUB",
      "path": "2"
    },
    "85": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "86": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "RETURN",
      "path": "2"
    },
    "87": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "88": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "90": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 1
    },
    "91": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "97": {
      "op": "SHL"
    },
    "98": {
      "op": "SUB"
    },
    "99": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "100": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "101": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "102": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "104": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "105": {
      "op": "SWAP1"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "ISZERO"
    },
    "108": {
      "op": "DUP2"
    },
    "109": {
      "op": "MSTORE"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "112": {
      "op": "ADD"
    },
    "113": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4E"
    },
    "115": {
      "op": "JUMP"
    }
  },
  "sha1": "f1b3c52ab4cf789bb0a7b3174955a65efca04126",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Ownable {\n  modifier onlyOwner() {\n    require(isOwner(), \"Function accessible only by the owner\");\n    _;\n  }\n  address private _owner;\n  constructor() { _owner = msg.sender; }\n  function owner() public view returns(address) { return _owner; }  \n  function isOwner() public view returns(bool) { return msg.sender == _owner; }\n}",
  "sourceMap": "74:346:2:-:0;;;228:38;;;;;;;;;-1:-1:-1;244:6:2;:19;;-1:-1:-1;;;;;;244:19:2;253:10;244:19;;;74:346;;;;;;",
  "sourcePath": "contracts/Ownable.sol",
  "type": "contract"
}