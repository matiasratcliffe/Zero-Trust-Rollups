{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brokerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "apiProviderAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "requestSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "brokerContract",
      "outputs": [
        {
          "internalType": "contract ExecutionBroker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPIResponseDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "processResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provider",
      "outputs": [
        {
          "internalType": "contract APIProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "postProcessingGas",
          "type": "uint256"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
    "1": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/Math.sol",
    "2": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/SignedMath.sol",
    "3": "contracts/APIConsumer.sol",
    "4": "contracts/APIProvider.sol",
    "5": "contracts/BaseClient.sol",
    "7": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIConsumer.sol",
    "exportedSymbols": {
      "APIConsumer": [
        181
      ],
      "APIProvider": [
        237
      ],
      "APIResponse": [
        12
      ],
      "BaseClient": [
        633
      ],
      "ExecutionBroker": [
        2236
      ],
      "Input": [
        7
      ],
      "Math": [
        1542
      ],
      "Ownable": [
        676
      ],
      "Request": [
        1669
      ],
      "SignedMath": [
        1647
      ],
      "Strings": [
        466
      ],
      "Transferable": [
        2320
      ]
    },
    "id": 182,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:3"
      },
      {
        "absolutePath": "contracts/APIProvider.sol",
        "file": "./APIProvider.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 238,
        "src": "70:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseClient.sol",
        "file": "./BaseClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 634,
        "src": "98:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 467,
        "src": "126:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Input",
        "id": 7,
        "members": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "apiIdentifier",
            "nameLocation": "206:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 7,
            "src": "199:20:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "199:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Input",
        "nameLocation": "187:5:3",
        "nodeType": "StructDefinition",
        "scope": 182,
        "src": "180:42:3",
        "visibility": "public"
      },
      {
        "canonicalName": "APIResponse",
        "id": 12,
        "members": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "response",
            "nameLocation": "383:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "377:14:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 8,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "377:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "403:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "397:15:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 10,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "397:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "APIResponse",
        "nameLocation": "231:11:3",
        "nodeType": "StructDefinition",
        "scope": 182,
        "src": "224:191:3",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "BaseClient",
              "nameLocations": [
                "441:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 633,
              "src": "441:10:3"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "441:10:3"
          }
        ],
        "canonicalName": "APIConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 181,
        "linearizedBaseContracts": [
          181,
          633,
          676
        ],
        "name": "APIConsumer",
        "nameLocation": "426:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "085d4883",
            "id": 17,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "478:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "459:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_APIProvider_$237",
              "typeString": "contract APIProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "APIProvider",
                "nameLocations": [
                  "459:11:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 237,
                "src": "459:11:3"
              },
              "referencedDeclaration": 237,
              "src": "459:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_APIProvider_$237",
                "typeString": "contract APIProvider"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "586:59:3",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "596:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$237",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29,
                          "name": "apiProviderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "619:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28,
                        "name": "APIProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "607:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_APIProvider_$237_$",
                          "typeString": "type(contract APIProvider)"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "607:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$237",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "src": "596:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_APIProvider_$237",
                      "typeString": "contract APIProvider"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "596:42:3"
                }
              ]
            },
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "brokerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "571:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23,
                  "name": "BaseClient",
                  "nameLocations": [
                    "560:10:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 633,
                  "src": "560:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "560:25:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "brokerAddress",
                  "nameLocation": "517:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "509:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "apiProviderAddress",
                  "nameLocation": "540:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "532:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:51:3"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:3"
            },
            "scope": 181,
            "src": "497:148:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "748:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "785:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "794:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "765:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_APIConsumer_$181_$",
                          "typeString": "type(contract super APIConsumer)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "771:13:3",
                      "memberName": "submitRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 574,
                      "src": "765:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "758:45:3"
                }
              ]
            },
            "functionSelector": "877f0ad0",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "715:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 645,
                  "src": "715:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:9:3"
              }
            ],
            "name": "submitRequest",
            "nameLocation": "660:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "payment",
                  "nameLocation": "679:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "674:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "701:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "688:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:34:3"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "742:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:6:3"
            },
            "scope": 181,
            "src": "651:159:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              517
            ],
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "928:236:3",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "951:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "938:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                        "typeString": "struct Input"
                      },
                      "typeName": {
                        "id": 64,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63,
                          "name": "Input",
                          "nameLocations": [
                            "938:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7,
                          "src": "938:5:3"
                        },
                        "referencedDeclaration": 7,
                        "src": "938:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$7_storage_ptr",
                          "typeString": "struct Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "970:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 69,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "982:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                              "typeString": "type(struct Input storage pointer)"
                            }
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "981:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 66,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "959:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "963:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "959:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                      "typeString": "struct Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "938:51:3"
                },
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "apiResponse",
                      "nameLocation": "1018:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "999:30:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                        "typeString": "struct APIResponse"
                      },
                      "typeName": {
                        "id": 74,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73,
                          "name": "APIResponse",
                          "nameLocations": [
                            "999:11:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "999:11:3"
                        },
                        "referencedDeclaration": 12,
                        "src": "999:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                          "typeString": "struct APIResponse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1043:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79,
                            "name": "APIResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1056:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                              "typeString": "type(struct APIResponse storage pointer)"
                            }
                          }
                        ],
                        "id": 80,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1055:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 76,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1032:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1036:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1032:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                      "typeString": "struct APIResponse memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "999:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84,
                        "name": "apiResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1103:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "1136:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                                "typeString": "struct Input memory"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1142:13:3",
                            "memberName": "apiIdentifier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "1136:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 85,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1116:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_APIProvider_$237",
                              "typeString": "contract APIProvider"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1125:10:3",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 236,
                          "src": "1116:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (string memory) view external returns (address)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1116:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83,
                      "name": "_verifySignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1086:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_APIResponse_$12_memory_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (struct APIResponse memory,address) pure returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "1079:78:3"
                }
              ]
            },
            "functionSelector": "c91c7b37",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkResult",
            "nameLocation": "825:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 59,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "899:8:3"
            },
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "852:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "837:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "878:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "863:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:53:3"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "922:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:6:3"
            },
            "scope": 181,
            "src": "816:348:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              522
            ],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1254:49:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b737472696e67206170694964656e7469666965723b7d",
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1271:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_04fd13a6b1d6c82cd5b6aedd525b1a7a6a577755aa9866396743ebc8496a7809",
                      "typeString": "literal_string \"{string apiIdentifier;}\""
                    },
                    "value": "{string apiIdentifier;}"
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "1264:32:3"
                }
              ]
            },
            "functionSelector": "2896de13",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputDataStructure",
            "nameLocation": "1183:21:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1216:8:3"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:2:3"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1239:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:15:3"
            },
            "scope": 181,
            "src": "1174:129:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1386:60:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b627974657320726573706f6e73653b206279746573207369676e61747572653b7d",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1403:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b95deadd81ec52cdb162e7f2c8022c7a7d0e133a99baea28e16749990e4c07c3",
                      "typeString": "literal_string \"{bytes response; bytes signature;}\""
                    },
                    "value": "{bytes response; bytes signature;}"
                  },
                  "functionReturnParameters": 106,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1396:43:3"
                }
              ]
            },
            "functionSelector": "5b7fec0b",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAPIResponseDataStructure",
            "nameLocation": "1318:27:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:3"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1371:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:15:3"
            },
            "scope": 181,
            "src": "1309:137:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1554:313:3",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "prefixedHash",
                      "nameLocation": "1572:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1564:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1614:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n"
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 128,
                                    "name": "apiResponse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 113,
                                    "src": "1665:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                      "typeString": "struct APIResponse memory"
                                    }
                                  },
                                  "id": 129,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1677:8:3",
                                  "memberName": "response",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "1665:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1686:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1665:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 126,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "1648:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$466_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1656:8:3",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 296,
                              "src": "1648:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:45:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 132,
                              "name": "apiResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1695:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                "typeString": "struct APIResponse memory"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1707:8:3",
                            "memberName": "response",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "1695:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 123,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1597:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1601:12:3",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1597:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1597:119:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 122,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1587:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:130:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1564:153:3"
                },
                {
                  "assignments": [
                    138,
                    140,
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1736:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1728:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1747:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1739:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1739:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "1756:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1750:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 144,
                          "name": "apiResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1777:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                            "typeString": "struct APIResponse memory"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1789:9:3",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "1777:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 143,
                      "name": "_splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1761:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:72:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 149,
                              "name": "prefixedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "1827:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 150,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "1841:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 151,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1844:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 152,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "1847:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 148,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "1817:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 154,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1853:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1817:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 156,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1816:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "1809:51:3"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifySignature",
            "nameLocation": "1461:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "apiResponse",
                  "nameLocation": "1497:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1478:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                    "typeString": "struct APIResponse"
                  },
                  "typeName": {
                    "id": 112,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 111,
                      "name": "APIResponse",
                      "nameLocations": [
                        "1478:11:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "1478:11:3"
                    },
                    "referencedDeclaration": 12,
                    "src": "1478:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                      "typeString": "struct APIResponse"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1518:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1510:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1477:48:3"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1548:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:6:3"
            },
            "scope": 181,
            "src": "1452:415:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1975:243:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 171,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "1993:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2003:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1993:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2013:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "1993:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1985:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:59:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2063:149:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2077:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2088:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2088:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2082:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2082:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "2077:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2120:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2135:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2146:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2131:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2131:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2125:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2125:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "2120:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2163:39:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2173:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "2186:9:3"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2197:2:3",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2182:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2182:18:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2176:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2176:25:3"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "2168:4:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2168:34:3"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "2163:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 164,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2077:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 166,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2120:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 161,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2092:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 161,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2135:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 161,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2186:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 168,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2163:1:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 178,
                  "nodeType": "InlineAssembly",
                  "src": "2054:158:3"
                }
              ]
            },
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_splitSignature",
            "nameLocation": "1882:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1911:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1898:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1897:24:3"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1952:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1944:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1963:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1955:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1972:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1966:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1943:31:3"
            },
            "scope": 181,
            "src": "1873:345:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 182,
        "src": "417:1804:3",
        "usedErrors": []
      }
    ],
    "src": "37:2184:3"
  },
  "bytecode": "",
  "bytecodeSha1": "97c513dff986802d1b6c4ae1fa3283c49a5a27c8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "APIConsumer",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Math.log10": {
          "33": [
            10267,
            10284,
            false
          ],
          "34": [
            10383,
            10400,
            false
          ],
          "35": [
            10499,
            10516,
            false
          ],
          "36": [
            10615,
            10631,
            false
          ],
          "37": [
            10728,
            10744,
            false
          ],
          "38": [
            10841,
            10857,
            false
          ],
          "39": [
            10954,
            10970,
            false
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "30": [
            1993,
            2015,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.submitRequest": {
          "32": [
            962,
            1006,
            true
          ]
        },
        "BaseClient.withdrawFunds": {
          "31": [
            1460,
            1490,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Strings.toString": {
          "12": [
            851,
            856
          ],
          "13": [
            1035,
            1046
          ],
          "14": [
            1113,
            1126
          ]
        }
      },
      "1": {
        "Math.log10": {
          "16": [
            10304,
            10321
          ],
          "17": [
            10339,
            10351
          ],
          "18": [
            10420,
            10437
          ],
          "19": [
            10455,
            10467
          ],
          "20": [
            10536,
            10553
          ],
          "21": [
            10571,
            10583
          ],
          "22": [
            10651,
            10667
          ],
          "23": [
            10685,
            10696
          ],
          "24": [
            10764,
            10780
          ],
          "25": [
            10798,
            10809
          ],
          "26": [
            10877,
            10893
          ],
          "27": [
            10911,
            10922
          ],
          "28": [
            10990,
            11001
          ],
          "29": [
            11035,
            11048
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "15": [
            1985,
            2044
          ]
        },
        "APIConsumer._verifySignature": {
          "11": [
            1809,
            1860
          ]
        },
        "APIConsumer.checkResult": {
          "10": [
            1079,
            1157
          ]
        },
        "APIConsumer.getAPIResponseDataStructure": {
          "8": [
            1396,
            1439
          ]
        },
        "APIConsumer.getInputDataStructure": {
          "0": [
            1264,
            1296
          ]
        },
        "APIConsumer.submitRequest": {
          "9": [
            758,
            803
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.cancelRequest": {
          "4": [
            1275,
            1314
          ]
        },
        "BaseClient.submitRequest": {
          "5": [
            954,
            1029
          ],
          "6": [
            1136,
            1168
          ],
          "7": [
            1178,
            1194
          ]
        },
        "BaseClient.withdrawFunds": {
          "3": [
            1452,
            1513
          ]
        }
      },
      "7": {
        "Ownable.isOwner": {
          "2": [
            378,
            405
          ]
        },
        "Ownable.owner": {
          "1": [
            310,
            323
          ]
        }
      }
    }
  },
  "dependencies": [
    "APIProvider",
    "BaseClient",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Math",
    "Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/SignedMath",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Strings"
  ],
  "deployedBytecode": "6080604052600436106100c25760003560e01c8063877f0ad01161007f5780638f32d59b116100595780638f32d59b1461020c578063c2c562451461022c578063c91c7b371461024c578063cb3927471461026c57600080fd5b8063877f0ad0146101db5780638d68cf59146101a35780638da5cb5b146101ee57600080fd5b8063085d4883146100c7578063155dd5ee146101045780632896de13146101345780633015394c1461018357806343bb58de146101a55780635b7fec0b146101c6575b600080fd5b3480156100d357600080fd5b506002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061012461011f366004610964565b61028c565b60405190151581526020016100fb565b34801561014057600080fd5b5060408051808201909152601781527f7b737472696e67206170694964656e7469666965723b7d00000000000000000060208201525b6040516100fb91906109cd565b34801561018f57600080fd5b506101a361019e366004610964565b610359565b005b6101b86101b3366004610a8c565b6103f6565b6040519081526020016100fb565b3480156101d257600080fd5b5061017661052a565b6101b86101e9366004610adc565b61054a565b3480156101fa57600080fd5b506000546001600160a01b03166100e7565b34801561021857600080fd5b506000546001600160a01b03163314610124565b34801561023857600080fd5b506001546100e7906001600160a01b031681565b34801561025857600080fd5b50610124610267366004610b6c565b61058a565b34801561027857600080fd5b506101a3610287366004610bd8565b610632565b600080546001600160a01b031633146102c05760405162461bcd60e51b81526004016102b790610c1a565b60405180910390fd5b814710156103055760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016102b7565b6040513390600090829085908381818185875af1925050503d8060008114610349576040519150601f19603f3d011682016040523d82523d6000602084013e61034e565b606091505b509095945050505050565b6000546001600160a01b031633146103835760405162461bcd60e51b81526004016102b790610c1a565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610c62565b5050565b600080546001600160a01b031633146104215760405162461bcd60e51b81526004016102b790610c1a565b61042b4734610c8b565b84111561046f5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016102b7565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a9087906104a49088908890600401610cac565b60206040518083038185885af11580156104c2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104e79190610cce565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c8160405161051a91815260200190565b60405180910390a1949350505050565b6060604051806060016040528060228152602001610ead60229139905090565b600080546001600160a01b031633146105755760405162461bcd60e51b81526004016102b790610c1a565b610581838360006103f6565b90505b92915050565b60008061059985870187610ce7565b905060006105a984860186610d81565b600254835160405163bf40fac160e01b81529293506106279284926001600160a01b03169163bf40fac1916105e191906004016109cd565b602060405180830381865afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610e28565b6106a9565b979650505050505050565b6001546001600160a01b031633146103f25760405162461bcd60e51b815260206004820152603460248201527f43616e206f6e6c792062652063616c6c65642062792074686520726567697374604482015273195c995908189c9bdad95c8818dbdb9d1c9858dd60621b60648201526084016102b7565b6000806106ba846000015151610785565b84516040516106cd929190602001610e51565b60405160208183030381529060405280519060200120905060008060006106f78760200151610818565b925092509250856001600160a01b031660018583868660405160008152602001604052604051610743949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610765573d6000803e3d6000fd5b505050602060405103516001600160a01b03161494505050505092915050565b606060006107928361088c565b600101905060008167ffffffffffffffff8111156107b2576107b26109e0565b6040519080825280601f01601f1916602001820160405280156107dc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846107e657509392505050565b6000806000835160411461086e5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016102b7565b50505060208101516040820151606090920151909260009190911a90565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106108cb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106108f7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061091557662386f26fc10000830492506010015b6305f5e100831061092d576305f5e100830492506008015b612710831061094157612710830492506004015b60648310610953576064830492506002015b600a83106105845760010192915050565b60006020828403121561097657600080fd5b5035919050565b60005b83811015610998578181015183820152602001610980565b50506000910152565b600081518084526109b981602086016020860161097d565b601f01601f19169290920160200192915050565b60208152600061058160208301846109a1565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610a1157610a116109e0565b604051601f8501601f19908116603f01168101908282118183101715610a3957610a396109e0565b81604052809350858152868686011115610a5257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610a7d57600080fd5b610581838335602085016109f6565b600080600060608486031215610aa157600080fd5b83359250602084013567ffffffffffffffff811115610abf57600080fd5b610acb86828701610a6c565b925050604084013590509250925092565b60008060408385031215610aef57600080fd5b82359150602083013567ffffffffffffffff811115610b0d57600080fd5b610b1985828601610a6c565b9150509250929050565b60008083601f840112610b3557600080fd5b50813567ffffffffffffffff811115610b4d57600080fd5b602083019150836020828501011115610b6557600080fd5b9250929050565b60008060008060408587031215610b8257600080fd5b843567ffffffffffffffff80821115610b9a57600080fd5b610ba688838901610b23565b90965094506020870135915080821115610bbf57600080fd5b50610bcc87828801610b23565b95989497509550505050565b60008060208385031215610beb57600080fd5b823567ffffffffffffffff811115610c0257600080fd5b610c0e85828601610b23565b90969095509350505050565b60208082526028908201527f46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206040820152676f776e657220212160c01b606082015260800190565b600060208284031215610c7457600080fd5b81518015158114610c8457600080fd5b9392505050565b8082018082111561058457634e487b7160e01b600052601160045260246000fd5b604081526000610cbf60408301856109a1565b90508260208301529392505050565b600060208284031215610ce057600080fd5b5051919050565b600060208284031215610cf957600080fd5b813567ffffffffffffffff80821115610d1157600080fd5b9083019060208286031215610d2557600080fd5b604051602081018181108382111715610d4057610d406109e0565b604052823582811115610d5257600080fd5b80840193505085601f840112610d6757600080fd5b610d76868435602086016109f6565b815295945050505050565b600060208284031215610d9357600080fd5b813567ffffffffffffffff80821115610dab57600080fd5b9083019060408286031215610dbf57600080fd5b604051604081018181108382111715610dda57610dda6109e0565b604052823582811115610dec57600080fd5b610df887828601610a6c565b825250602083013582811115610e0d57600080fd5b610e1987828601610a6c565b60208301525095945050505050565b600060208284031215610e3a57600080fd5b81516001600160a01b0381168114610c8457600080fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008351610e8981601a85016020880161097d565b835190830190610ea081601a84016020880161097d565b01601a0194935050505056fe7b627974657320726573706f6e73653b206279746573207369676e61747572653b7da26469706673582212209186446b679fcbcd639a8d50f80102190eb61c8bbf699fabdca7ad6984b7a0a264736f6c63430008130033",
  "deployedSourceMap": "417:1804:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:27;;;;;;;;;;-1:-1:-1;459:27:3;;;;-1:-1:-1;;;;;459:27:3;;;;;;-1:-1:-1;;;;;197:32:9;;;179:51;;167:2;152:18;459:27:3;;;;;;;;1375:279:5;;;;;;;;;;-1:-1:-1;1375:279:5;;;;;:::i;:::-;;:::i;:::-;;;591:14:9;;584:22;566:41;;554:2;539:18;1375:279:5;426:187:9;1174:129:3;;;;;;;;;;-1:-1:-1;1264:32:3;;;;;;;;;;;;;;;;;1174:129;;;;;;;:::i;1207:114:5:-;;;;;;;;;;-1:-1:-1;1207:114:5;;;;;:::i;:::-;;:::i;:::-;;823:378;;;;;;:::i;:::-;;:::i;:::-;;;2974:25:9;;;2962:2;2947:18;823:378:5;2828:177:9;1309:137:3;;;;;;;;;;;;;:::i;651:159::-;;;;;;:::i;:::-;;:::i;262:64:7:-;;;;;;;;;;-1:-1:-1;299:7:7;317:6;-1:-1:-1;;;;;317:6:7;262:64;;331:77;;;;;;;;;;-1:-1:-1;370:4:7;399:6;-1:-1:-1;;;;;399:6:7;385:10;:20;331:77;;175:37:5;;;;;;;;;;-1:-1:-1;175:37:5;;;;-1:-1:-1;;;;;175:37:5;;;816:348:3;;;;;;;;;;-1:-1:-1;816:348:3;;;;;:::i;:::-;;:::i;737:80:5:-;;;;;;;;;;-1:-1:-1;737:80:5;;;;;:::i;:::-;;:::i;1375:279::-;1436:4;399:6:7;;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;;;;;;;;;1485:5:5::1;1460:21;:30;;1452:61;;;::::0;-1:-1:-1;;;1452:61:5;;5942:2:9;1452:61:5::1;::::0;::::1;5924:21:9::0;5981:2;5961:18;;;5954:30;-1:-1:-1;;;6000:18:9;;;5993:48;6058:18;;1452:61:5::1;5740:342:9::0;1452:61:5::1;1595:28;::::0;1555:10:::1;::::0;1523:21:::1;::::0;1555:10;;1613:5;;1523:21;1595:28;1523:21;1595:28;1613:5;1555:10;1595:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1576:47:5;;1375:279;-1:-1:-1;;;;;1375:279:5:o;1207:114::-;370:4:7;399:6;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;1275:14:5::1;::::0;:39:::1;::::0;-1:-1:-1;;;1275:39:5;;::::1;::::0;::::1;2974:25:9::0;;;-1:-1:-1;;;;;1275:14:5;;::::1;::::0;:28:::1;::::0;2947:18:9;;1275:39:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1207:114:::0;:::o;823:378::-;938:4;399:6:7;;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;973:33:5::1;985:21;973:9;:33;:::i;:::-;962:7;:44;;954:75;;;::::0;-1:-1:-1;;;954:75:5;;5942:2:9;954:75:5::1;::::0;::::1;5924:21:9::0;5981:2;5961:18;;;5954:30;-1:-1:-1;;;6000:18:9;;;5993:48;6058:18;;954:75:5::1;5740:342:9::0;954:75:5::1;1056:14;::::0;:70:::1;::::0;-1:-1:-1;;;1056:70:5;;1039:14:::1;::::0;-1:-1:-1;;;;;1056:14:5::1;::::0;:28:::1;::::0;1092:7;;1056:70:::1;::::0;1101:5;;1108:17;;1056:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1039:87;;1141:27;1158:9;1141:27;;;;2974:25:9::0;;2962:2;2947:18;;2828:177;1141:27:5::1;;;;;;;;1185:9:::0;823:378;-1:-1:-1;;;;823:378:5:o;1309:137:3:-;1371:13;1396:43;;;;;;;;;;;;;;;;;;;1309:137;:::o;651:159::-;742:4;399:6:7;;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;765:38:3::1;785:7;794:5;801:1;765:19;:38::i;:::-;758:45;;186:1:7;651:159:3::0;;;;:::o;816:348::-;922:4;;959:30;;;;970:9;959:30;:::i;:::-;938:51;-1:-1:-1;999:30:3;1032:37;;;;1043:10;1032:37;:::i;:::-;1116:8;;1136:19;;1116:40;;-1:-1:-1;;;1116:40:3;;999:70;;-1:-1:-1;1086:71:3;;999:70;;-1:-1:-1;;;;;1116:8:3;;:19;;:40;;1136:19;1116:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1086:16;:71::i;:::-;1079:78;816:348;-1:-1:-1;;;;;;;816:348:3:o;737:80:5:-;326:14;;-1:-1:-1;;;;;326:14:5;304:10;:37;296:102;;;;-1:-1:-1;;;296:102:5;;9603:2:9;296:102:5;;;9585:21:9;9642:2;9622:18;;;9615:30;9681:34;9661:18;;;9654:62;-1:-1:-1;;;9732:18:9;;;9725:50;9792:19;;296:102:5;9401:416:9;1452:415:3;1548:4;1564:20;1648:45;1665:11;:20;;;:27;1648:16;:45::i;:::-;1695:20;;1597:119;;;;;1695:20;1597:119;;;:::i;:::-;;;;;;;;;;;;;1587:130;;;;;;1564:153;;1728:9;1739;1750:7;1761:38;1777:11;:21;;;1761:15;:38::i;:::-;1727:72;;;;;;1853:6;-1:-1:-1;;;;;1817:42:3;:32;1827:12;1841:1;1844;1847;1817:32;;;;;;;;;;;;;;;;;10755:25:9;;;10828:4;10816:17;;;;10811:2;10796:18;;10789:45;10865:2;10850:18;;10843:34;10908:2;10893:18;;10886:34;10742:3;10727:19;;10528:398;1817:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1817:42:3;;1809:51;;;;;;1452:415;;;;:::o;447:696:0:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:0;-1:-1:-1;604:41:0;-1:-1:-1;765:28:0;;;781:2;765:28;820:280;-1:-1:-1;;851:5:0;-1:-1:-1;;;985:2:0;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:0;820:280;1064:21;-1:-1:-1;1120:6:0;447:696;-1:-1:-1;;;447:696:0:o;1873:345:3:-;1944:9;1955;1966:7;1993:9;:16;2013:2;1993:22;1985:59;;;;-1:-1:-1;;;1985:59:3;;11265:2:9;1985:59:3;;;11247:21:9;11304:2;11284:18;;;11277:30;11343:26;11323:18;;;11316:54;11387:18;;1985:59:3;11063:348:9;1985:59:3;-1:-1:-1;;;2103:2:3;2088:18;;2082:25;2146:2;2131:18;;2125:25;2197:2;2182:18;;;2176:25;2082;;2173:1;2168:34;;;;;1873:345::o;10139:916:1:-;10192:7;;-1:-1:-1;;;10267:17:1;;10263:103;;-1:-1:-1;;;10304:17:1;;;-1:-1:-1;10349:2:1;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:1;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:1;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:1;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:1;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:1;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:1:o;241:180:9:-;300:6;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;-1:-1:-1;392:23:9;;241:180;-1:-1:-1;241:180:9:o;618:250::-;703:1;713:113;727:6;724:1;721:13;713:113;;;803:11;;;797:18;784:11;;;777:39;749:2;742:10;713:113;;;-1:-1:-1;;860:1:9;842:16;;835:27;618:250::o;873:271::-;915:3;953:5;947:12;980:6;975:3;968:19;996:76;1065:6;1058:4;1053:3;1049:14;1042:4;1035:5;1031:16;996:76;:::i;:::-;1126:2;1105:15;-1:-1:-1;;1101:29:9;1092:39;;;;1133:4;1088:50;;873:271;-1:-1:-1;;873:271:9:o;1149:220::-;1298:2;1287:9;1280:21;1261:4;1318:45;1359:2;1348:9;1344:18;1336:6;1318:45;:::i;1374:127::-;1435:10;1430:3;1426:20;1423:1;1416:31;1466:4;1463:1;1456:15;1490:4;1487:1;1480:15;1506:631;1570:5;1600:18;1641:2;1633:6;1630:14;1627:40;;;1647:18;;:::i;:::-;1722:2;1716:9;1690:2;1776:15;;-1:-1:-1;;1772:24:9;;;1798:2;1768:33;1764:42;1752:55;;;1822:18;;;1842:22;;;1819:46;1816:72;;;1868:18;;:::i;:::-;1908:10;1904:2;1897:22;1937:6;1928:15;;1967:6;1959;1952:22;2007:3;1998:6;1993:3;1989:16;1986:25;1983:45;;;2024:1;2021;2014:12;1983:45;2074:6;2069:3;2062:4;2054:6;2050:17;2037:44;2129:1;2122:4;2113:6;2105;2101:19;2097:30;2090:41;;;;1506:631;;;;;:::o;2142:220::-;2184:5;2237:3;2230:4;2222:6;2218:17;2214:27;2204:55;;2255:1;2252;2245:12;2204:55;2277:79;2352:3;2343:6;2330:20;2323:4;2315:6;2311:17;2277:79;:::i;2367:456::-;2453:6;2461;2469;2522:2;2510:9;2501:7;2497:23;2493:32;2490:52;;;2538:1;2535;2528:12;2490:52;2574:9;2561:23;2551:33;;2635:2;2624:9;2620:18;2607:32;2662:18;2654:6;2651:30;2648:50;;;2694:1;2691;2684:12;2648:50;2717:49;2758:7;2749:6;2738:9;2734:22;2717:49;:::i;:::-;2707:59;;;2813:2;2802:9;2798:18;2785:32;2775:42;;2367:456;;;;;:::o;3010:388::-;3087:6;3095;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3200:9;3187:23;3177:33;;3261:2;3250:9;3246:18;3233:32;3288:18;3280:6;3277:30;3274:50;;;3320:1;3317;3310:12;3274:50;3343:49;3384:7;3375:6;3364:9;3360:22;3343:49;:::i;:::-;3333:59;;;3010:388;;;;;:::o;3843:347::-;3894:8;3904:6;3958:3;3951:4;3943:6;3939:17;3935:27;3925:55;;3976:1;3973;3966:12;3925:55;-1:-1:-1;3999:20:9;;4042:18;4031:30;;4028:50;;;4074:1;4071;4064:12;4028:50;4111:4;4103:6;4099:17;4087:29;;4163:3;4156:4;4147:6;4139;4135:19;4131:30;4128:39;4125:59;;;4180:1;4177;4170:12;4125:59;3843:347;;;;;:::o;4195:717::-;4285:6;4293;4301;4309;4362:2;4350:9;4341:7;4337:23;4333:32;4330:52;;;4378:1;4375;4368:12;4330:52;4418:9;4405:23;4447:18;4488:2;4480:6;4477:14;4474:34;;;4504:1;4501;4494:12;4474:34;4543:58;4593:7;4584:6;4573:9;4569:22;4543:58;:::i;:::-;4620:8;;-1:-1:-1;4517:84:9;-1:-1:-1;4708:2:9;4693:18;;4680:32;;-1:-1:-1;4724:16:9;;;4721:36;;;4753:1;4750;4743:12;4721:36;;4792:60;4844:7;4833:8;4822:9;4818:24;4792:60;:::i;:::-;4195:717;;;;-1:-1:-1;4871:8:9;-1:-1:-1;;;;4195:717:9:o;4917:409::-;4987:6;4995;5048:2;5036:9;5027:7;5023:23;5019:32;5016:52;;;5064:1;5061;5054:12;5016:52;5104:9;5091:23;5137:18;5129:6;5126:30;5123:50;;;5169:1;5166;5159:12;5123:50;5208:58;5258:7;5249:6;5238:9;5234:22;5208:58;:::i;:::-;5285:8;;5182:84;;-1:-1:-1;4917:409:9;-1:-1:-1;;;;4917:409:9:o;5331:404::-;5533:2;5515:21;;;5572:2;5552:18;;;5545:30;5611:34;5606:2;5591:18;;5584:62;-1:-1:-1;;;5677:2:9;5662:18;;5655:38;5725:3;5710:19;;5331:404::o;6297:277::-;6364:6;6417:2;6405:9;6396:7;6392:23;6388:32;6385:52;;;6433:1;6430;6423:12;6385:52;6465:9;6459:16;6518:5;6511:13;6504:21;6497:5;6494:32;6484:60;;6540:1;6537;6530:12;6484:60;6563:5;6297:277;-1:-1:-1;;;6297:277:9:o;6579:222::-;6644:9;;;6665:10;;;6662:133;;;6717:10;6712:3;6708:20;6705:1;6698:31;6752:4;6749:1;6742:15;6780:4;6777:1;6770:15;6806:289;6981:2;6970:9;6963:21;6944:4;7001:45;7042:2;7031:9;7027:18;7019:6;7001:45;:::i;:::-;6993:53;;7082:6;7077:2;7066:9;7062:18;7055:34;6806:289;;;;;:::o;7100:184::-;7170:6;7223:2;7211:9;7202:7;7198:23;7194:32;7191:52;;;7239:1;7236;7229:12;7191:52;-1:-1:-1;7262:16:9;;7100:184;-1:-1:-1;7100:184:9:o;7289:874::-;7368:6;7421:2;7409:9;7400:7;7396:23;7392:32;7389:52;;;7437:1;7434;7427:12;7389:52;7477:9;7464:23;7506:18;7547:2;7539:6;7536:14;7533:34;;;7563:1;7560;7553:12;7533:34;7586:22;;;;7642:2;7624:16;;;7620:25;7617:45;;;7658:1;7655;7648:12;7617:45;7691:2;7685:9;7733:2;7725:6;7721:15;7786:6;7774:10;7771:22;7766:2;7754:10;7751:18;7748:46;7745:72;;;7797:18;;:::i;:::-;7833:2;7826:22;7873:16;;7901;;;7898:36;;;7930:1;7927;7920:12;7898:36;7961:8;7957:2;7953:17;7943:27;;;8008:7;8001:4;7997:2;7993:13;7989:27;7979:55;;8030:1;8027;8020:12;7979:55;8058:73;8123:7;8118:2;8105:16;8100:2;8096;8092:11;8058:73;:::i;:::-;8043:89;;8050:6;7289:874;-1:-1:-1;;;;;7289:874:9:o;8168:933::-;8254:6;8307:2;8295:9;8286:7;8282:23;8278:32;8275:52;;;8323:1;8320;8313:12;8275:52;8363:9;8350:23;8392:18;8433:2;8425:6;8422:14;8419:34;;;8449:1;8446;8439:12;8419:34;8472:22;;;;8528:4;8510:16;;;8506:27;8503:47;;;8546:1;8543;8536:12;8503:47;8579:4;8573:11;8623:4;8615:6;8611:17;8678:6;8666:10;8663:22;8658:2;8646:10;8643:18;8640:46;8637:72;;;8689:18;;:::i;:::-;8725:4;8718:24;8767:16;;8795;;;8792:36;;;8824:1;8821;8814:12;8792:36;8852:44;8888:7;8877:8;8873:2;8869:17;8852:44;:::i;:::-;8844:6;8837:60;;8943:2;8939;8935:11;8922:25;8972:2;8962:8;8959:16;8956:36;;;8988:1;8985;8978:12;8956:36;9025:44;9061:7;9050:8;9046:2;9042:17;9025:44;:::i;:::-;9020:2;9008:15;;9001:69;-1:-1:-1;9012:6:9;8168:933;-1:-1:-1;;;;;8168:933:9:o;9106:290::-;9176:6;9229:2;9217:9;9208:7;9204:23;9200:32;9197:52;;;9245:1;9242;9235:12;9197:52;9271:16;;-1:-1:-1;;;;;9316:31:9;;9306:42;;9296:70;;9362:1;9359;9352:12;9822:701;10130:66;10125:3;10118:79;10100:3;10226:6;10220:13;10242:75;10310:6;10305:2;10300:3;10296:12;10289:4;10281:6;10277:17;10242:75;:::i;:::-;10377:13;;10336:16;;;;10399:76;10377:13;10461:2;10453:11;;10446:4;10434:17;;10399:76;:::i;:::-;10495:17;10514:2;10491:26;;9822:701;-1:-1:-1;;;;9822:701:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    417,
    2221
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x877F0AD0 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8F32D59B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xC2C56245 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xC91C7B37 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xCB392747 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x877F0AD0 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8D68CF59 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85D4883 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x2896DE13 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x43BB58DE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x5B7FEC0B EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x7B737472696E67206170694964656E7469666965723B7D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC054E53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3015394C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x42B SELFBALANCE CALLVALUE PUSH2 0xC8B JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x78F8AF25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF1F15E4A SWAP1 DUP8 SWAP1 PUSH2 0x4A4 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP PUSH32 0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C DUP2 PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEAD PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x581 DUP4 DUP4 PUSH1 0x0 PUSH2 0x3F6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x599 DUP6 DUP8 ADD DUP8 PUSH2 0xCE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5A9 DUP5 DUP7 ADD DUP7 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH2 0x627 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0x5E1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x195C995908189C9BDAD95C8818DBDB9D1C9858DD PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BA DUP5 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x785 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x6F7 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x818 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x743 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x765 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x792 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B2 JUMPI PUSH2 0x7B2 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7DC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x7E6 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x8CB JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x8F7 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x915 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x92D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x941 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x953 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x584 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x998 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x980 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x97D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x581 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xA11 JUMPI PUSH2 0xA11 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA39 JUMPI PUSH2 0xA39 PUSH2 0x9E0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x581 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACB DUP7 DUP3 DUP8 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB19 DUP6 DUP3 DUP7 ADD PUSH2 0xA6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA6 DUP9 DUP4 DUP10 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBCC DUP8 DUP3 DUP9 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0E DUP6 DUP3 DUP7 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6F776E6572202121 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xCBF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xD40 JUMPI PUSH2 0xD40 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP6 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD76 DUP7 DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD PUSH2 0x9F6 JUMP JUMPDEST DUP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xDDA JUMPI PUSH2 0xDDA PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF8 DUP8 DUP3 DUP7 ADD PUSH2 0xA6C JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE19 DUP8 DUP3 DUP7 ADD PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xE89 DUP2 PUSH1 0x1A DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x97D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xEA0 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x97D JUMP JUMPDEST ADD PUSH1 0x1A ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH28 0x627974657320726573706F6E73653B206279746573207369676E6174 PUSH22 0x72653B7DA26469706673582212209186446B679FCBCD PUSH4 0x9A8D50F8 ADD MUL NOT 0xE 0xB6 SHR DUP12 0xBF PUSH10 0x9FABDCA7AD6984B7A0A2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2"
    },
    "12": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x877F0AD0"
    },
    "25": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "36": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "47": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20C"
    },
    "51": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC2C56245"
    },
    "58": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22C"
    },
    "62": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC91C7B37"
    },
    "69": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24C"
    },
    "73": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB392747"
    },
    "80": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26C"
    },
    "84": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x877F0AD0"
    },
    "96": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB"
    },
    "100": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D68CF59"
    },
    "107": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A3"
    },
    "111": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE"
    },
    "122": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "127": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "128": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "129": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85D4883"
    },
    "134": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "138": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x155DD5EE"
    },
    "145": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "149": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "150": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2896DE13"
    },
    "156": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x134"
    },
    "160": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3015394C"
    },
    "167": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "168": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x183"
    },
    "171": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x43BB58DE"
    },
    "178": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A5"
    },
    "182": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5B7FEC0B"
    },
    "189": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "193": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "197": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "198": {
      "first_revert": true,
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "199": {
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "202": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3"
    },
    "206": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "REVERT",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "215": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "216": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "219": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "offset": [
        459,
        486
      ],
      "op": "AND",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "SUB"
    },
    "243": {
      "op": "SWAP1"
    },
    "244": {
      "op": "SWAP2"
    },
    "245": {
      "op": "AND"
    },
    "246": {
      "op": "DUP2"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "ADD"
    },
    "251": {
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "254": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SUB",
      "path": "3"
    },
    "258": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "259": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "RETURN",
      "path": "3"
    },
    "260": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "261": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "262": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "263": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "264": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110"
    },
    "267": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "268": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "270": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "271": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "REVERT",
      "path": "5"
    },
    "272": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "273": {
      "op": "POP"
    },
    "274": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x124"
    },
    "277": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F"
    },
    "280": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "281": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "283": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x964"
    },
    "286": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "287": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "288": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "291": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "292": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "293": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "295": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "296": {
      "op": "SWAP1"
    },
    "297": {
      "op": "ISZERO"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "DUP2"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB"
    },
    "307": {
      "op": "JUMP"
    },
    "308": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "309": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "310": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "DUP1",
      "path": "3"
    },
    "311": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "312": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "315": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "318": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "DUP1",
      "path": "3"
    },
    "319": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "REVERT",
      "path": "3"
    },
    "320": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "321": {
      "op": "POP"
    },
    "322": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "324": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "325": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "326": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "327": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "DUP3",
      "path": "3"
    },
    "328": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "ADD",
      "path": "3"
    },
    "329": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "330": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "331": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "332": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "334": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "335": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "336": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7B737472696E67206170694964656E7469666965723B7D000000000000000000"
    },
    "369": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "371": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "DUP3",
      "path": "3"
    },
    "372": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "ADD",
      "path": "3"
    },
    "373": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1264,
        1296
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "374": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "375": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "377": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "378": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB"
    },
    "381": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "382": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "383": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1174,
        1303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9CD"
    },
    "386": {
      "fn": "APIConsumer.getInputDataStructure",
      "jump": "i",
      "offset": [
        1174,
        1303
      ],
      "op": "JUMP",
      "path": "3"
    },
    "387": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "388": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "389": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "DUP1",
      "path": "5"
    },
    "390": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "391": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F"
    },
    "394": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "395": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "397": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "DUP1",
      "path": "5"
    },
    "398": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "REVERT",
      "path": "5"
    },
    "399": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "404": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19E"
    },
    "407": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "408": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "410": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x964"
    },
    "413": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "414": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "415": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x359"
    },
    "418": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "419": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "420": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "STOP",
      "path": "5"
    },
    "421": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "422": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8"
    },
    "425": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B3"
    },
    "428": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "429": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "431": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8C"
    },
    "434": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "435": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "436": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F6"
    },
    "439": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "440": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "441": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "443": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "444": {
      "op": "SWAP1"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB"
    },
    "453": {
      "op": "JUMP"
    },
    "454": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "456": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "457": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "458": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D2"
    },
    "461": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "462": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "464": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "465": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "REVERT",
      "path": "3"
    },
    "466": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "467": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "POP",
      "path": "3"
    },
    "468": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x176"
    },
    "471": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52A"
    },
    "474": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "jump": "i",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "475": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "476": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8"
    },
    "479": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "482": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "483": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "485": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADC"
    },
    "488": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "489": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "490": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54A"
    },
    "493": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "494": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "495": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "496": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "DUP1",
      "path": "7"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "498": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "502": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "504": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "DUP1",
      "path": "7"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "REVERT",
      "path": "7"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "Ownable.owner",
      "offset": [
        299,
        306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "510": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 1
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "AND",
      "path": "7"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMP",
      "path": "7"
    },
    "524": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "525": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "526": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "527": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "528": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x218"
    },
    "531": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "532": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "534": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "535": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "REVERT",
      "path": "7"
    },
    "536": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "fn": "Ownable.isOwner",
      "offset": [
        370,
        374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "540": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 2
    },
    "541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "547": {
      "op": "SHL"
    },
    "548": {
      "op": "SUB"
    },
    "549": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "550": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "551": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "552": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x124"
    },
    "555": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "557": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "558": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "559": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "560": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x238"
    },
    "563": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "564": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "566": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "567": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "REVERT",
      "path": "5"
    },
    "568": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "572": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "573": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7"
    },
    "576": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "583": {
      "op": "SHL"
    },
    "584": {
      "op": "SUB"
    },
    "585": {
      "offset": [
        175,
        212
      ],
      "op": "AND",
      "path": "5"
    },
    "586": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "587": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "588": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "589": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "590": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "DUP1",
      "path": "3"
    },
    "591": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "592": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "595": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "596": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "598": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "DUP1",
      "path": "3"
    },
    "599": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "REVERT",
      "path": "3"
    },
    "600": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "605": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267"
    },
    "608": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "609": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "611": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "614": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "615": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "616": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58A"
    },
    "619": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "620": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "621": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "622": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "DUP1",
      "path": "5"
    },
    "623": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "624": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x278"
    },
    "627": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "628": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "630": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "DUP1",
      "path": "5"
    },
    "631": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "REVERT",
      "path": "5"
    },
    "632": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "637": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x287"
    },
    "640": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "641": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "643": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD8"
    },
    "646": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        737,
        817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "647": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "648": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x632"
    },
    "651": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        737,
        817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "652": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "653": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1436,
        1440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "655": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "656": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "663": {
      "op": "SHL"
    },
    "664": {
      "op": "SUB"
    },
    "665": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "666": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "667": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "668": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C0"
    },
    "671": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "672": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "674": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "683": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "684": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "686": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "687": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "690": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "691": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1A"
    },
    "694": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "695": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "696": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "698": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "699": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "DUP1",
      "path": "7"
    },
    "700": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "701": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SUB",
      "path": "7"
    },
    "702": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "703": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "704": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "705": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1485,
        1490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 3
    },
    "706": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1481
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "707": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1490
      ],
      "op": "LT",
      "path": "5"
    },
    "708": {
      "branch": 31,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1490
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "709": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x305"
    },
    "712": {
      "branch": 31,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "713": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "715": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "724": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "727": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "729": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "DUP3",
      "path": "5"
    },
    "730": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "ADD",
      "path": "5"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "736": {
      "op": "DUP3"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "763": {
      "op": "DUP3"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "772": {
      "op": "JUMP"
    },
    "773": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "774": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "776": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "777": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "CALLER",
      "path": "5"
    },
    "778": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "781": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "782": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "DUP3",
      "path": "5"
    },
    "783": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "784": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "DUP6",
      "path": "5"
    },
    "785": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "786": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "DUP4",
      "path": "5"
    },
    "787": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "788": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "DUP2",
      "path": "5"
    },
    "789": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "790": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "DUP6",
      "path": "5"
    },
    "791": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "792": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "GAS",
      "path": "5"
    },
    "793": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "CALL",
      "path": "5"
    },
    "794": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "795": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "796": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "797": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "798": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "799": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "800": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "802": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "803": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "EQ",
      "path": "5"
    },
    "804": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x349"
    },
    "807": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "808": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "810": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "811": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "812": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "813": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "815": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "NOT",
      "path": "5"
    },
    "816": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "818": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "819": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "820": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "AND",
      "path": "5"
    },
    "821": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP3",
      "path": "5"
    },
    "822": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "823": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "825": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "826": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "827": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP3",
      "path": "5"
    },
    "828": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "829": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "830": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "832": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "834": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP5",
      "path": "5"
    },
    "835": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "836": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "837": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34E"
    },
    "840": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMP",
      "path": "5"
    },
    "841": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "842": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "844": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "845": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "846": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1576,
        1623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "849": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1576,
        1623
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "850": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "o",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "857": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "858": {
      "fn": "Ownable.isOwner",
      "offset": [
        370,
        374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "860": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "870": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "871": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "872": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x383"
    },
    "875": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "876": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "878": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "887": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "888": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "890": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "891": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "894": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "895": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1A"
    },
    "898": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "899": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "900": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x1"
    },
    "902": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "903": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "905": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "906": {
      "op": "PUSH4",
      "value": "0xC054E53"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "915": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "916": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "918": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "SWAP1"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "932": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "933": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "AND",
      "path": "5"
    },
    "934": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "935": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1303
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3015394C"
    },
    "940": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1303
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "946": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "948": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "949": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "950": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP4",
      "path": "5"
    },
    "951": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SUB",
      "path": "5"
    },
    "952": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "953": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "955": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP8",
      "path": "5"
    },
    "956": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "GAS",
      "path": "5"
    },
    "957": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "CALL",
      "path": "5"
    },
    "958": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "959": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "960": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "961": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CE"
    },
    "964": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "965": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "966": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "968": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "969": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "970": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "971": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "973": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "REVERT",
      "path": "5"
    },
    "974": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "975": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "976": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "977": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "978": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "979": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "981": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "982": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "983": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "985": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "NOT",
      "path": "5"
    },
    "986": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "988": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP3",
      "path": "5"
    },
    "989": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "990": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "AND",
      "path": "5"
    },
    "991": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP3",
      "path": "5"
    },
    "992": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "993": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "994": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "996": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "997": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "998": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "999": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "1000": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1001": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F2"
    },
    "1004": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1005": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1006": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC62"
    },
    "1009": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1010": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1011": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "1012": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "POP",
      "path": "5"
    },
    "1013": {
      "fn": "BaseClient.cancelRequest",
      "jump": "o",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1014": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1015": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        938,
        942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1017": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1018": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "1028": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1029": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "1030": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x421"
    },
    "1033": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1034": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1036": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1045": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1046": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1048": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "1049": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "1052": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1053": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1A"
    },
    "1056": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1057": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1058": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x42B"
    },
    "1061": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        985,
        1006
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "1062": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        982
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1063": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8B"
    },
    "1066": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        973,
        1006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1067": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1068": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        969
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1069": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        1006
      ],
      "op": "GT",
      "path": "5"
    },
    "1070": {
      "branch": 32,
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        1006
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1071": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "1074": {
      "branch": 32,
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1075": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1077": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1086": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1089": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1091": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1092": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "ADD",
      "path": "5"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1098": {
      "op": "DUP3"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "MSTORE"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "1134": {
      "op": "JUMP"
    },
    "1135": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1136": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1138": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1139": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1141": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1142": {
      "op": "PUSH4",
      "value": "0x78F8AF25"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1151": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1152": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1154": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1053
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "op": "SUB"
    },
    "1163": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "AND",
      "path": "5"
    },
    "1164": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1165": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1084
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF1F15E4A"
    },
    "1170": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1084
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1171": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1092,
        1099
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1172": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1173": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A4"
    },
    "1176": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1177": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1101,
        1106
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1178": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1101,
        1106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1179": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1108,
        1125
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1180": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1108,
        1125
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1181": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1183": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1184": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCAC"
    },
    "1187": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1188": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1189": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1191": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1193": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1194": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1195": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1196": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SUB",
      "path": "5"
    },
    "1197": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1198": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1199": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1200": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "GAS",
      "path": "5"
    },
    "1201": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "CALL",
      "path": "5"
    },
    "1202": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1203": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1204": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1205": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C2"
    },
    "1208": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1209": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1210": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1212": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1213": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1214": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1215": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1217": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1218": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1219": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1220": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1221": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1222": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1223": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1224": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1226": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1227": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1228": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1230": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "NOT",
      "path": "5"
    },
    "1231": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1233": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1234": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1235": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "AND",
      "path": "5"
    },
    "1236": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1237": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1238": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1239": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1241": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1242": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1243": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1244": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1245": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1246": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E7"
    },
    "1249": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1250": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1251": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCCE"
    },
    "1254": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1255": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1256": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1257": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1258": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 6,
      "value": "0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C"
    },
    "1291": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1158,
        1167
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1292": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1294": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1295": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51A"
    },
    "1298": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1299": {
      "op": "DUP2"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "op": "SWAP1"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1307": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1309": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1310": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1311": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1312": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SUB",
      "path": "5"
    },
    "1313": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1314": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1315": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1185,
        1194
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 7
    },
    "1316": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "fn": "BaseClient.submitRequest",
      "jump": "o",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1322": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1323": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1371,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1325": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x40"
    },
    "1327": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1328": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1329": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1331": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "ADD",
      "path": "3"
    },
    "1332": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1334": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1335": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1336": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1338": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1339": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1340": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1342": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "ADD",
      "path": "3"
    },
    "1343": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAD"
    },
    "1346": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1348": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1349": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1350": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1351": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "POP",
      "path": "3"
    },
    "1352": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "offset": [
        1309,
        1446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1353": {
      "fn": "APIConsumer.getAPIResponseDataStructure",
      "jump": "o",
      "offset": [
        1309,
        1446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1354": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1355": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        742,
        746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1357": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1358": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "1368": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1369": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "1370": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x575"
    },
    "1373": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1374": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1376": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1385": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1386": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1388": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "1389": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "1392": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1393": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1A"
    },
    "1396": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1397": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1398": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        803
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x581"
    },
    "1401": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        785,
        792
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1402": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        794,
        799
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1403": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        801,
        802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1405": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        784
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "1408": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        765,
        803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1409": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1410": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        758,
        803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1411": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        758,
        803
      ],
      "op": "POP",
      "path": "3"
    },
    "1412": {
      "offset": [
        186,
        187
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1413": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1414": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1415": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "POP",
      "path": "3"
    },
    "1416": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "POP",
      "path": "3"
    },
    "1417": {
      "fn": "APIConsumer.submitRequest",
      "jump": "o",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1418": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1419": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        922,
        926
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1421": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        922,
        926
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1422": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x599"
    },
    "1425": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1426": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1427": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "ADD",
      "path": "3"
    },
    "1428": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        970,
        979
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1429": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE7"
    },
    "1432": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        959,
        989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1433": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1434": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        938,
        989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1438": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A9"
    },
    "1441": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1442": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1443": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "ADD",
      "path": "3"
    },
    "1444": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1043,
        1053
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1445": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD81"
    },
    "1448": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1032,
        1069
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1449": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1450": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x2"
    },
    "1452": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1453": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1454": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1455": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1457": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1458": {
      "op": "PUSH4",
      "value": "0xBF40FAC1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1467": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1468": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1469": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x627"
    },
    "1474": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1475": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1476": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "AND",
      "path": "3"
    },
    "1486": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1487": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1135
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBF40FAC1"
    },
    "1492": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1135
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1493": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E1"
    },
    "1496": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1497": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1498": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1500": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1501": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9CD"
    },
    "1504": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1505": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1506": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1508": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1510": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1511": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1512": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1513": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SUB",
      "path": "3"
    },
    "1514": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1515": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1516": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "GAS",
      "path": "3"
    },
    "1517": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1518": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1519": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1520": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1521": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5FE"
    },
    "1524": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1525": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1526": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1528": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1529": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1530": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1531": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1533": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1534": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1535": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1536": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1537": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1538": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1539": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1541": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1542": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1543": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1545": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "NOT",
      "path": "3"
    },
    "1546": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1548": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1549": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1550": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "AND",
      "path": "3"
    },
    "1551": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1552": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1553": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1554": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1556": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1557": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1558": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1559": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1560": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1561": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x622"
    },
    "1564": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1565": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1566": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE28"
    },
    "1569": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1570": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1571": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A9"
    },
    "1574": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1086,
        1157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1575": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1576": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1079,
        1157
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1577": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "op": "POP"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "fn": "APIConsumer.checkResult",
      "jump": "o",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1586": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1587": {
      "offset": [
        326,
        340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1589": {
      "fn": "BaseClient.processResult",
      "offset": [
        326,
        340
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "offset": [
        326,
        340
      ],
      "op": "AND",
      "path": "5"
    },
    "1599": {
      "offset": [
        304,
        314
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1600": {
      "offset": [
        304,
        341
      ],
      "op": "EQ",
      "path": "5"
    },
    "1601": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F2"
    },
    "1604": {
      "offset": [
        296,
        398
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1605": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1607": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "offset": [
        296,
        398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1616": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1621": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1622": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "ADD",
      "path": "5"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH20",
      "value": "0x195C995908189C9BDAD95C8818DBDB9D1C9858DD"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1695": {
      "op": "DUP3"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "1704": {
      "op": "JUMP"
    },
    "1705": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1706": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1548,
        1552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1708": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1584
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1709": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BA"
    },
    "1712": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1676
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1713": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1715": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "ADD",
      "path": "3"
    },
    "1716": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1717": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1718": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x785"
    },
    "1721": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1648,
        1693
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1722": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1693
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1723": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1724": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1725": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1727": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1728": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6CD"
    },
    "1731": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1732": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1733": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1734": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1736": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "ADD",
      "path": "3"
    },
    "1737": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE51"
    },
    "1740": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1597,
        1716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1741": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1742": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1744": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1745": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1747": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1748": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1749": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SUB",
      "path": "3"
    },
    "1750": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SUB",
      "path": "3"
    },
    "1751": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1752": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1753": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1754": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1756": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1757": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1758": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1759": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1760": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1762": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "ADD",
      "path": "3"
    },
    "1763": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1764": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1765": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1717
      ],
      "op": "POP",
      "path": "3"
    },
    "1766": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1728,
        1737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1768": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1739,
        1748
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1769": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1750,
        1757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1771": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F7"
    },
    "1774": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1788
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1775": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1777": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "ADD",
      "path": "3"
    },
    "1778": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1779": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x818"
    },
    "1782": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1761,
        1799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1783": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1784": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1785": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1786": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1787": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1788": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1789": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1790": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1853,
        1859
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 11
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "AND",
      "path": "3"
    },
    "1800": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1802": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1827,
        1839
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1803": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1841,
        1842
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1804": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1844,
        1845
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1805": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1847,
        1848
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1806": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1808": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1809": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1811": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1812": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1813": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1815": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1816": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1818": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1819": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1821": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1822": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "1825": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1826": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1827": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1828": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1829": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1830": {
      "op": "SWAP4"
    },
    "1831": {
      "op": "DUP5"
    },
    "1832": {
      "op": "MSTORE"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1835": {
      "op": "SWAP3"
    },
    "1836": {
      "op": "SWAP1"
    },
    "1837": {
      "op": "SWAP3"
    },
    "1838": {
      "op": "AND"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1841": {
      "op": "DUP5"
    },
    "1842": {
      "op": "ADD"
    },
    "1843": {
      "op": "MSTORE"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1846": {
      "op": "DUP4"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "MSTORE"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "MSTORE"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "SWAP1"
    },
    "1858": {
      "op": "JUMP"
    },
    "1859": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1860": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1862": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1864": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1865": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1867": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1868": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1869": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1870": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1871": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1872": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1873": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1874": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1875": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "GAS",
      "path": "3"
    },
    "1876": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1877": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1878": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1879": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1880": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x765"
    },
    "1883": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1884": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1885": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1887": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1888": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1889": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1890": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1892": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1893": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1894": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1895": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1896": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1897": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1899": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1901": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1902": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1903": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "AND",
      "path": "3"
    },
    "1913": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "EQ",
      "path": "3"
    },
    "1914": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1915": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "1916": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "1917": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "1918": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "1919": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "1920": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1921": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1922": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "POP",
      "path": "3"
    },
    "1923": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "POP",
      "path": "3"
    },
    "1924": {
      "fn": "APIConsumer._verifySignature",
      "jump": "o",
      "offset": [
        1452,
        1867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1925": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1926": {
      "fn": "Strings.toString",
      "offset": [
        503,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1928": {
      "fn": "Strings.toString",
      "offset": [
        552,
        566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1930": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x792"
    },
    "1933": {
      "fn": "Strings.toString",
      "offset": [
        580,
        585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1934": {
      "fn": "Strings.toString",
      "offset": [
        569,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "1937": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        569,
        586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1938": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1939": {
      "fn": "Strings.toString",
      "offset": [
        589,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1941": {
      "fn": "Strings.toString",
      "offset": [
        569,
        590
      ],
      "op": "ADD",
      "path": "0"
    },
    "1942": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1943": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "1944": {
      "fn": "Strings.toString",
      "offset": [
        604,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1946": {
      "fn": "Strings.toString",
      "offset": [
        638,
        644
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1947": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1956": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1957": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "GT",
      "path": "0"
    },
    "1958": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1959": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "1962": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1963": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "1966": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E0"
    },
    "1969": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        627,
        645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1970": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1973": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1974": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1975": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1976": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1977": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1978": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1979": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1981": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1982": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1984": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "NOT",
      "path": "0"
    },
    "1985": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "AND",
      "path": "0"
    },
    "1986": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1988": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1989": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1990": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1991": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1993": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1994": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1995": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1996": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DC"
    },
    "1999": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2000": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2002": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2003": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2004": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2005": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2006": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2007": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2008": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2009": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2010": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "fn": "Strings.toString",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2017": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2018": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "2019": {
      "fn": "Strings.toString",
      "offset": [
        781,
        783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2021": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "2022": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2025": {
      "op": "NOT"
    },
    "2026": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "ADD",
      "path": "0",
      "statement": 12
    },
    "2027": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2046": {
      "op": "SHL"
    },
    "2047": {
      "fn": "Strings.toString",
      "offset": [
        985,
        987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2049": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2050": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "MOD",
      "path": "0"
    },
    "2051": {
      "fn": "Strings.toString",
      "offset": [
        969,
        999
      ],
      "op": "BYTE",
      "path": "0"
    },
    "2052": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2053": {
      "fn": "Strings.toString",
      "offset": [
        956,
        1000
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "2054": {
      "fn": "Strings.toString",
      "offset": [
        1044,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0xA"
    },
    "2056": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2057": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DIV",
      "path": "0"
    },
    "2058": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2061": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E6"
    },
    "2064": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2065": {
      "op": "POP"
    },
    "2066": {
      "fn": "Strings.toString",
      "offset": [
        1120,
        1126
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 14
    },
    "2067": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        447,
        1143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2072": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1873,
        2218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2073": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1944,
        1953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2075": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1955,
        1964
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2076": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1966,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2078": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2002
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 15
    },
    "2079": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2080": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2013,
        2015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "2082": {
      "branch": 30,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2015
      ],
      "op": "EQ",
      "path": "3"
    },
    "2083": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86E"
    },
    "2086": {
      "branch": 30,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2087": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2089": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2098": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2101": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2103": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2104": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "ADD",
      "path": "3"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "ADD"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH32",
      "value": "0x696E76616C6964207369676E6174757265206C656E6774680000000000000000"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2148": {
      "op": "DUP3"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B7"
    },
    "2157": {
      "op": "JUMP"
    },
    "2158": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2103,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2164": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2165": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2088,
        2106
      ],
      "op": "ADD",
      "path": "3"
    },
    "2166": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2167": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2146,
        2148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2169": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2131,
        2149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2170": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2131,
        2149
      ],
      "op": "ADD",
      "path": "3"
    },
    "2171": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2125,
        2150
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2172": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2197,
        2199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2174": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2175": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2176": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "ADD",
      "path": "3"
    },
    "2177": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2176,
        2201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2178": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2179": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2180": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2173,
        2174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2182": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2183": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2184": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2185": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "BYTE",
      "path": "3"
    },
    "2186": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2187": {
      "fn": "APIConsumer._splitSignature",
      "jump": "o",
      "offset": [
        1873,
        2218
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2188": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2189": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2191": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2192": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2216": {
      "branch": 33,
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "LT",
      "path": "1"
    },
    "2217": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8CB"
    },
    "2220": {
      "branch": 33,
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2221": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 16
    },
    "2245": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DIV",
      "path": "1"
    },
    "2246": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10351
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x40"
    },
    "2250": {
      "fn": "Math.log10",
      "offset": [
        10339,
        10351
      ],
      "op": "ADD",
      "path": "1"
    },
    "2251": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2252": {
      "fn": "Math.log10",
      "offset": [
        10392,
        10400
      ],
      "op": "PUSH14",
      "path": "1",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2267": {
      "fn": "Math.log10",
      "offset": [
        10383,
        10388
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2268": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10383,
        10400
      ],
      "op": "LT",
      "path": "1"
    },
    "2269": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F7"
    },
    "2272": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2273": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10437
      ],
      "op": "PUSH14",
      "path": "1",
      "statement": 18,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2288": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2289": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DIV",
      "path": "1"
    },
    "2290": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "fn": "Math.log10",
      "offset": [
        10465,
        10467
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x20"
    },
    "2294": {
      "fn": "Math.log10",
      "offset": [
        10455,
        10467
      ],
      "op": "ADD",
      "path": "1"
    },
    "2295": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2296": {
      "fn": "Math.log10",
      "offset": [
        10508,
        10516
      ],
      "op": "PUSH7",
      "path": "1",
      "value": "0x2386F26FC10000"
    },
    "2304": {
      "fn": "Math.log10",
      "offset": [
        10499,
        10504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2305": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10499,
        10516
      ],
      "op": "LT",
      "path": "1"
    },
    "2306": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x915"
    },
    "2309": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2310": {
      "fn": "Math.log10",
      "offset": [
        10545,
        10553
      ],
      "op": "PUSH7",
      "path": "1",
      "statement": 20,
      "value": "0x2386F26FC10000"
    },
    "2318": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2319": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DIV",
      "path": "1"
    },
    "2320": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "fn": "Math.log10",
      "offset": [
        10581,
        10583
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x10"
    },
    "2324": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10583
      ],
      "op": "ADD",
      "path": "1"
    },
    "2325": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2326": {
      "fn": "Math.log10",
      "offset": [
        10624,
        10631
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5F5E100"
    },
    "2331": {
      "fn": "Math.log10",
      "offset": [
        10615,
        10620
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2332": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10615,
        10631
      ],
      "op": "LT",
      "path": "1"
    },
    "2333": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92D"
    },
    "2336": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2337": {
      "fn": "Math.log10",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH4",
      "path": "1",
      "statement": 22,
      "value": "0x5F5E100"
    },
    "2342": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2343": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DIV",
      "path": "1"
    },
    "2344": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "fn": "Math.log10",
      "offset": [
        10695,
        10696
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x8"
    },
    "2348": {
      "fn": "Math.log10",
      "offset": [
        10685,
        10696
      ],
      "op": "ADD",
      "path": "1"
    },
    "2349": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2350": {
      "fn": "Math.log10",
      "offset": [
        10737,
        10744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2710"
    },
    "2353": {
      "fn": "Math.log10",
      "offset": [
        10728,
        10733
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2354": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10728,
        10744
      ],
      "op": "LT",
      "path": "1"
    },
    "2355": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x941"
    },
    "2358": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2359": {
      "fn": "Math.log10",
      "offset": [
        10773,
        10780
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x2710"
    },
    "2362": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2363": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DIV",
      "path": "1"
    },
    "2364": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "fn": "Math.log10",
      "offset": [
        10808,
        10809
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x4"
    },
    "2368": {
      "fn": "Math.log10",
      "offset": [
        10798,
        10809
      ],
      "op": "ADD",
      "path": "1"
    },
    "2369": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2370": {
      "fn": "Math.log10",
      "offset": [
        10850,
        10857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2372": {
      "fn": "Math.log10",
      "offset": [
        10841,
        10846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2373": {
      "branch": 38,
      "fn": "Math.log10",
      "offset": [
        10841,
        10857
      ],
      "op": "LT",
      "path": "1"
    },
    "2374": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x953"
    },
    "2377": {
      "branch": 38,
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2378": {
      "fn": "Math.log10",
      "offset": [
        10886,
        10893
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x64"
    },
    "2380": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2381": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DIV",
      "path": "1"
    },
    "2382": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "fn": "Math.log10",
      "offset": [
        10921,
        10922
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x2"
    },
    "2386": {
      "fn": "Math.log10",
      "offset": [
        10911,
        10922
      ],
      "op": "ADD",
      "path": "1"
    },
    "2387": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2388": {
      "fn": "Math.log10",
      "offset": [
        10963,
        10970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2390": {
      "fn": "Math.log10",
      "offset": [
        10954,
        10959
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2391": {
      "branch": 39,
      "fn": "Math.log10",
      "offset": [
        10954,
        10970
      ],
      "op": "LT",
      "path": "1"
    },
    "2392": {
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x584"
    },
    "2395": {
      "branch": 39,
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2396": {
      "fn": "Math.log10",
      "offset": [
        11000,
        11001
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "2398": {
      "fn": "Math.log10",
      "offset": [
        10990,
        11001
      ],
      "op": "ADD",
      "path": "1"
    },
    "2399": {
      "fn": "Math.log10",
      "offset": [
        11042,
        11048
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 29
    },
    "2400": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2404": {
      "op": "JUMPDEST"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "DUP5"
    },
    "2411": {
      "op": "SUB"
    },
    "2412": {
      "op": "SLT"
    },
    "2413": {
      "op": "ISZERO"
    },
    "2414": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2417": {
      "op": "JUMPI"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2420": {
      "op": "DUP1"
    },
    "2421": {
      "op": "REVERT"
    },
    "2422": {
      "op": "JUMPDEST"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "CALLDATALOAD"
    },
    "2425": {
      "op": "SWAP2"
    },
    "2426": {
      "op": "SWAP1"
    },
    "2427": {
      "op": "POP"
    },
    "2428": {
      "jump": "o",
      "op": "JUMP"
    },
    "2429": {
      "op": "JUMPDEST"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "JUMPDEST"
    },
    "2433": {
      "op": "DUP4"
    },
    "2434": {
      "op": "DUP2"
    },
    "2435": {
      "op": "LT"
    },
    "2436": {
      "op": "ISZERO"
    },
    "2437": {
      "op": "PUSH2",
      "value": "0x998"
    },
    "2440": {
      "op": "JUMPI"
    },
    "2441": {
      "op": "DUP2"
    },
    "2442": {
      "op": "DUP2"
    },
    "2443": {
      "op": "ADD"
    },
    "2444": {
      "op": "MLOAD"
    },
    "2445": {
      "op": "DUP4"
    },
    "2446": {
      "op": "DUP3"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2451": {
      "op": "ADD"
    },
    "2452": {
      "op": "PUSH2",
      "value": "0x980"
    },
    "2455": {
      "op": "JUMP"
    },
    "2456": {
      "op": "JUMPDEST"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "op": "POP"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2461": {
      "op": "SWAP2"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "op": "MSTORE"
    },
    "2464": {
      "jump": "o",
      "op": "JUMP"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2468": {
      "op": "DUP2"
    },
    "2469": {
      "op": "MLOAD"
    },
    "2470": {
      "op": "DUP1"
    },
    "2471": {
      "op": "DUP5"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x9B9"
    },
    "2476": {
      "op": "DUP2"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2479": {
      "op": "DUP7"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2483": {
      "op": "DUP7"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "op": "PUSH2",
      "value": "0x97D"
    },
    "2488": {
      "jump": "i",
      "op": "JUMP"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2492": {
      "op": "ADD"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2495": {
      "op": "NOT"
    },
    "2496": {
      "op": "AND"
    },
    "2497": {
      "op": "SWAP3"
    },
    "2498": {
      "op": "SWAP1"
    },
    "2499": {
      "op": "SWAP3"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2503": {
      "op": "ADD"
    },
    "2504": {
      "op": "SWAP3"
    },
    "2505": {
      "op": "SWAP2"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "jump": "o",
      "op": "JUMP"
    },
    "2509": {
      "op": "JUMPDEST"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2512": {
      "op": "DUP2"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2516": {
      "op": "PUSH2",
      "value": "0x581"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2521": {
      "op": "DUP4"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "DUP5"
    },
    "2524": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2527": {
      "jump": "i",
      "op": "JUMP"
    },
    "2528": {
      "op": "JUMPDEST"
    },
    "2529": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2539": {
      "op": "MSTORE"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2549": {
      "op": "REVERT"
    },
    "2550": {
      "op": "JUMPDEST"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2553": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2562": {
      "op": "DUP1"
    },
    "2563": {
      "op": "DUP5"
    },
    "2564": {
      "op": "GT"
    },
    "2565": {
      "op": "ISZERO"
    },
    "2566": {
      "op": "PUSH2",
      "value": "0xA11"
    },
    "2569": {
      "op": "JUMPI"
    },
    "2570": {
      "op": "PUSH2",
      "value": "0xA11"
    },
    "2573": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "2576": {
      "jump": "i",
      "op": "JUMP"
    },
    "2577": {
      "op": "JUMPDEST"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2580": {
      "op": "MLOAD"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2583": {
      "op": "DUP6"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2587": {
      "op": "NOT"
    },
    "2588": {
      "op": "SWAP1"
    },
    "2589": {
      "op": "DUP2"
    },
    "2590": {
      "op": "AND"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "op": "AND"
    },
    "2595": {
      "op": "DUP2"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "SWAP1"
    },
    "2598": {
      "op": "DUP3"
    },
    "2599": {
      "op": "DUP3"
    },
    "2600": {
      "op": "GT"
    },
    "2601": {
      "op": "DUP2"
    },
    "2602": {
      "op": "DUP4"
    },
    "2603": {
      "op": "LT"
    },
    "2604": {
      "op": "OR"
    },
    "2605": {
      "op": "ISZERO"
    },
    "2606": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2609": {
      "op": "JUMPI"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "2616": {
      "jump": "i",
      "op": "JUMP"
    },
    "2617": {
      "op": "JUMPDEST"
    },
    "2618": {
      "op": "DUP2"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "DUP1"
    },
    "2623": {
      "op": "SWAP4"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "DUP6"
    },
    "2626": {
      "op": "DUP2"
    },
    "2627": {
      "op": "MSTORE"
    },
    "2628": {
      "op": "DUP7"
    },
    "2629": {
      "op": "DUP7"
    },
    "2630": {
      "op": "DUP7"
    },
    "2631": {
      "op": "ADD"
    },
    "2632": {
      "op": "GT"
    },
    "2633": {
      "op": "ISZERO"
    },
    "2634": {
      "op": "PUSH2",
      "value": "0xA52"
    },
    "2637": {
      "op": "JUMPI"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2640": {
      "op": "DUP1"
    },
    "2641": {
      "op": "REVERT"
    },
    "2642": {
      "op": "JUMPDEST"
    },
    "2643": {
      "op": "DUP6"
    },
    "2644": {
      "op": "DUP6"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2647": {
      "op": "DUP4"
    },
    "2648": {
      "op": "ADD"
    },
    "2649": {
      "op": "CALLDATACOPY"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2654": {
      "op": "DUP8"
    },
    "2655": {
      "op": "DUP4"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "op": "POP"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "op": "SWAP4"
    },
    "2663": {
      "op": "SWAP3"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "op": "POP"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "jump": "o",
      "op": "JUMP"
    },
    "2668": {
      "op": "JUMPDEST"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2671": {
      "op": "DUP3"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2674": {
      "op": "DUP4"
    },
    "2675": {
      "op": "ADD"
    },
    "2676": {
      "op": "SLT"
    },
    "2677": {
      "op": "PUSH2",
      "value": "0xA7D"
    },
    "2680": {
      "op": "JUMPI"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "REVERT"
    },
    "2685": {
      "op": "JUMPDEST"
    },
    "2686": {
      "op": "PUSH2",
      "value": "0x581"
    },
    "2689": {
      "op": "DUP4"
    },
    "2690": {
      "op": "DUP4"
    },
    "2691": {
      "op": "CALLDATALOAD"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2694": {
      "op": "DUP6"
    },
    "2695": {
      "op": "ADD"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2699": {
      "jump": "i",
      "op": "JUMP"
    },
    "2700": {
      "op": "JUMPDEST"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2703": {
      "op": "DUP1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2708": {
      "op": "DUP5"
    },
    "2709": {
      "op": "DUP7"
    },
    "2710": {
      "op": "SUB"
    },
    "2711": {
      "op": "SLT"
    },
    "2712": {
      "op": "ISZERO"
    },
    "2713": {
      "op": "PUSH2",
      "value": "0xAA1"
    },
    "2716": {
      "op": "JUMPI"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2719": {
      "op": "DUP1"
    },
    "2720": {
      "op": "REVERT"
    },
    "2721": {
      "op": "JUMPDEST"
    },
    "2722": {
      "op": "DUP4"
    },
    "2723": {
      "op": "CALLDATALOAD"
    },
    "2724": {
      "op": "SWAP3"
    },
    "2725": {
      "op": "POP"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2728": {
      "op": "DUP5"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "op": "CALLDATALOAD"
    },
    "2731": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2740": {
      "op": "DUP2"
    },
    "2741": {
      "op": "GT"
    },
    "2742": {
      "op": "ISZERO"
    },
    "2743": {
      "op": "PUSH2",
      "value": "0xABF"
    },
    "2746": {
      "op": "JUMPI"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2749": {
      "op": "DUP1"
    },
    "2750": {
      "op": "REVERT"
    },
    "2751": {
      "op": "JUMPDEST"
    },
    "2752": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "2755": {
      "op": "DUP7"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "DUP8"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0xA6C"
    },
    "2762": {
      "jump": "i",
      "op": "JUMP"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "SWAP3"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "POP"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2769": {
      "op": "DUP5"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "op": "CALLDATALOAD"
    },
    "2772": {
      "op": "SWAP1"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "SWAP3"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "SWAP3"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "op": "SWAP3"
    },
    "2779": {
      "jump": "o",
      "op": "JUMP"
    },
    "2780": {
      "op": "JUMPDEST"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2783": {
      "op": "DUP1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2786": {
      "op": "DUP4"
    },
    "2787": {
      "op": "DUP6"
    },
    "2788": {
      "op": "SUB"
    },
    "2789": {
      "op": "SLT"
    },
    "2790": {
      "op": "ISZERO"
    },
    "2791": {
      "op": "PUSH2",
      "value": "0xAEF"
    },
    "2794": {
      "op": "JUMPI"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2797": {
      "op": "DUP1"
    },
    "2798": {
      "op": "REVERT"
    },
    "2799": {
      "op": "JUMPDEST"
    },
    "2800": {
      "op": "DUP3"
    },
    "2801": {
      "op": "CALLDATALOAD"
    },
    "2802": {
      "op": "SWAP2"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2806": {
      "op": "DUP4"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "CALLDATALOAD"
    },
    "2809": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2818": {
      "op": "DUP2"
    },
    "2819": {
      "op": "GT"
    },
    "2820": {
      "op": "ISZERO"
    },
    "2821": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "2824": {
      "op": "JUMPI"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2827": {
      "op": "DUP1"
    },
    "2828": {
      "op": "REVERT"
    },
    "2829": {
      "op": "JUMPDEST"
    },
    "2830": {
      "op": "PUSH2",
      "value": "0xB19"
    },
    "2833": {
      "op": "DUP6"
    },
    "2834": {
      "op": "DUP3"
    },
    "2835": {
      "op": "DUP7"
    },
    "2836": {
      "op": "ADD"
    },
    "2837": {
      "op": "PUSH2",
      "value": "0xA6C"
    },
    "2840": {
      "jump": "i",
      "op": "JUMP"
    },
    "2841": {
      "op": "JUMPDEST"
    },
    "2842": {
      "op": "SWAP2"
    },
    "2843": {
      "op": "POP"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "op": "SWAP3"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "op": "SWAP3"
    },
    "2848": {
      "op": "SWAP1"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "jump": "o",
      "op": "JUMP"
    },
    "2851": {
      "op": "JUMPDEST"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "DUP4"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2858": {
      "op": "DUP5"
    },
    "2859": {
      "op": "ADD"
    },
    "2860": {
      "op": "SLT"
    },
    "2861": {
      "op": "PUSH2",
      "value": "0xB35"
    },
    "2864": {
      "op": "JUMPI"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2867": {
      "op": "DUP1"
    },
    "2868": {
      "op": "REVERT"
    },
    "2869": {
      "op": "JUMPDEST"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "DUP2"
    },
    "2872": {
      "op": "CALLDATALOAD"
    },
    "2873": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2882": {
      "op": "DUP2"
    },
    "2883": {
      "op": "GT"
    },
    "2884": {
      "op": "ISZERO"
    },
    "2885": {
      "op": "PUSH2",
      "value": "0xB4D"
    },
    "2888": {
      "op": "JUMPI"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2891": {
      "op": "DUP1"
    },
    "2892": {
      "op": "REVERT"
    },
    "2893": {
      "op": "JUMPDEST"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2896": {
      "op": "DUP4"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "SWAP2"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "op": "DUP4"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2903": {
      "op": "DUP3"
    },
    "2904": {
      "op": "DUP6"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "op": "GT"
    },
    "2908": {
      "op": "ISZERO"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xB65"
    },
    "2912": {
      "op": "JUMPI"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2915": {
      "op": "DUP1"
    },
    "2916": {
      "op": "REVERT"
    },
    "2917": {
      "op": "JUMPDEST"
    },
    "2918": {
      "op": "SWAP3"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "op": "SWAP3"
    },
    "2921": {
      "op": "SWAP1"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "jump": "o",
      "op": "JUMP"
    },
    "2924": {
      "op": "JUMPDEST"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2927": {
      "op": "DUP1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2930": {
      "op": "DUP1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2933": {
      "op": "DUP6"
    },
    "2934": {
      "op": "DUP8"
    },
    "2935": {
      "op": "SUB"
    },
    "2936": {
      "op": "SLT"
    },
    "2937": {
      "op": "ISZERO"
    },
    "2938": {
      "op": "PUSH2",
      "value": "0xB82"
    },
    "2941": {
      "op": "JUMPI"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2944": {
      "op": "DUP1"
    },
    "2945": {
      "op": "REVERT"
    },
    "2946": {
      "op": "JUMPDEST"
    },
    "2947": {
      "op": "DUP5"
    },
    "2948": {
      "op": "CALLDATALOAD"
    },
    "2949": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2958": {
      "op": "DUP1"
    },
    "2959": {
      "op": "DUP3"
    },
    "2960": {
      "op": "GT"
    },
    "2961": {
      "op": "ISZERO"
    },
    "2962": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "2965": {
      "op": "JUMPI"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2968": {
      "op": "DUP1"
    },
    "2969": {
      "op": "REVERT"
    },
    "2970": {
      "op": "JUMPDEST"
    },
    "2971": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2974": {
      "op": "DUP9"
    },
    "2975": {
      "op": "DUP4"
    },
    "2976": {
      "op": "DUP10"
    },
    "2977": {
      "op": "ADD"
    },
    "2978": {
      "op": "PUSH2",
      "value": "0xB23"
    },
    "2981": {
      "jump": "i",
      "op": "JUMP"
    },
    "2982": {
      "op": "JUMPDEST"
    },
    "2983": {
      "op": "SWAP1"
    },
    "2984": {
      "op": "SWAP7"
    },
    "2985": {
      "op": "POP"
    },
    "2986": {
      "op": "SWAP5"
    },
    "2987": {
      "op": "POP"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2990": {
      "op": "DUP8"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "CALLDATALOAD"
    },
    "2993": {
      "op": "SWAP2"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "op": "DUP1"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "GT"
    },
    "2998": {
      "op": "ISZERO"
    },
    "2999": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3002": {
      "op": "JUMPI"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3005": {
      "op": "DUP1"
    },
    "3006": {
      "op": "REVERT"
    },
    "3007": {
      "op": "JUMPDEST"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "op": "PUSH2",
      "value": "0xBCC"
    },
    "3012": {
      "op": "DUP8"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "DUP9"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xB23"
    },
    "3019": {
      "jump": "i",
      "op": "JUMP"
    },
    "3020": {
      "op": "JUMPDEST"
    },
    "3021": {
      "op": "SWAP6"
    },
    "3022": {
      "op": "SWAP9"
    },
    "3023": {
      "op": "SWAP5"
    },
    "3024": {
      "op": "SWAP8"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "op": "SWAP6"
    },
    "3027": {
      "op": "POP"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "POP"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "jump": "o",
      "op": "JUMP"
    },
    "3032": {
      "op": "JUMPDEST"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3035": {
      "op": "DUP1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3038": {
      "op": "DUP4"
    },
    "3039": {
      "op": "DUP6"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "op": "SLT"
    },
    "3042": {
      "op": "ISZERO"
    },
    "3043": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3046": {
      "op": "JUMPI"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3049": {
      "op": "DUP1"
    },
    "3050": {
      "op": "REVERT"
    },
    "3051": {
      "op": "JUMPDEST"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "CALLDATALOAD"
    },
    "3054": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "GT"
    },
    "3065": {
      "op": "ISZERO"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC02"
    },
    "3069": {
      "op": "JUMPI"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "REVERT"
    },
    "3074": {
      "op": "JUMPDEST"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0xC0E"
    },
    "3078": {
      "op": "DUP6"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "DUP7"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xB23"
    },
    "3085": {
      "jump": "i",
      "op": "JUMP"
    },
    "3086": {
      "op": "JUMPDEST"
    },
    "3087": {
      "op": "SWAP1"
    },
    "3088": {
      "op": "SWAP7"
    },
    "3089": {
      "op": "SWAP1"
    },
    "3090": {
      "op": "SWAP6"
    },
    "3091": {
      "op": "POP"
    },
    "3092": {
      "op": "SWAP4"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "jump": "o",
      "op": "JUMP"
    },
    "3098": {
      "op": "JUMPDEST"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3101": {
      "op": "DUP1"
    },
    "3102": {
      "op": "DUP3"
    },
    "3103": {
      "op": "MSTORE"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3106": {
      "op": "SWAP1"
    },
    "3107": {
      "op": "DUP3"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "ADD"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH8",
      "value": "0x6F776E6572202121"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "MSTORE"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "SWAP1"
    },
    "3169": {
      "jump": "o",
      "op": "JUMP"
    },
    "3170": {
      "op": "JUMPDEST"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3175": {
      "op": "DUP3"
    },
    "3176": {
      "op": "DUP5"
    },
    "3177": {
      "op": "SUB"
    },
    "3178": {
      "op": "SLT"
    },
    "3179": {
      "op": "ISZERO"
    },
    "3180": {
      "op": "PUSH2",
      "value": "0xC74"
    },
    "3183": {
      "op": "JUMPI"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3186": {
      "op": "DUP1"
    },
    "3187": {
      "op": "REVERT"
    },
    "3188": {
      "op": "JUMPDEST"
    },
    "3189": {
      "op": "DUP2"
    },
    "3190": {
      "op": "MLOAD"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "ISZERO"
    },
    "3193": {
      "op": "ISZERO"
    },
    "3194": {
      "op": "DUP2"
    },
    "3195": {
      "op": "EQ"
    },
    "3196": {
      "op": "PUSH2",
      "value": "0xC84"
    },
    "3199": {
      "op": "JUMPI"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3202": {
      "op": "DUP1"
    },
    "3203": {
      "op": "REVERT"
    },
    "3204": {
      "op": "JUMPDEST"
    },
    "3205": {
      "op": "SWAP4"
    },
    "3206": {
      "op": "SWAP3"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "jump": "o",
      "op": "JUMP"
    },
    "3211": {
      "op": "JUMPDEST"
    },
    "3212": {
      "op": "DUP1"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "op": "DUP1"
    },
    "3216": {
      "op": "DUP3"
    },
    "3217": {
      "op": "GT"
    },
    "3218": {
      "op": "ISZERO"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3243": {
      "op": "REVERT"
    },
    "3244": {
      "op": "JUMPDEST"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3247": {
      "op": "DUP2"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0xCBF"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3256": {
      "op": "DUP4"
    },
    "3257": {
      "op": "ADD"
    },
    "3258": {
      "op": "DUP6"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "3262": {
      "jump": "i",
      "op": "JUMP"
    },
    "3263": {
      "op": "JUMPDEST"
    },
    "3264": {
      "op": "SWAP1"
    },
    "3265": {
      "op": "POP"
    },
    "3266": {
      "op": "DUP3"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3269": {
      "op": "DUP4"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "MSTORE"
    },
    "3272": {
      "op": "SWAP4"
    },
    "3273": {
      "op": "SWAP3"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "jump": "o",
      "op": "JUMP"
    },
    "3278": {
      "op": "JUMPDEST"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3283": {
      "op": "DUP3"
    },
    "3284": {
      "op": "DUP5"
    },
    "3285": {
      "op": "SUB"
    },
    "3286": {
      "op": "SLT"
    },
    "3287": {
      "op": "ISZERO"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "REVERT"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "MLOAD"
    },
    "3299": {
      "op": "SWAP2"
    },
    "3300": {
      "op": "SWAP1"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "jump": "o",
      "op": "JUMP"
    },
    "3303": {
      "op": "JUMPDEST"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "DUP5"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "op": "SLT"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "op": "DUP2"
    },
    "3323": {
      "op": "CALLDATALOAD"
    },
    "3324": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3333": {
      "op": "DUP1"
    },
    "3334": {
      "op": "DUP3"
    },
    "3335": {
      "op": "GT"
    },
    "3336": {
      "op": "ISZERO"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xD11"
    },
    "3340": {
      "op": "JUMPI"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "REVERT"
    },
    "3345": {
      "op": "JUMPDEST"
    },
    "3346": {
      "op": "SWAP1"
    },
    "3347": {
      "op": "DUP4"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "SWAP1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3352": {
      "op": "DUP3"
    },
    "3353": {
      "op": "DUP7"
    },
    "3354": {
      "op": "SUB"
    },
    "3355": {
      "op": "SLT"
    },
    "3356": {
      "op": "ISZERO"
    },
    "3357": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3360": {
      "op": "JUMPI"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3363": {
      "op": "DUP1"
    },
    "3364": {
      "op": "REVERT"
    },
    "3365": {
      "op": "JUMPDEST"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3368": {
      "op": "MLOAD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3371": {
      "op": "DUP2"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "DUP2"
    },
    "3374": {
      "op": "DUP2"
    },
    "3375": {
      "op": "LT"
    },
    "3376": {
      "op": "DUP4"
    },
    "3377": {
      "op": "DUP3"
    },
    "3378": {
      "op": "GT"
    },
    "3379": {
      "op": "OR"
    },
    "3380": {
      "op": "ISZERO"
    },
    "3381": {
      "op": "PUSH2",
      "value": "0xD40"
    },
    "3384": {
      "op": "JUMPI"
    },
    "3385": {
      "op": "PUSH2",
      "value": "0xD40"
    },
    "3388": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "3391": {
      "jump": "i",
      "op": "JUMP"
    },
    "3392": {
      "op": "JUMPDEST"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "DUP3"
    },
    "3397": {
      "op": "CALLDATALOAD"
    },
    "3398": {
      "op": "DUP3"
    },
    "3399": {
      "op": "DUP2"
    },
    "3400": {
      "op": "GT"
    },
    "3401": {
      "op": "ISZERO"
    },
    "3402": {
      "op": "PUSH2",
      "value": "0xD52"
    },
    "3405": {
      "op": "JUMPI"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3408": {
      "op": "DUP1"
    },
    "3409": {
      "op": "REVERT"
    },
    "3410": {
      "op": "JUMPDEST"
    },
    "3411": {
      "op": "DUP1"
    },
    "3412": {
      "op": "DUP5"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "SWAP4"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "op": "DUP6"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3420": {
      "op": "DUP5"
    },
    "3421": {
      "op": "ADD"
    },
    "3422": {
      "op": "SLT"
    },
    "3423": {
      "op": "PUSH2",
      "value": "0xD67"
    },
    "3426": {
      "op": "JUMPI"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "DUP1"
    },
    "3430": {
      "op": "REVERT"
    },
    "3431": {
      "op": "JUMPDEST"
    },
    "3432": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3435": {
      "op": "DUP7"
    },
    "3436": {
      "op": "DUP5"
    },
    "3437": {
      "op": "CALLDATALOAD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3440": {
      "op": "DUP7"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "3445": {
      "jump": "i",
      "op": "JUMP"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "DUP2"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "SWAP6"
    },
    "3450": {
      "op": "SWAP5"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "op": "POP"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "jump": "o",
      "op": "JUMP"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3462": {
      "op": "DUP3"
    },
    "3463": {
      "op": "DUP5"
    },
    "3464": {
      "op": "SUB"
    },
    "3465": {
      "op": "SLT"
    },
    "3466": {
      "op": "ISZERO"
    },
    "3467": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3470": {
      "op": "JUMPI"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3473": {
      "op": "DUP1"
    },
    "3474": {
      "op": "REVERT"
    },
    "3475": {
      "op": "JUMPDEST"
    },
    "3476": {
      "op": "DUP2"
    },
    "3477": {
      "op": "CALLDATALOAD"
    },
    "3478": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3487": {
      "op": "DUP1"
    },
    "3488": {
      "op": "DUP3"
    },
    "3489": {
      "op": "GT"
    },
    "3490": {
      "op": "ISZERO"
    },
    "3491": {
      "op": "PUSH2",
      "value": "0xDAB"
    },
    "3494": {
      "op": "JUMPI"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "DUP1"
    },
    "3498": {
      "op": "REVERT"
    },
    "3499": {
      "op": "JUMPDEST"
    },
    "3500": {
      "op": "SWAP1"
    },
    "3501": {
      "op": "DUP4"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "SWAP1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3506": {
      "op": "DUP3"
    },
    "3507": {
      "op": "DUP7"
    },
    "3508": {
      "op": "SUB"
    },
    "3509": {
      "op": "SLT"
    },
    "3510": {
      "op": "ISZERO"
    },
    "3511": {
      "op": "PUSH2",
      "value": "0xDBF"
    },
    "3514": {
      "op": "JUMPI"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3517": {
      "op": "DUP1"
    },
    "3518": {
      "op": "REVERT"
    },
    "3519": {
      "op": "JUMPDEST"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3522": {
      "op": "MLOAD"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3525": {
      "op": "DUP2"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "DUP2"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "LT"
    },
    "3530": {
      "op": "DUP4"
    },
    "3531": {
      "op": "DUP3"
    },
    "3532": {
      "op": "GT"
    },
    "3533": {
      "op": "OR"
    },
    "3534": {
      "op": "ISZERO"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDDA"
    },
    "3538": {
      "op": "JUMPI"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDDA"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "3545": {
      "jump": "i",
      "op": "JUMP"
    },
    "3546": {
      "op": "JUMPDEST"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3549": {
      "op": "MSTORE"
    },
    "3550": {
      "op": "DUP3"
    },
    "3551": {
      "op": "CALLDATALOAD"
    },
    "3552": {
      "op": "DUP3"
    },
    "3553": {
      "op": "DUP2"
    },
    "3554": {
      "op": "GT"
    },
    "3555": {
      "op": "ISZERO"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3559": {
      "op": "JUMPI"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3562": {
      "op": "DUP1"
    },
    "3563": {
      "op": "REVERT"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xDF8"
    },
    "3568": {
      "op": "DUP8"
    },
    "3569": {
      "op": "DUP3"
    },
    "3570": {
      "op": "DUP7"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "op": "PUSH2",
      "value": "0xA6C"
    },
    "3575": {
      "jump": "i",
      "op": "JUMP"
    },
    "3576": {
      "op": "JUMPDEST"
    },
    "3577": {
      "op": "DUP3"
    },
    "3578": {
      "op": "MSTORE"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3582": {
      "op": "DUP4"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "CALLDATALOAD"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "DUP2"
    },
    "3587": {
      "op": "GT"
    },
    "3588": {
      "op": "ISZERO"
    },
    "3589": {
      "op": "PUSH2",
      "value": "0xE0D"
    },
    "3592": {
      "op": "JUMPI"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "REVERT"
    },
    "3597": {
      "op": "JUMPDEST"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE19"
    },
    "3601": {
      "op": "DUP8"
    },
    "3602": {
      "op": "DUP3"
    },
    "3603": {
      "op": "DUP7"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xA6C"
    },
    "3608": {
      "jump": "i",
      "op": "JUMP"
    },
    "3609": {
      "op": "JUMPDEST"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3612": {
      "op": "DUP4"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "op": "SWAP6"
    },
    "3617": {
      "op": "SWAP5"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "op": "POP"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "op": "POP"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "jump": "o",
      "op": "JUMP"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3629": {
      "op": "DUP3"
    },
    "3630": {
      "op": "DUP5"
    },
    "3631": {
      "op": "SUB"
    },
    "3632": {
      "op": "SLT"
    },
    "3633": {
      "op": "ISZERO"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3637": {
      "op": "JUMPI"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3640": {
      "op": "DUP1"
    },
    "3641": {
      "op": "REVERT"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "DUP2"
    },
    "3644": {
      "op": "MLOAD"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "AND"
    },
    "3655": {
      "op": "DUP2"
    },
    "3656": {
      "op": "EQ"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xC84"
    },
    "3660": {
      "op": "JUMPI"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3663": {
      "op": "DUP1"
    },
    "3664": {
      "op": "REVERT"
    },
    "3665": {
      "op": "JUMPDEST"
    },
    "3666": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A000000000000"
    },
    "3699": {
      "op": "DUP2"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "DUP4"
    },
    "3704": {
      "op": "MLOAD"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0xE89"
    },
    "3708": {
      "op": "DUP2"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3711": {
      "op": "DUP6"
    },
    "3712": {
      "op": "ADD"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3715": {
      "op": "DUP9"
    },
    "3716": {
      "op": "ADD"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0x97D"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "DUP4"
    },
    "3723": {
      "op": "MLOAD"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "DUP4"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "SWAP1"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xEA0"
    },
    "3731": {
      "op": "DUP2"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3734": {
      "op": "DUP5"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3738": {
      "op": "DUP9"
    },
    "3739": {
      "op": "ADD"
    },
    "3740": {
      "op": "PUSH2",
      "value": "0x97D"
    },
    "3743": {
      "jump": "i",
      "op": "JUMP"
    },
    "3744": {
      "op": "JUMPDEST"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "SWAP5"
    },
    "3750": {
      "op": "SWAP4"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "op": "POP"
    },
    "3754": {
      "op": "POP"
    },
    "3755": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ac9d4852b54006e007df3cdcfe7c0516b0fe9a82",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./APIProvider.sol\";\nimport \"./BaseClient.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n\nstruct Input {\n    string apiIdentifier;\n}\n\nstruct APIResponse { //TODO pasar estas esctructuras al provider? o la funcion de getinputdatastructure a algun lugar accesible por APIOracle python\n    bytes response;\n    bytes signature;\n}\n\ncontract APIConsumer is BaseClient {\n\n    APIProvider public provider;\n    \n    constructor(address brokerAddress, address apiProviderAddress) BaseClient(brokerAddress) {\n        provider = APIProvider(apiProviderAddress);\n    }\n\n    function submitRequest(uint payment, bytes memory input) public onlyOwner payable returns (uint) {\n        return super.submitRequest(payment, input, 0);\n    }\n\n    function checkResult(bytes calldata inputData, bytes calldata resultData) external override view returns (bool) {\n        Input memory input = abi.decode(inputData, (Input));\n        APIResponse memory apiResponse = abi.decode(resultData, (APIResponse));\n        return _verifySignature(apiResponse, provider.getAddress(input.apiIdentifier));\n    }\n    \n    function getInputDataStructure() external override pure returns (string memory) {\n        return \"{string apiIdentifier;}\";\n    }\n\n    function getAPIResponseDataStructure() external pure returns (string memory) {\n        return \"{bytes response; bytes signature;}\";\n    }\n\n    function _verifySignature(APIResponse memory apiResponse, address signer) private pure returns (bool) {\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(apiResponse.response.length), apiResponse.response));\n        (bytes32 r, bytes32 s, uint8 v) = _splitSignature(apiResponse.signature);\n        return (ecrecover(prefixedHash, v, r, s) == signer);\n    }\n\n    function _splitSignature(bytes memory signature) private pure returns (bytes32 r, bytes32 s, uint8 v) {\n        require(signature.length == 65, \"invalid signature length\");\n        assembly {\n            r := mload(add(signature, 32))\n            s := mload(add(signature, 64))\n            v := byte(0, mload(add(signature, 96)))\n        }\n    }\n\n}",
  "sourceMap": "417:1804:3:-:0;;;497:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;237:6:7;:19;;-1:-1:-1;;;;;;237:19:7;;;246:10;237:19;;;;;477:47:5;;-1:-1:-1;;;;;477:47:5;;::::1;::::0;;::::1;;::::0;;596:8:3::1;:42:::0;;;;;::::1;::::0;::::1;;::::0;;417:1804;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;417:1804:3;;;;;;",
  "sourcePath": "contracts/APIConsumer.sol",
  "type": "contract"
}