{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brokerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "apiProviderAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "requestSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "brokerContract",
      "outputs": [
        {
          "internalType": "contract ExecutionBroker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResultDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "processResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provider",
      "outputs": [
        {
          "internalType": "contract APIProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "postProcessingGas",
          "type": "uint256"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
    "1": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/Math.sol",
    "2": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/SignedMath.sol",
    "3": "contracts/APIConsumer.sol",
    "4": "contracts/APIProvider.sol",
    "5": "contracts/BaseClient.sol",
    "7": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIConsumer.sol",
    "exportedSymbols": {
      "APIConsumer": [
        182
      ],
      "APIProvider": [
        1652
      ],
      "APIResponse": [
        12
      ],
      "BaseClient": [
        372
      ],
      "ExecutionBroker": [
        1042
      ],
      "Input": [
        7
      ],
      "Math": [
        2645
      ],
      "Ownable": [
        1695
      ],
      "Request": [
        396
      ],
      "SignedMath": [
        2750
      ],
      "Strings": [
        1596
      ],
      "Transferable": [
        1779
      ]
    },
    "id": 183,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:3"
      },
      {
        "absolutePath": "contracts/APIProvider.sol",
        "file": "./APIProvider.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 1653,
        "src": "70:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseClient.sol",
        "file": "./BaseClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 373,
        "src": "98:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 1597,
        "src": "126:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Input",
        "id": 7,
        "members": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "apiIdentifier",
            "nameLocation": "206:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 7,
            "src": "199:20:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "199:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Input",
        "nameLocation": "187:5:3",
        "nodeType": "StructDefinition",
        "scope": 183,
        "src": "180:42:3",
        "visibility": "public"
      },
      {
        "canonicalName": "APIResponse",
        "id": 12,
        "members": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "response",
            "nameLocation": "383:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "377:14:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 8,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "377:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "403:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "397:15:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 10,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "397:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "APIResponse",
        "nameLocation": "231:11:3",
        "nodeType": "StructDefinition",
        "scope": 183,
        "src": "224:191:3",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "BaseClient",
              "nameLocations": [
                "441:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 372,
              "src": "441:10:3"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "441:10:3"
          }
        ],
        "canonicalName": "APIConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          372,
          1695
        ],
        "name": "APIConsumer",
        "nameLocation": "426:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "085d4883",
            "id": 17,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "478:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 182,
            "src": "459:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_APIProvider_$1652",
              "typeString": "contract APIProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "APIProvider",
                "nameLocations": [
                  "459:11:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1652,
                "src": "459:11:3"
              },
              "referencedDeclaration": 1652,
              "src": "459:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_APIProvider_$1652",
                "typeString": "contract APIProvider"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "586:59:3",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "596:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$1652",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29,
                          "name": "apiProviderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "619:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28,
                        "name": "APIProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1652,
                        "src": "607:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_APIProvider_$1652_$",
                          "typeString": "type(contract APIProvider)"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "607:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$1652",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "src": "596:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_APIProvider_$1652",
                      "typeString": "contract APIProvider"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "596:42:3"
                }
              ]
            },
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "brokerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "571:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23,
                  "name": "BaseClient",
                  "nameLocations": [
                    "560:10:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 372,
                  "src": "560:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "560:25:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "brokerAddress",
                  "nameLocation": "517:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "509:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "apiProviderAddress",
                  "nameLocation": "540:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "532:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:51:3"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:3"
            },
            "scope": 182,
            "src": "497:148:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "748:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "785:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "794:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "765:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_APIConsumer_$182_$",
                          "typeString": "type(contract super APIConsumer)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "771:13:3",
                      "memberName": "submitRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 313,
                      "src": "765:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "758:45:3"
                }
              ]
            },
            "functionSelector": "877f0ad0",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "715:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1664,
                  "src": "715:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:9:3"
              }
            ],
            "name": "submitRequest",
            "nameLocation": "660:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "payment",
                  "nameLocation": "679:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "674:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "701:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "688:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:34:3"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "742:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:6:3"
            },
            "scope": 182,
            "src": "651:159:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              251
            ],
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "928:236:3",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "951:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "938:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                        "typeString": "struct Input"
                      },
                      "typeName": {
                        "id": 64,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63,
                          "name": "Input",
                          "nameLocations": [
                            "938:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7,
                          "src": "938:5:3"
                        },
                        "referencedDeclaration": 7,
                        "src": "938:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$7_storage_ptr",
                          "typeString": "struct Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "970:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 69,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "982:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                              "typeString": "type(struct Input storage pointer)"
                            }
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "981:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 66,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "959:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "963:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "959:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                      "typeString": "struct Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "938:51:3"
                },
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "apiResponse",
                      "nameLocation": "1018:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "999:30:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                        "typeString": "struct APIResponse"
                      },
                      "typeName": {
                        "id": 74,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73,
                          "name": "APIResponse",
                          "nameLocations": [
                            "999:11:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "999:11:3"
                        },
                        "referencedDeclaration": 12,
                        "src": "999:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                          "typeString": "struct APIResponse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1043:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79,
                            "name": "APIResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1056:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                              "typeString": "type(struct APIResponse storage pointer)"
                            }
                          }
                        ],
                        "id": 80,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1055:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 76,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1032:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1036:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1032:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                      "typeString": "struct APIResponse memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "999:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84,
                        "name": "apiResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1103:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "1136:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                                "typeString": "struct Input memory"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1142:13:3",
                            "memberName": "apiIdentifier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "1136:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 85,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1116:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_APIProvider_$1652",
                              "typeString": "contract APIProvider"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1125:10:3",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1651,
                          "src": "1116:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (string memory) view external returns (address)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1116:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83,
                      "name": "_verifySignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "1086:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_APIResponse_$12_memory_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (struct APIResponse memory,address) pure returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "1079:78:3"
                }
              ]
            },
            "functionSelector": "c91c7b37",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkResult",
            "nameLocation": "825:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 59,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "899:8:3"
            },
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "852:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "837:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "878:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "863:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:53:3"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "922:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:6:3"
            },
            "scope": 182,
            "src": "816:348:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              256
            ],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1250:49:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b737472696e67206170694964656e7469666965723b7d",
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1267:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_04fd13a6b1d6c82cd5b6aedd525b1a7a6a577755aa9866396743ebc8496a7809",
                      "typeString": "literal_string \"{string apiIdentifier;}\""
                    },
                    "value": "{string apiIdentifier;}"
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "1260:32:3"
                }
              ]
            },
            "functionSelector": "2896de13",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputDataStructure",
            "nameLocation": "1179:21:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1212:8:3"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:3"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1235:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:15:3"
            },
            "scope": 182,
            "src": "1170:129:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              261
            ],
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1386:60:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b627974657320726573706f6e73653b206279746573207369676e61747572653b7d",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1403:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b95deadd81ec52cdb162e7f2c8022c7a7d0e133a99baea28e16749990e4c07c3",
                      "typeString": "literal_string \"{bytes response; bytes signature;}\""
                    },
                    "value": "{bytes response; bytes signature;}"
                  },
                  "functionReturnParameters": 107,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "1396:43:3"
                }
              ]
            },
            "functionSelector": "8244741c",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultDataStructure",
            "nameLocation": "1314:22:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1348:8:3"
            },
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1336:2:3"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1371:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:15:3"
            },
            "scope": 182,
            "src": "1305:141:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1554:313:3",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "prefixedHash",
                      "nameLocation": "1572:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1564:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1614:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n"
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 129,
                                    "name": "apiResponse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 114,
                                    "src": "1665:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                      "typeString": "struct APIResponse memory"
                                    }
                                  },
                                  "id": 130,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1677:8:3",
                                  "memberName": "response",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "1665:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1686:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1665:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 127,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1596,
                                "src": "1648:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$1596_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1656:8:3",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1426,
                              "src": "1648:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:45:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 133,
                              "name": "apiResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "1695:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                "typeString": "struct APIResponse memory"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1707:8:3",
                            "memberName": "response",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "1695:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 124,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1597:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1601:12:3",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1597:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1597:119:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 123,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1587:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:130:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1564:153:3"
                },
                {
                  "assignments": [
                    139,
                    141,
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1736:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1728:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1747:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1739:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1739:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "1756:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1750:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 142,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "apiResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1777:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                            "typeString": "struct APIResponse memory"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1789:9:3",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "1777:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 144,
                      "name": "_splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "1761:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:72:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 150,
                              "name": "prefixedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "1827:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 151,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1841:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 152,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "1844:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 153,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "1847:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 149,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "1817:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 155,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1853:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1817:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 157,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1816:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 120,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "1809:51:3"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifySignature",
            "nameLocation": "1461:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "apiResponse",
                  "nameLocation": "1497:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1478:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                    "typeString": "struct APIResponse"
                  },
                  "typeName": {
                    "id": 113,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 112,
                      "name": "APIResponse",
                      "nameLocations": [
                        "1478:11:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "1478:11:3"
                    },
                    "referencedDeclaration": 12,
                    "src": "1478:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                      "typeString": "struct APIResponse"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1518:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1510:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1477:48:3"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1548:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:6:3"
            },
            "scope": 182,
            "src": "1452:415:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1975:243:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 172,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "1993:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2003:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1993:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2013:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "1993:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1985:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:59:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2063:149:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2077:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2092:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2088:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2088:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2082:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2082:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "2077:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2120:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2135:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2146:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2131:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2131:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2125:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2125:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "2120:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2163:39:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2173:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "2186:9:3"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2197:2:3",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2182:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2182:18:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2176:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2176:25:3"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "2168:4:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2168:34:3"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "2163:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 165,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2077:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 167,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2120:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 162,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2092:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 162,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2135:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 162,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2186:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 169,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2163:1:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 179,
                  "nodeType": "InlineAssembly",
                  "src": "2054:158:3"
                }
              ]
            },
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_splitSignature",
            "nameLocation": "1882:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1911:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1898:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1897:24:3"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1952:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1944:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1963:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1955:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1972:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1966:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1943:31:3"
            },
            "scope": 182,
            "src": "1873:345:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 183,
        "src": "417:1804:3",
        "usedErrors": []
      }
    ],
    "src": "37:2184:3"
  },
  "bytecode": "",
  "bytecodeSha1": "7514f78c04491f42c683b8411a1999d02620b09a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "APIConsumer",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Math.log10": {
          "34": [
            10267,
            10284,
            false
          ],
          "35": [
            10383,
            10400,
            false
          ],
          "36": [
            10499,
            10516,
            false
          ],
          "37": [
            10615,
            10631,
            false
          ],
          "38": [
            10728,
            10744,
            false
          ],
          "39": [
            10841,
            10857,
            false
          ],
          "40": [
            10954,
            10970,
            false
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "30": [
            1993,
            2015,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.submitRequest": {
          "32": [
            891,
            928,
            true
          ],
          "33": [
            1645,
            1689,
            true
          ]
        },
        "BaseClient.withdrawFunds": {
          "31": [
            2143,
            2173,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Strings.toString": {
          "12": [
            851,
            856
          ],
          "13": [
            1035,
            1046
          ],
          "14": [
            1113,
            1126
          ]
        }
      },
      "1": {
        "Math.log10": {
          "16": [
            10304,
            10321
          ],
          "17": [
            10339,
            10351
          ],
          "18": [
            10420,
            10437
          ],
          "19": [
            10455,
            10467
          ],
          "20": [
            10536,
            10553
          ],
          "21": [
            10571,
            10583
          ],
          "22": [
            10651,
            10667
          ],
          "23": [
            10685,
            10696
          ],
          "24": [
            10764,
            10780
          ],
          "25": [
            10798,
            10809
          ],
          "26": [
            10877,
            10893
          ],
          "27": [
            10911,
            10922
          ],
          "28": [
            10990,
            11001
          ],
          "29": [
            11035,
            11048
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "15": [
            1985,
            2044
          ]
        },
        "APIConsumer._verifySignature": {
          "11": [
            1809,
            1860
          ]
        },
        "APIConsumer.checkResult": {
          "10": [
            1079,
            1157
          ]
        },
        "APIConsumer.getInputDataStructure": {
          "0": [
            1260,
            1292
          ]
        },
        "APIConsumer.getResultDataStructure": {
          "8": [
            1396,
            1439
          ]
        },
        "APIConsumer.submitRequest": {
          "9": [
            758,
            803
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.cancelRequest": {
          "4": [
            1958,
            1997
          ]
        },
        "BaseClient.submitRequest": {
          "5": [
            1637,
            1712
          ],
          "6": [
            1819,
            1851
          ],
          "7": [
            1861,
            1877
          ]
        },
        "BaseClient.withdrawFunds": {
          "3": [
            2135,
            2196
          ]
        }
      },
      "7": {
        "Ownable.isOwner": {
          "2": [
            375,
            402
          ]
        },
        "Ownable.owner": {
          "1": [
            307,
            320
          ]
        }
      }
    }
  },
  "dependencies": [
    "APIProvider",
    "BaseClient",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Math",
    "Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/SignedMath",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Strings"
  ],
  "deployedBytecode": "6080604052600436106100c25760003560e01c8063877f0ad01161007f5780638f32d59b116100595780638f32d59b1461020c578063c2c562451461022c578063c91c7b371461024c578063cb3927471461026c57600080fd5b8063877f0ad0146101db5780638d68cf59146101a35780638da5cb5b146101ee57600080fd5b8063085d4883146100c7578063155dd5ee146101045780632896de13146101345780633015394c1461018357806343bb58de146101a55780638244741c146101c6575b600080fd5b3480156100d357600080fd5b506002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061012461011f3660046109c3565b61028c565b60405190151581526020016100fb565b34801561014057600080fd5b5060408051808201909152601781527f7b737472696e67206170694964656e7469666965723b7d00000000000000000060208201525b6040516100fb9190610a2c565b34801561018f57600080fd5b506101a361019e3660046109c3565b610359565b005b6101b86101b3366004610aeb565b6103f6565b6040519081526020016100fb565b3480156101d257600080fd5b50610176610589565b6101b86101e9366004610b3b565b6105a9565b3480156101fa57600080fd5b506000546001600160a01b03166100e7565b34801561021857600080fd5b506000546001600160a01b03163314610124565b34801561023857600080fd5b506001546100e7906001600160a01b031681565b34801561025857600080fd5b50610124610267366004610bcb565b6105e9565b34801561027857600080fd5b506101a3610287366004610c37565b610691565b600080546001600160a01b031633146102c05760405162461bcd60e51b81526004016102b790610c79565b60405180910390fd5b814710156103055760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016102b7565b6040513390600090829085908381818185875af1925050503d8060008114610349576040519150601f19603f3d011682016040523d82523d6000602084013e61034e565b606091505b509095945050505050565b6000546001600160a01b031633146103835760405162461bcd60e51b81526004016102b790610c79565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610cbe565b5050565b6001546000906001600160a01b031633148061041c57506000546001600160a01b031633145b6104805760405162461bcd60e51b815260206004820152602f60248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526e37bbb732b91037b910313937b5b2b960891b60648201526084016102b7565b61048a4734610ce7565b8411156104ce5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016102b7565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a9087906105039088908890600401610d08565b60206040518083038185885af1158015610521573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105469190610d2a565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c8160405161057991815260200190565b60405180910390a1949350505050565b6060604051806060016040528060228152602001610f0960229139905090565b600080546001600160a01b031633146105d45760405162461bcd60e51b81526004016102b790610c79565b6105e0838360006103f6565b90505b92915050565b6000806105f885870187610d43565b9050600061060884860186610ddd565b600254835160405163bf40fac160e01b81529293506106869284926001600160a01b03169163bf40fac1916106409190600401610a2c565b602060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610e84565b610708565b979650505050505050565b6001546001600160a01b031633146103f25760405162461bcd60e51b815260206004820152603460248201527f43616e206f6e6c792062652063616c6c65642062792074686520726567697374604482015273195c995908189c9bdad95c8818dbdb9d1c9858dd60621b60648201526084016102b7565b6000806107198460000151516107e4565b845160405161072c929190602001610ead565b60405160208183030381529060405280519060200120905060008060006107568760200151610877565b925092509250856001600160a01b0316600185838686604051600081526020016040526040516107a2949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156107c4573d6000803e3d6000fd5b505050602060405103516001600160a01b03161494505050505092915050565b606060006107f1836108eb565b600101905060008167ffffffffffffffff81111561081157610811610a3f565b6040519080825280601f01601f19166020018201604052801561083b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461084557509392505050565b600080600083516041146108cd5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016102b7565b50505060208101516040820151606090920151909260009190911a90565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061092a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610956576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061097457662386f26fc10000830492506010015b6305f5e100831061098c576305f5e100830492506008015b61271083106109a057612710830492506004015b606483106109b2576064830492506002015b600a83106105e35760010192915050565b6000602082840312156109d557600080fd5b5035919050565b60005b838110156109f75781810151838201526020016109df565b50506000910152565b60008151808452610a188160208601602086016109dc565b601f01601f19169290920160200192915050565b6020815260006105e06020830184610a00565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610a7057610a70610a3f565b604051601f8501601f19908116603f01168101908282118183101715610a9857610a98610a3f565b81604052809350858152868686011115610ab157600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610adc57600080fd5b6105e083833560208501610a55565b600080600060608486031215610b0057600080fd5b83359250602084013567ffffffffffffffff811115610b1e57600080fd5b610b2a86828701610acb565b925050604084013590509250925092565b60008060408385031215610b4e57600080fd5b82359150602083013567ffffffffffffffff811115610b6c57600080fd5b610b7885828601610acb565b9150509250929050565b60008083601f840112610b9457600080fd5b50813567ffffffffffffffff811115610bac57600080fd5b602083019150836020828501011115610bc457600080fd5b9250929050565b60008060008060408587031215610be157600080fd5b843567ffffffffffffffff80821115610bf957600080fd5b610c0588838901610b82565b90965094506020870135915080821115610c1e57600080fd5b50610c2b87828801610b82565b95989497509550505050565b60008060208385031215610c4a57600080fd5b823567ffffffffffffffff811115610c6157600080fd5b610c6d85828601610b82565b90969095509350505050565b60208082526025908201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060408201526437bbb732b960d91b606082015260800190565b600060208284031215610cd057600080fd5b81518015158114610ce057600080fd5b9392505050565b808201808211156105e357634e487b7160e01b600052601160045260246000fd5b604081526000610d1b6040830185610a00565b90508260208301529392505050565b600060208284031215610d3c57600080fd5b5051919050565b600060208284031215610d5557600080fd5b813567ffffffffffffffff80821115610d6d57600080fd5b9083019060208286031215610d8157600080fd5b604051602081018181108382111715610d9c57610d9c610a3f565b604052823582811115610dae57600080fd5b80840193505085601f840112610dc357600080fd5b610dd286843560208601610a55565b815295945050505050565b600060208284031215610def57600080fd5b813567ffffffffffffffff80821115610e0757600080fd5b9083019060408286031215610e1b57600080fd5b604051604081018181108382111715610e3657610e36610a3f565b604052823582811115610e4857600080fd5b610e5487828601610acb565b825250602083013582811115610e6957600080fd5b610e7587828601610acb565b60208301525095945050505050565b600060208284031215610e9657600080fd5b81516001600160a01b0381168114610ce057600080fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008351610ee581601a8501602088016109dc565b835190830190610efc81601a8401602088016109dc565b01601a0194935050505056fe7b627974657320726573706f6e73653b206279746573207369676e61747572653b7da26469706673582212208f19b8ab247dbbec86c7f1827a430a9f6b9d7274902fcfd588fcb3fabf7a25a864736f6c63430008130033",
  "deployedSourceMap": "417:1804:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:27;;;;;;;;;;-1:-1:-1;459:27:3;;;;-1:-1:-1;;;;;459:27:3;;;;;;-1:-1:-1;;;;;198:32:10;;;180:51;;168:2;153:18;459:27:3;;;;;;;;2058:279:5;;;;;;;;;;-1:-1:-1;2058:279:5;;;;;:::i;:::-;;:::i;:::-;;;592:14:10;;585:22;567:41;;555:2;540:18;2058:279:5;427:187:10;1170:129:3;;;;;;;;;;-1:-1:-1;1260:32:3;;;;;;;;;;;;;;;;;1170:129;;;;;;;:::i;1890:114:5:-;;;;;;;;;;-1:-1:-1;1890:114:5;;;;;:::i;:::-;;:::i;:::-;;1498:386;;;;;;:::i;:::-;;:::i;:::-;;;2975:25:10;;;2963:2;2948:18;1498:386:5;2829:177:10;1305:141:3;;;;;;;;;;;;;:::i;651:159::-;;;;;;:::i;:::-;;:::i;259:64:7:-;;;;;;;;;;-1:-1:-1;296:7:7;314:6;-1:-1:-1;;;;;314:6:7;259:64;;328:77;;;;;;;;;;-1:-1:-1;367:4:7;396:6;-1:-1:-1;;;;;396:6:7;382:10;:20;328:77;;175:37:5;;;;;;;;;;-1:-1:-1;175:37:5;;;;-1:-1:-1;;;;;175:37:5;;;816:348:3;;;;;;;;;;-1:-1:-1;816:348:3;;;;;:::i;:::-;;:::i;1412:80:5:-;;;;;;;;;;-1:-1:-1;1412:80:5;;;;;:::i;:::-;;:::i;2058:279::-;2119:4;396:6:7;;-1:-1:-1;;;;;396:6:7;382:10;:20;118:59;;;;-1:-1:-1;;;118:59:7;;;;;;;:::i;:::-;;;;;;;;;2168:5:5::1;2143:21;:30;;2135:61;;;::::0;-1:-1:-1;;;2135:61:5;;5940:2:10;2135:61:5::1;::::0;::::1;5922:21:10::0;5979:2;5959:18;;;5952:30;-1:-1:-1;;;5998:18:10;;;5991:48;6056:18;;2135:61:5::1;5738:342:10::0;2135:61:5::1;2278:28;::::0;2238:10:::1;::::0;2206:21:::1;::::0;2238:10;;2296:5;;2206:21;2278:28;2206:21;2278:28;2296:5;2238:10;2278:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2259:47:5;;2058:279;-1:-1:-1;;;;;2058:279:5:o;1890:114::-;367:4:7;396:6;-1:-1:-1;;;;;396:6:7;382:10;:20;118:59;;;;-1:-1:-1;;;118:59:7;;;;;;;:::i;:::-;1958:14:5::1;::::0;:39:::1;::::0;-1:-1:-1;;;1958:39:5;;::::1;::::0;::::1;2975:25:10::0;;;-1:-1:-1;;;;;1958:14:5;;::::1;::::0;:28:::1;::::0;2948:18:10;;1958:39:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1890:114:::0;:::o;1498:386::-;913:14;;1621:4;;-1:-1:-1;;;;;913:14:5;891:10;:37;;:50;;-1:-1:-1;367:4:7;396:6;-1:-1:-1;;;;;396:6:7;382:10;:20;932:9:5;883:110;;;;-1:-1:-1;;;883:110:5;;6779:2:10;883:110:5;;;6761:21:10;6818:2;6798:18;;;6791:30;6857:34;6837:18;;;6830:62;-1:-1:-1;;;6908:18:10;;;6901:45;6963:19;;883:110:5;6577:411:10;883:110:5;1656:33:::1;1668:21;1656:9;:33;:::i;:::-;1645:7;:44;;1637:75;;;::::0;-1:-1:-1;;;1637:75:5;;5940:2:10;1637:75:5::1;::::0;::::1;5922:21:10::0;5979:2;5959:18;;;5952:30;-1:-1:-1;;;5998:18:10;;;5991:48;6056:18;;1637:75:5::1;5738:342:10::0;1637:75:5::1;1739:14;::::0;:70:::1;::::0;-1:-1:-1;;;1739:70:5;;1722:14:::1;::::0;-1:-1:-1;;;;;1739:14:5::1;::::0;:28:::1;::::0;1775:7;;1739:70:::1;::::0;1784:5;;1791:17;;1739:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1722:87;;1824:27;1841:9;1824:27;;;;2975:25:10::0;;2963:2;2948:18;;2829:177;1824:27:5::1;;;;;;;;1868:9:::0;1498:386;-1:-1:-1;;;;1498:386:5:o;1305:141:3:-;1371:13;1396:43;;;;;;;;;;;;;;;;;;;1305:141;:::o;651:159::-;742:4;396:6:7;;-1:-1:-1;;;;;396:6:7;382:10;:20;118:59;;;;-1:-1:-1;;;118:59:7;;;;;;;:::i;:::-;765:38:3::1;785:7;794:5;801:1;765:19;:38::i;:::-;758:45;;183:1:7;651:159:3::0;;;;:::o;816:348::-;922:4;;959:30;;;;970:9;959:30;:::i;:::-;938:51;-1:-1:-1;999:30:3;1032:37;;;;1043:10;1032:37;:::i;:::-;1116:8;;1136:19;;1116:40;;-1:-1:-1;;;1116:40:3;;999:70;;-1:-1:-1;1086:71:3;;999:70;;-1:-1:-1;;;;;1116:8:3;;:19;;:40;;1136:19;1116:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1086:16;:71::i;:::-;1079:78;816:348;-1:-1:-1;;;;;;;816:348:3:o;1412:80:5:-;326:14;;-1:-1:-1;;;;;326:14:5;304:10;:37;296:102;;;;-1:-1:-1;;;296:102:5;;10017:2:10;296:102:5;;;9999:21:10;10056:2;10036:18;;;10029:30;10095:34;10075:18;;;10068:62;-1:-1:-1;;;10146:18:10;;;10139:50;10206:19;;296:102:5;9815:416:10;1452:415:3;1548:4;1564:20;1648:45;1665:11;:20;;;:27;1648:16;:45::i;:::-;1695:20;;1597:119;;;;;1695:20;1597:119;;;:::i;:::-;;;;;;;;;;;;;1587:130;;;;;;1564:153;;1728:9;1739;1750:7;1761:38;1777:11;:21;;;1761:15;:38::i;:::-;1727:72;;;;;;1853:6;-1:-1:-1;;;;;1817:42:3;:32;1827:12;1841:1;1844;1847;1817:32;;;;;;;;;;;;;;;;;11169:25:10;;;11242:4;11230:17;;;;11225:2;11210:18;;11203:45;11279:2;11264:18;;11257:34;11322:2;11307:18;;11300:34;11156:3;11141:19;;10942:398;1817:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1817:42:3;;1809:51;;;;;;1452:415;;;;:::o;447:696:0:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:0;-1:-1:-1;604:41:0;-1:-1:-1;765:28:0;;;781:2;765:28;820:280;-1:-1:-1;;851:5:0;-1:-1:-1;;;985:2:0;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:0;820:280;1064:21;-1:-1:-1;1120:6:0;447:696;-1:-1:-1;;;447:696:0:o;1873:345:3:-;1944:9;1955;1966:7;1993:9;:16;2013:2;1993:22;1985:59;;;;-1:-1:-1;;;1985:59:3;;11679:2:10;1985:59:3;;;11661:21:10;11718:2;11698:18;;;11691:30;11757:26;11737:18;;;11730:54;11801:18;;1985:59:3;11477:348:10;1985:59:3;-1:-1:-1;;;2103:2:3;2088:18;;2082:25;2146:2;2131:18;;2125:25;2197:2;2182:18;;;2176:25;2082;;2173:1;2168:34;;;;;1873:345::o;10139:916:1:-;10192:7;;-1:-1:-1;;;10267:17:1;;10263:103;;-1:-1:-1;;;10304:17:1;;;-1:-1:-1;10349:2:1;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:1;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:1;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:1;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:1;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:1;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:1:o;242:180:10:-;301:6;354:2;342:9;333:7;329:23;325:32;322:52;;;370:1;367;360:12;322:52;-1:-1:-1;393:23:10;;242:180;-1:-1:-1;242:180:10:o;619:250::-;704:1;714:113;728:6;725:1;722:13;714:113;;;804:11;;;798:18;785:11;;;778:39;750:2;743:10;714:113;;;-1:-1:-1;;861:1:10;843:16;;836:27;619:250::o;874:271::-;916:3;954:5;948:12;981:6;976:3;969:19;997:76;1066:6;1059:4;1054:3;1050:14;1043:4;1036:5;1032:16;997:76;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:10;1093:39;;;;1134:4;1089:50;;874:271;-1:-1:-1;;874:271:10:o;1150:220::-;1299:2;1288:9;1281:21;1262:4;1319:45;1360:2;1349:9;1345:18;1337:6;1319:45;:::i;1375:127::-;1436:10;1431:3;1427:20;1424:1;1417:31;1467:4;1464:1;1457:15;1491:4;1488:1;1481:15;1507:631;1571:5;1601:18;1642:2;1634:6;1631:14;1628:40;;;1648:18;;:::i;:::-;1723:2;1717:9;1691:2;1777:15;;-1:-1:-1;;1773:24:10;;;1799:2;1769:33;1765:42;1753:55;;;1823:18;;;1843:22;;;1820:46;1817:72;;;1869:18;;:::i;:::-;1909:10;1905:2;1898:22;1938:6;1929:15;;1968:6;1960;1953:22;2008:3;1999:6;1994:3;1990:16;1987:25;1984:45;;;2025:1;2022;2015:12;1984:45;2075:6;2070:3;2063:4;2055:6;2051:17;2038:44;2130:1;2123:4;2114:6;2106;2102:19;2098:30;2091:41;;;;1507:631;;;;;:::o;2143:220::-;2185:5;2238:3;2231:4;2223:6;2219:17;2215:27;2205:55;;2256:1;2253;2246:12;2205:55;2278:79;2353:3;2344:6;2331:20;2324:4;2316:6;2312:17;2278:79;:::i;2368:456::-;2454:6;2462;2470;2523:2;2511:9;2502:7;2498:23;2494:32;2491:52;;;2539:1;2536;2529:12;2491:52;2575:9;2562:23;2552:33;;2636:2;2625:9;2621:18;2608:32;2663:18;2655:6;2652:30;2649:50;;;2695:1;2692;2685:12;2649:50;2718:49;2759:7;2750:6;2739:9;2735:22;2718:49;:::i;:::-;2708:59;;;2814:2;2803:9;2799:18;2786:32;2776:42;;2368:456;;;;;:::o;3011:388::-;3088:6;3096;3149:2;3137:9;3128:7;3124:23;3120:32;3117:52;;;3165:1;3162;3155:12;3117:52;3201:9;3188:23;3178:33;;3262:2;3251:9;3247:18;3234:32;3289:18;3281:6;3278:30;3275:50;;;3321:1;3318;3311:12;3275:50;3344:49;3385:7;3376:6;3365:9;3361:22;3344:49;:::i;:::-;3334:59;;;3011:388;;;;;:::o;3844:347::-;3895:8;3905:6;3959:3;3952:4;3944:6;3940:17;3936:27;3926:55;;3977:1;3974;3967:12;3926:55;-1:-1:-1;4000:20:10;;4043:18;4032:30;;4029:50;;;4075:1;4072;4065:12;4029:50;4112:4;4104:6;4100:17;4088:29;;4164:3;4157:4;4148:6;4140;4136:19;4132:30;4129:39;4126:59;;;4181:1;4178;4171:12;4126:59;3844:347;;;;;:::o;4196:717::-;4286:6;4294;4302;4310;4363:2;4351:9;4342:7;4338:23;4334:32;4331:52;;;4379:1;4376;4369:12;4331:52;4419:9;4406:23;4448:18;4489:2;4481:6;4478:14;4475:34;;;4505:1;4502;4495:12;4475:34;4544:58;4594:7;4585:6;4574:9;4570:22;4544:58;:::i;:::-;4621:8;;-1:-1:-1;4518:84:10;-1:-1:-1;4709:2:10;4694:18;;4681:32;;-1:-1:-1;4725:16:10;;;4722:36;;;4754:1;4751;4744:12;4722:36;;4793:60;4845:7;4834:8;4823:9;4819:24;4793:60;:::i;:::-;4196:717;;;;-1:-1:-1;4872:8:10;-1:-1:-1;;;;4196:717:10:o;4918:409::-;4988:6;4996;5049:2;5037:9;5028:7;5024:23;5020:32;5017:52;;;5065:1;5062;5055:12;5017:52;5105:9;5092:23;5138:18;5130:6;5127:30;5124:50;;;5170:1;5167;5160:12;5124:50;5209:58;5259:7;5250:6;5239:9;5235:22;5209:58;:::i;:::-;5286:8;;5183:84;;-1:-1:-1;4918:409:10;-1:-1:-1;;;;4918:409:10:o;5332:401::-;5534:2;5516:21;;;5573:2;5553:18;;;5546:30;5612:34;5607:2;5592:18;;5585:62;-1:-1:-1;;;5678:2:10;5663:18;;5656:35;5723:3;5708:19;;5332:401::o;6295:277::-;6362:6;6415:2;6403:9;6394:7;6390:23;6386:32;6383:52;;;6431:1;6428;6421:12;6383:52;6463:9;6457:16;6516:5;6509:13;6502:21;6495:5;6492:32;6482:60;;6538:1;6535;6528:12;6482:60;6561:5;6295:277;-1:-1:-1;;;6295:277:10:o;6993:222::-;7058:9;;;7079:10;;;7076:133;;;7131:10;7126:3;7122:20;7119:1;7112:31;7166:4;7163:1;7156:15;7194:4;7191:1;7184:15;7220:289;7395:2;7384:9;7377:21;7358:4;7415:45;7456:2;7445:9;7441:18;7433:6;7415:45;:::i;:::-;7407:53;;7496:6;7491:2;7480:9;7476:18;7469:34;7220:289;;;;;:::o;7514:184::-;7584:6;7637:2;7625:9;7616:7;7612:23;7608:32;7605:52;;;7653:1;7650;7643:12;7605:52;-1:-1:-1;7676:16:10;;7514:184;-1:-1:-1;7514:184:10:o;7703:874::-;7782:6;7835:2;7823:9;7814:7;7810:23;7806:32;7803:52;;;7851:1;7848;7841:12;7803:52;7891:9;7878:23;7920:18;7961:2;7953:6;7950:14;7947:34;;;7977:1;7974;7967:12;7947:34;8000:22;;;;8056:2;8038:16;;;8034:25;8031:45;;;8072:1;8069;8062:12;8031:45;8105:2;8099:9;8147:2;8139:6;8135:15;8200:6;8188:10;8185:22;8180:2;8168:10;8165:18;8162:46;8159:72;;;8211:18;;:::i;:::-;8247:2;8240:22;8287:16;;8315;;;8312:36;;;8344:1;8341;8334:12;8312:36;8375:8;8371:2;8367:17;8357:27;;;8422:7;8415:4;8411:2;8407:13;8403:27;8393:55;;8444:1;8441;8434:12;8393:55;8472:73;8537:7;8532:2;8519:16;8514:2;8510;8506:11;8472:73;:::i;:::-;8457:89;;8464:6;7703:874;-1:-1:-1;;;;;7703:874:10:o;8582:933::-;8668:6;8721:2;8709:9;8700:7;8696:23;8692:32;8689:52;;;8737:1;8734;8727:12;8689:52;8777:9;8764:23;8806:18;8847:2;8839:6;8836:14;8833:34;;;8863:1;8860;8853:12;8833:34;8886:22;;;;8942:4;8924:16;;;8920:27;8917:47;;;8960:1;8957;8950:12;8917:47;8993:4;8987:11;9037:4;9029:6;9025:17;9092:6;9080:10;9077:22;9072:2;9060:10;9057:18;9054:46;9051:72;;;9103:18;;:::i;:::-;9139:4;9132:24;9181:16;;9209;;;9206:36;;;9238:1;9235;9228:12;9206:36;9266:44;9302:7;9291:8;9287:2;9283:17;9266:44;:::i;:::-;9258:6;9251:60;;9357:2;9353;9349:11;9336:25;9386:2;9376:8;9373:16;9370:36;;;9402:1;9399;9392:12;9370:36;9439:44;9475:7;9464:8;9460:2;9456:17;9439:44;:::i;:::-;9434:2;9422:15;;9415:69;-1:-1:-1;9426:6:10;8582:933;-1:-1:-1;;;;;8582:933:10:o;9520:290::-;9590:6;9643:2;9631:9;9622:7;9618:23;9614:32;9611:52;;;9659:1;9656;9649:12;9611:52;9685:16;;-1:-1:-1;;;;;9730:31:10;;9720:42;;9710:70;;9776:1;9773;9766:12;10236:701;10544:66;10539:3;10532:79;10514:3;10640:6;10634:13;10656:75;10724:6;10719:2;10714:3;10710:12;10703:4;10695:6;10691:17;10656:75;:::i;:::-;10791:13;;10750:16;;;;10813:76;10791:13;10875:2;10867:11;;10860:4;10848:17;;10813:76;:::i;:::-;10909:17;10928:2;10905:26;;10236:701;-1:-1:-1;;;;10236:701:10:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    417,
    2221
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x877F0AD0 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8F32D59B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xC2C56245 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xC91C7B37 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xCB392747 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x877F0AD0 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8D68CF59 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85D4883 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x2896DE13 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x43BB58DE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x8244741C EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x7B737472696E67206170694964656E7469666965723B7D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xA2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC054E53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3015394C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x41C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37BBB732B91037B910313937B5B2B9 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x48A SELFBALANCE CALLVALUE PUSH2 0xCE7 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x78F8AF25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF1F15E4A SWAP1 DUP8 SWAP1 PUSH2 0x503 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP PUSH32 0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C DUP2 PUSH1 0x40 MLOAD PUSH2 0x579 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF09 PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x5E0 DUP4 DUP4 PUSH1 0x0 PUSH2 0x3F6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5F8 DUP6 DUP8 ADD DUP8 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x608 DUP5 DUP7 ADD DUP7 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH2 0x686 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0x640 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x195C995908189C9BDAD95C8818DBDB9D1C9858DD PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x719 DUP5 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x7E4 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x40 MLOAD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x756 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x877 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7F1 DUP4 PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x845 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B7 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x92A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x956 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x974 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x98C JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x9A0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x9B2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x5E3 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xA18 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5E0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA70 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA98 PUSH2 0xA3F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E0 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2A DUP7 DUP3 DUP8 ADD PUSH2 0xACB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB78 DUP6 DUP3 DUP7 ADD PUSH2 0xACB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC05 DUP9 DUP4 DUP10 ADD PUSH2 0xB82 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2B DUP8 DUP3 DUP9 ADD PUSH2 0xB82 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6D DUP6 DUP3 DUP7 ADD PUSH2 0xB82 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD1B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9C PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP6 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD2 DUP7 DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD PUSH2 0xA55 JUMP JUMPDEST DUP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE54 DUP8 DUP3 DUP7 ADD PUSH2 0xACB JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP8 DUP3 DUP7 ADD PUSH2 0xACB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xEE5 DUP2 PUSH1 0x1A DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9DC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xEFC DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x9DC JUMP JUMPDEST ADD PUSH1 0x1A ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH28 0x627974657320726573706F6E73653B206279746573207369676E6174 PUSH22 0x72653B7DA26469706673582212208F19B8AB247DBBEC DUP7 0xC7 CALL DUP3 PUSH27 0x430A9F6B9D7274902FCFD588FCB3FABF7A25A864736F6C63430008 SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2"
    },
    "12": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x877F0AD0"
    },
    "25": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "36": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "47": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20C"
    },
    "51": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC2C56245"
    },
    "58": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22C"
    },
    "62": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC91C7B37"
    },
    "69": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24C"
    },
    "73": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB392747"
    },
    "80": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26C"
    },
    "84": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x877F0AD0"
    },
    "96": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB"
    },
    "100": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D68CF59"
    },
    "107": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A3"
    },
    "111": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE"
    },
    "122": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "127": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "128": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "129": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85D4883"
    },
    "134": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "138": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x155DD5EE"
    },
    "145": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "149": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "150": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2896DE13"
    },
    "156": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x134"
    },
    "160": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3015394C"
    },
    "167": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "168": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x183"
    },
    "171": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x43BB58DE"
    },
    "178": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A5"
    },
    "182": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8244741C"
    },
    "189": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "193": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "197": {
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "DUP1",
      "path": "3"
    },
    "198": {
      "first_revert": true,
      "fn": null,
      "offset": [
        417,
        2221
      ],
      "op": "REVERT",
      "path": "3"
    },
    "199": {
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "202": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3"
    },
    "206": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "REVERT",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "215": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "216": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "219": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "offset": [
        459,
        486
      ],
      "op": "AND",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "SUB"
    },
    "243": {
      "op": "SWAP1"
    },
    "244": {
      "op": "SWAP2"
    },
    "245": {
      "op": "AND"
    },
    "246": {
      "op": "DUP2"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "ADD"
    },
    "251": {
      "offset": [
        459,
        486
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "254": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SUB",
      "path": "3"
    },
    "258": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "259": {
      "fn": null,
      "offset": [
        459,
        486
      ],
      "op": "RETURN",
      "path": "3"
    },
    "260": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "261": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "262": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "263": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "264": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110"
    },
    "267": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "268": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "270": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "271": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "REVERT",
      "path": "5"
    },
    "272": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "273": {
      "op": "POP"
    },
    "274": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x124"
    },
    "277": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F"
    },
    "280": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "281": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "283": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C3"
    },
    "286": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMP",
      "path": "5"
    },
    "287": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "288": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "291": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMP",
      "path": "5"
    },
    "292": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "293": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "295": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "296": {
      "op": "SWAP1"
    },
    "297": {
      "op": "ISZERO"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "DUP2"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB"
    },
    "307": {
      "op": "JUMP"
    },
    "308": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "309": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "310": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "DUP1",
      "path": "3"
    },
    "311": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "312": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "315": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "318": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "DUP1",
      "path": "3"
    },
    "319": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "REVERT",
      "path": "3"
    },
    "320": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "321": {
      "op": "POP"
    },
    "322": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "324": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "DUP1",
      "path": "3"
    },
    "325": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "326": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "DUP1",
      "path": "3"
    },
    "327": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "DUP3",
      "path": "3"
    },
    "328": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "ADD",
      "path": "3"
    },
    "329": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "330": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "331": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "332": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "334": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "DUP2",
      "path": "3"
    },
    "335": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "336": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7B737472696E67206170694964656E7469666965723B7D000000000000000000"
    },
    "369": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "371": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "DUP3",
      "path": "3"
    },
    "372": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "ADD",
      "path": "3"
    },
    "373": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1260,
        1292
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "374": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "375": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "377": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "378": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB"
    },
    "381": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "382": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "383": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        1170,
        1299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2C"
    },
    "386": {
      "fn": "APIConsumer.getInputDataStructure",
      "jump": "i",
      "offset": [
        1170,
        1299
      ],
      "op": "JUMP",
      "path": "3"
    },
    "387": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "388": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "389": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "DUP1",
      "path": "5"
    },
    "390": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "391": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F"
    },
    "394": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "395": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "397": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "DUP1",
      "path": "5"
    },
    "398": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "REVERT",
      "path": "5"
    },
    "399": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "404": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19E"
    },
    "407": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "408": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "410": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C3"
    },
    "413": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "414": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "415": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x359"
    },
    "418": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "419": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "420": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "STOP",
      "path": "5"
    },
    "421": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "422": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8"
    },
    "425": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B3"
    },
    "428": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "429": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "431": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAEB"
    },
    "434": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMP",
      "path": "5"
    },
    "435": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "436": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F6"
    },
    "439": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMP",
      "path": "5"
    },
    "440": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "441": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "443": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "444": {
      "op": "SWAP1"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB"
    },
    "453": {
      "op": "JUMP"
    },
    "454": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "456": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "457": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "458": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D2"
    },
    "461": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "462": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "464": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "465": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "REVERT",
      "path": "3"
    },
    "466": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "467": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "POP",
      "path": "3"
    },
    "468": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x176"
    },
    "471": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x589"
    },
    "474": {
      "fn": "APIConsumer.getResultDataStructure",
      "jump": "i",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "475": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "476": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8"
    },
    "479": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "482": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "483": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "485": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3B"
    },
    "488": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "489": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "490": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A9"
    },
    "493": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "494": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "495": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "496": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "498": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "502": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "504": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "REVERT",
      "path": "7"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "Ownable.owner",
      "offset": [
        296,
        303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "510": {
      "fn": "Ownable.owner",
      "offset": [
        314,
        320
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 1
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "fn": "Ownable.owner",
      "offset": [
        314,
        320
      ],
      "op": "AND",
      "path": "7"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        259,
        323
      ],
      "op": "JUMP",
      "path": "7"
    },
    "524": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "525": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "526": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "527": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "528": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x218"
    },
    "531": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "532": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "534": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "535": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "REVERT",
      "path": "7"
    },
    "536": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "fn": "Ownable.isOwner",
      "offset": [
        367,
        371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "540": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 2
    },
    "541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "547": {
      "op": "SHL"
    },
    "548": {
      "op": "SUB"
    },
    "549": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "AND",
      "path": "7"
    },
    "550": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        392
      ],
      "op": "CALLER",
      "path": "7"
    },
    "551": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        402
      ],
      "op": "EQ",
      "path": "7"
    },
    "552": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x124"
    },
    "555": {
      "fn": "Ownable.isOwner",
      "offset": [
        328,
        405
      ],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "557": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "558": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "559": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "560": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x238"
    },
    "563": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "564": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "566": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "567": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "REVERT",
      "path": "5"
    },
    "568": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "572": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "573": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7"
    },
    "576": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "583": {
      "op": "SHL"
    },
    "584": {
      "op": "SUB"
    },
    "585": {
      "offset": [
        175,
        212
      ],
      "op": "AND",
      "path": "5"
    },
    "586": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "587": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "588": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "589": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "590": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "DUP1",
      "path": "3"
    },
    "591": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "592": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "595": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "596": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "598": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "DUP1",
      "path": "3"
    },
    "599": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "REVERT",
      "path": "3"
    },
    "600": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "605": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267"
    },
    "608": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "609": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "611": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBCB"
    },
    "614": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "615": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "616": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E9"
    },
    "619": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "620": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "621": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "622": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "DUP1",
      "path": "5"
    },
    "623": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "624": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x278"
    },
    "627": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "628": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "630": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "DUP1",
      "path": "5"
    },
    "631": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "REVERT",
      "path": "5"
    },
    "632": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "637": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x287"
    },
    "640": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "641": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "643": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC37"
    },
    "646": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMP",
      "path": "5"
    },
    "647": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "648": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x691"
    },
    "651": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMP",
      "path": "5"
    },
    "652": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "653": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2119,
        2123
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "655": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "DUP1",
      "path": "7"
    },
    "656": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "663": {
      "op": "SHL"
    },
    "664": {
      "op": "SUB"
    },
    "665": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "AND",
      "path": "7"
    },
    "666": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        392
      ],
      "op": "CALLER",
      "path": "7"
    },
    "667": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        402
      ],
      "op": "EQ",
      "path": "7"
    },
    "668": {
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C0"
    },
    "671": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "672": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "674": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "offset": [
        118,
        177
      ],
      "op": "DUP2",
      "path": "7"
    },
    "683": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "684": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "686": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "ADD",
      "path": "7"
    },
    "687": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "690": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "691": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC79"
    },
    "694": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "695": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "696": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "698": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "699": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "DUP1",
      "path": "7"
    },
    "700": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "701": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SUB",
      "path": "7"
    },
    "702": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "703": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "704": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "705": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2168,
        2173
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 3
    },
    "706": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2164
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "707": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2173
      ],
      "op": "LT",
      "path": "5"
    },
    "708": {
      "branch": 31,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2173
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "709": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x305"
    },
    "712": {
      "branch": 31,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "713": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "715": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "724": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "727": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "729": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "DUP3",
      "path": "5"
    },
    "730": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "ADD",
      "path": "5"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "736": {
      "op": "DUP3"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "763": {
      "op": "DUP3"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "772": {
      "op": "JUMP"
    },
    "773": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2135,
        2196
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "774": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "776": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "777": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2238,
        2248
      ],
      "op": "CALLER",
      "path": "5"
    },
    "778": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2238,
        2248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2206,
        2227
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "781": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2206,
        2227
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "782": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2238,
        2248
      ],
      "op": "DUP3",
      "path": "5"
    },
    "783": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2238,
        2248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "784": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2296,
        2301
      ],
      "op": "DUP6",
      "path": "5"
    },
    "785": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2296,
        2301
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "786": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2206,
        2227
      ],
      "op": "DUP4",
      "path": "5"
    },
    "787": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "788": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2206,
        2227
      ],
      "op": "DUP2",
      "path": "5"
    },
    "789": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "790": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2296,
        2301
      ],
      "op": "DUP6",
      "path": "5"
    },
    "791": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2238,
        2248
      ],
      "op": "DUP8",
      "path": "5"
    },
    "792": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "GAS",
      "path": "5"
    },
    "793": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "CALL",
      "path": "5"
    },
    "794": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "795": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "POP",
      "path": "5"
    },
    "796": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "POP",
      "path": "5"
    },
    "797": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "POP",
      "path": "5"
    },
    "798": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "799": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP1",
      "path": "5"
    },
    "800": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "802": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "803": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "EQ",
      "path": "5"
    },
    "804": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x349"
    },
    "807": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "808": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "810": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "811": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "812": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "POP",
      "path": "5"
    },
    "813": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "815": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "NOT",
      "path": "5"
    },
    "816": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "818": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "819": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "ADD",
      "path": "5"
    },
    "820": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "AND",
      "path": "5"
    },
    "821": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP3",
      "path": "5"
    },
    "822": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "ADD",
      "path": "5"
    },
    "823": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "825": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "826": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "827": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP3",
      "path": "5"
    },
    "828": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "829": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "830": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "832": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "834": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "DUP5",
      "path": "5"
    },
    "835": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "ADD",
      "path": "5"
    },
    "836": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "837": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34E"
    },
    "840": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "JUMP",
      "path": "5"
    },
    "841": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "842": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "844": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "845": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "POP",
      "path": "5"
    },
    "846": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2278,
        2306
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2259,
        2306
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "849": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2259,
        2306
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "850": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2058,
        2337
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "o",
      "offset": [
        2058,
        2337
      ],
      "op": "JUMP",
      "path": "5"
    },
    "857": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "858": {
      "fn": "Ownable.isOwner",
      "offset": [
        367,
        371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "860": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "AND",
      "path": "7"
    },
    "870": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        392
      ],
      "op": "CALLER",
      "path": "7"
    },
    "871": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        402
      ],
      "op": "EQ",
      "path": "7"
    },
    "872": {
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x383"
    },
    "875": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "876": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "878": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "offset": [
        118,
        177
      ],
      "op": "DUP2",
      "path": "7"
    },
    "887": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "888": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "890": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "ADD",
      "path": "7"
    },
    "891": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "894": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "895": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC79"
    },
    "898": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "899": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "900": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x1"
    },
    "902": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "903": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "905": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "906": {
      "op": "PUSH4",
      "value": "0xC054E53"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "915": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "916": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "918": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ADD",
      "path": "5"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "SWAP1"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "932": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "933": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "AND",
      "path": "5"
    },
    "934": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "935": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1986
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3015394C"
    },
    "940": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1986
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "946": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "948": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "949": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "950": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP4",
      "path": "5"
    },
    "951": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "SUB",
      "path": "5"
    },
    "952": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "953": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "955": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP8",
      "path": "5"
    },
    "956": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "GAS",
      "path": "5"
    },
    "957": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "CALL",
      "path": "5"
    },
    "958": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "959": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "960": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "961": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CE"
    },
    "964": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "965": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "966": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "968": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "969": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "970": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "971": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "973": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "REVERT",
      "path": "5"
    },
    "974": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "975": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "976": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "977": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "978": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "979": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "981": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "982": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "983": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "985": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "NOT",
      "path": "5"
    },
    "986": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "988": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP3",
      "path": "5"
    },
    "989": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ADD",
      "path": "5"
    },
    "990": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "AND",
      "path": "5"
    },
    "991": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP3",
      "path": "5"
    },
    "992": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ADD",
      "path": "5"
    },
    "993": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "994": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "996": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "997": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "998": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "999": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "ADD",
      "path": "5"
    },
    "1000": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1001": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F2"
    },
    "1004": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1005": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1006": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCBE"
    },
    "1009": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1958,
        1997
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1010": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1011": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1958,
        1997
      ],
      "op": "POP",
      "path": "5"
    },
    "1012": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1890,
        2004
      ],
      "op": "POP",
      "path": "5"
    },
    "1013": {
      "fn": "BaseClient.cancelRequest",
      "jump": "o",
      "offset": [
        1890,
        2004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1014": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1015": {
      "offset": [
        913,
        927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1017": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        913,
        927
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1018": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1621,
        1625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1020": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1621,
        1625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "SUB"
    },
    "1029": {
      "offset": [
        913,
        927
      ],
      "op": "AND",
      "path": "5"
    },
    "1030": {
      "offset": [
        891,
        901
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1031": {
      "offset": [
        891,
        928
      ],
      "op": "EQ",
      "path": "5"
    },
    "1032": {
      "branch": 32,
      "fn": "BaseClient.submitRequest",
      "offset": [
        891,
        928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1033": {
      "offset": [
        891,
        941
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41C"
    },
    "1036": {
      "branch": 32,
      "offset": [
        891,
        941
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "fn": "Ownable.isOwner",
      "offset": [
        367,
        371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1040": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "AND",
      "path": "7"
    },
    "1050": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        392
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1051": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        402
      ],
      "op": "EQ",
      "path": "7"
    },
    "1052": {
      "offset": [
        932,
        941
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1053": {
      "offset": [
        883,
        993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x480"
    },
    "1056": {
      "offset": [
        883,
        993
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1057": {
      "fn": "Ownable.isOwner",
      "offset": [
        883,
        993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1059": {
      "fn": "Ownable.isOwner",
      "offset": [
        883,
        993
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "offset": [
        883,
        993
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1068": {
      "fn": "Ownable.isOwner",
      "offset": [
        883,
        993
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1071": {
      "offset": [
        883,
        993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1073": {
      "fn": "Ownable.isOwner",
      "offset": [
        883,
        993
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1074": {
      "fn": "Ownable.isOwner",
      "offset": [
        883,
        993
      ],
      "op": "ADD",
      "path": "5"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH15",
      "value": "0x37BBB732B91037B910313937B5B2B9"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "offset": [
        883,
        993
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "1151": {
      "op": "JUMP"
    },
    "1152": {
      "offset": [
        883,
        993
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1153": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1656,
        1689
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x48A"
    },
    "1156": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1668,
        1689
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "1157": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1656,
        1665
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1158": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1656,
        1689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE7"
    },
    "1161": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1656,
        1689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1162": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1656,
        1689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1163": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1645,
        1652
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1164": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1645,
        1689
      ],
      "op": "GT",
      "path": "5"
    },
    "1165": {
      "branch": 33,
      "fn": "BaseClient.submitRequest",
      "offset": [
        1645,
        1689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1166": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CE"
    },
    "1169": {
      "branch": 33,
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1170": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1172": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1173": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1179": {
      "op": "SHL"
    },
    "1180": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1181": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1184": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1186": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1187": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "ADD",
      "path": "5"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1220": {
      "op": "DUP3"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "1229": {
      "op": "JUMP"
    },
    "1230": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1637,
        1712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1231": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1233": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1753
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1234": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1236": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1237": {
      "op": "PUSH4",
      "value": "0x78F8AF25"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1246": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1247": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1722,
        1736
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1249": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1722,
        1736
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1753
      ],
      "op": "AND",
      "path": "5"
    },
    "1259": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1260": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1767
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF1F15E4A"
    },
    "1265": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1767
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1266": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1775,
        1782
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1267": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1775,
        1782
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1268": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x503"
    },
    "1271": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1272": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1784,
        1789
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1273": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1784,
        1789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1274": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1791,
        1808
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1275": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1791,
        1808
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1276": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1278": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ADD",
      "path": "5"
    },
    "1279": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD08"
    },
    "1282": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1283": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1284": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1286": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1288": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1289": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1290": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1291": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "SUB",
      "path": "5"
    },
    "1292": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1293": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1294": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1295": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "GAS",
      "path": "5"
    },
    "1296": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "CALL",
      "path": "5"
    },
    "1297": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1298": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1299": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1300": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x521"
    },
    "1303": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1304": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1305": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1307": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1308": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1309": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1310": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1312": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1313": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1314": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1315": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1316": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1317": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1318": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1319": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1321": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1322": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1323": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1325": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "NOT",
      "path": "5"
    },
    "1326": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1328": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1329": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ADD",
      "path": "5"
    },
    "1330": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "AND",
      "path": "5"
    },
    "1331": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1332": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ADD",
      "path": "5"
    },
    "1333": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1334": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1336": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1337": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1338": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1339": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "ADD",
      "path": "5"
    },
    "1340": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1341": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x546"
    },
    "1344": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1345": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1346": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2A"
    },
    "1349": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1350": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1739,
        1809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1351": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1722,
        1809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1352": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1722,
        1809
      ],
      "op": "POP",
      "path": "5"
    },
    "1353": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 6,
      "value": "0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C"
    },
    "1386": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1841,
        1850
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1387": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1389": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1390": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x579"
    },
    "1393": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1394": {
      "op": "DUP2"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "SWAP1"
    },
    "1400": {
      "op": "JUMP"
    },
    "1401": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1402": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1404": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1405": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1406": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1407": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "SUB",
      "path": "5"
    },
    "1408": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1409": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1824,
        1851
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1410": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1868,
        1877
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 7
    },
    "1411": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1498,
        1884
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "fn": "BaseClient.submitRequest",
      "jump": "o",
      "offset": [
        1498,
        1884
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1417": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1418": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1371,
        1384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1420": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x40"
    },
    "1422": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1423": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1424": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1426": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "ADD",
      "path": "3"
    },
    "1427": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1429": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1430": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1431": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1433": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1434": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1435": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1437": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "ADD",
      "path": "3"
    },
    "1438": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF09"
    },
    "1441": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1443": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1444": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1445": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1446": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1396,
        1439
      ],
      "op": "POP",
      "path": "3"
    },
    "1447": {
      "fn": "APIConsumer.getResultDataStructure",
      "offset": [
        1305,
        1446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1448": {
      "fn": "APIConsumer.getResultDataStructure",
      "jump": "o",
      "offset": [
        1305,
        1446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1449": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1450": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        742,
        746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1452": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1453": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "fn": "Ownable.isOwner",
      "offset": [
        396,
        402
      ],
      "op": "AND",
      "path": "7"
    },
    "1463": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        392
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1464": {
      "fn": "Ownable.isOwner",
      "offset": [
        382,
        402
      ],
      "op": "EQ",
      "path": "7"
    },
    "1465": {
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D4"
    },
    "1468": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1469": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1471": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "offset": [
        118,
        177
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1480": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1481": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1483": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "ADD",
      "path": "7"
    },
    "1484": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B7"
    },
    "1487": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1488": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC79"
    },
    "1491": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        177
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1492": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        177
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1493": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        803
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x5E0"
    },
    "1496": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        785,
        792
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1497": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        794,
        799
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1498": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        801,
        802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1500": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        784
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "1503": {
      "fn": "APIConsumer.submitRequest",
      "jump": "i",
      "offset": [
        765,
        803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1504": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        765,
        803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1505": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        758,
        803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1506": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        758,
        803
      ],
      "op": "POP",
      "path": "3"
    },
    "1507": {
      "offset": [
        183,
        184
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1508": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1509": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1510": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "POP",
      "path": "3"
    },
    "1511": {
      "fn": "APIConsumer.submitRequest",
      "offset": [
        651,
        810
      ],
      "op": "POP",
      "path": "3"
    },
    "1512": {
      "fn": "APIConsumer.submitRequest",
      "jump": "o",
      "offset": [
        651,
        810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1513": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1514": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        922,
        926
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1516": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        922,
        926
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1517": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F8"
    },
    "1520": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1521": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1522": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "ADD",
      "path": "3"
    },
    "1523": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        970,
        979
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1524": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD43"
    },
    "1527": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        959,
        989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1528": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        959,
        989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1529": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        938,
        989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1533": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x608"
    },
    "1536": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1537": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1538": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "ADD",
      "path": "3"
    },
    "1539": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1043,
        1053
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1540": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDD"
    },
    "1543": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1032,
        1069
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1544": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1032,
        1069
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1545": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x2"
    },
    "1547": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1548": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1549": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1550": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1552": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1553": {
      "op": "PUSH4",
      "value": "0xBF40FAC1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1562": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1563": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1564": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x686"
    },
    "1569": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1570": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1571": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        999,
        1069
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "SUB"
    },
    "1580": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "AND",
      "path": "3"
    },
    "1581": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1582": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1135
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBF40FAC1"
    },
    "1587": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1135
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1588": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x640"
    },
    "1591": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1592": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1136,
        1155
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1593": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1595": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1596": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2C"
    },
    "1599": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1600": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1601": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1603": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1605": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1606": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1607": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1608": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SUB",
      "path": "3"
    },
    "1609": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1610": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1611": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "GAS",
      "path": "3"
    },
    "1612": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1613": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1614": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1615": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1616": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65D"
    },
    "1619": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1620": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1621": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1623": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1624": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1625": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1626": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1628": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1629": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1630": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1631": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1632": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1633": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1634": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1636": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1637": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1638": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1640": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "NOT",
      "path": "3"
    },
    "1641": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1643": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1644": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1645": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "AND",
      "path": "3"
    },
    "1646": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1647": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1648": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1649": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1651": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1652": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "POP",
      "path": "3"
    },
    "1653": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1654": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "ADD",
      "path": "3"
    },
    "1655": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1656": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x681"
    },
    "1659": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1660": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1661": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE84"
    },
    "1664": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1665": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1116,
        1156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1666": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x708"
    },
    "1669": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        1086,
        1157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1670": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1086,
        1157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1671": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        1079,
        1157
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1672": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        816,
        1164
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1673": {
      "op": "POP"
    },
    "1674": {
      "op": "POP"
    },
    "1675": {
      "op": "POP"
    },
    "1676": {
      "op": "POP"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "fn": "APIConsumer.checkResult",
      "jump": "o",
      "offset": [
        816,
        1164
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1681": {
      "fn": "BaseClient.processResult",
      "offset": [
        1412,
        1492
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1682": {
      "offset": [
        326,
        340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1684": {
      "fn": "BaseClient.processResult",
      "offset": [
        326,
        340
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "offset": [
        326,
        340
      ],
      "op": "AND",
      "path": "5"
    },
    "1694": {
      "offset": [
        304,
        314
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1695": {
      "offset": [
        304,
        341
      ],
      "op": "EQ",
      "path": "5"
    },
    "1696": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F2"
    },
    "1699": {
      "offset": [
        296,
        398
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1700": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1702": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "offset": [
        296,
        398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1711": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1714": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1716": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1717": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "ADD",
      "path": "5"
    },
    "1718": {
      "op": "MSTORE"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1761": {
      "op": "DUP3"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH20",
      "value": "0x195C995908189C9BDAD95C8818DBDB9D1C9858DD"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "1799": {
      "op": "JUMP"
    },
    "1800": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1801": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1548,
        1552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1803": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1584
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1804": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x719"
    },
    "1807": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1676
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1808": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1810": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "ADD",
      "path": "3"
    },
    "1811": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1812": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1665,
        1692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1813": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E4"
    },
    "1816": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1648,
        1693
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1817": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1648,
        1693
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1818": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1819": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1820": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1822": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1823": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72C"
    },
    "1826": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1827": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1828": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1695,
        1715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1829": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1831": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "ADD",
      "path": "3"
    },
    "1832": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAD"
    },
    "1835": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1597,
        1716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1836": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1837": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1839": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1840": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1842": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1843": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1844": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SUB",
      "path": "3"
    },
    "1845": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SUB",
      "path": "3"
    },
    "1846": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1847": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1848": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1849": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1851": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1597,
        1716
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1852": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1853": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1854": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1855": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1857": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "ADD",
      "path": "3"
    },
    "1858": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1587,
        1717
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1859": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1860": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1564,
        1717
      ],
      "op": "POP",
      "path": "3"
    },
    "1861": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1728,
        1737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1863": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1739,
        1748
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1864": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1750,
        1757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1866": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x756"
    },
    "1869": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1788
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1870": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1872": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "ADD",
      "path": "3"
    },
    "1873": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1777,
        1798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1874": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x877"
    },
    "1877": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1761,
        1799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1878": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1761,
        1799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1879": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1880": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1881": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1882": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1883": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1884": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1727,
        1799
      ],
      "op": "POP",
      "path": "3"
    },
    "1885": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1853,
        1859
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 11
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "AND",
      "path": "3"
    },
    "1895": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1897": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1827,
        1839
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1898": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1841,
        1842
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1899": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1844,
        1845
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1900": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1847,
        1848
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1901": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1903": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1904": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1906": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1907": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1908": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1910": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ADD",
      "path": "3"
    },
    "1911": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1913": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1914": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1916": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1917": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A2"
    },
    "1920": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1921": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1922": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1923": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1924": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1925": {
      "op": "SWAP4"
    },
    "1926": {
      "op": "DUP5"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1930": {
      "op": "SWAP3"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "op": "SWAP3"
    },
    "1933": {
      "op": "AND"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1936": {
      "op": "DUP5"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "MSTORE"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1941": {
      "op": "DUP4"
    },
    "1942": {
      "op": "ADD"
    },
    "1943": {
      "op": "MSTORE"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1946": {
      "op": "DUP3"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "op": "SWAP1"
    },
    "1953": {
      "op": "JUMP"
    },
    "1954": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1955": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1957": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1959": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1960": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1962": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1963": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1964": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1965": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1966": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1967": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1968": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1969": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1970": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "GAS",
      "path": "3"
    },
    "1971": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1972": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1973": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1974": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1975": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C4"
    },
    "1978": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1979": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1980": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1982": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1983": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1984": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1985": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1987": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1988": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1989": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1990": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1991": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "POP",
      "path": "3"
    },
    "1992": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1994": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1996": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1997": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "SUB",
      "path": "3"
    },
    "1998": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "op": "SUB"
    },
    "2007": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "AND",
      "path": "3"
    },
    "2008": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1817,
        1859
      ],
      "op": "EQ",
      "path": "3"
    },
    "2009": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2010": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "2011": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "2012": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "2013": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "2014": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1809,
        1860
      ],
      "op": "POP",
      "path": "3"
    },
    "2015": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2016": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2017": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "POP",
      "path": "3"
    },
    "2018": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1452,
        1867
      ],
      "op": "POP",
      "path": "3"
    },
    "2019": {
      "fn": "APIConsumer._verifySignature",
      "jump": "o",
      "offset": [
        1452,
        1867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2020": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2021": {
      "fn": "Strings.toString",
      "offset": [
        503,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2023": {
      "fn": "Strings.toString",
      "offset": [
        552,
        566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2025": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F1"
    },
    "2028": {
      "fn": "Strings.toString",
      "offset": [
        580,
        585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2029": {
      "fn": "Strings.toString",
      "offset": [
        569,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EB"
    },
    "2032": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        569,
        586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2033": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2034": {
      "fn": "Strings.toString",
      "offset": [
        589,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2036": {
      "fn": "Strings.toString",
      "offset": [
        569,
        590
      ],
      "op": "ADD",
      "path": "0"
    },
    "2037": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2038": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "2039": {
      "fn": "Strings.toString",
      "offset": [
        604,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2041": {
      "fn": "Strings.toString",
      "offset": [
        638,
        644
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2042": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2051": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2052": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "GT",
      "path": "0"
    },
    "2053": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2054": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x811"
    },
    "2057": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2058": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x811"
    },
    "2061": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3F"
    },
    "2064": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        627,
        645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2065": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2066": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2068": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2069": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2070": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2071": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2072": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2073": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2074": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2076": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2077": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2079": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "NOT",
      "path": "0"
    },
    "2080": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "AND",
      "path": "0"
    },
    "2081": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2083": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2084": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2085": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2086": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2088": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2089": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2090": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2091": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83B"
    },
    "2094": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2095": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2097": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2098": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2099": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2100": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2101": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2102": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2103": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2104": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "2105": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "fn": "Strings.toString",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2112": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2113": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "2114": {
      "fn": "Strings.toString",
      "offset": [
        781,
        783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2116": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "2117": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2120": {
      "op": "NOT"
    },
    "2121": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "ADD",
      "path": "0",
      "statement": 12
    },
    "2122": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "fn": "Strings.toString",
      "offset": [
        985,
        987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2144": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2145": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "MOD",
      "path": "0"
    },
    "2146": {
      "fn": "Strings.toString",
      "offset": [
        969,
        999
      ],
      "op": "BYTE",
      "path": "0"
    },
    "2147": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2148": {
      "fn": "Strings.toString",
      "offset": [
        956,
        1000
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "2149": {
      "fn": "Strings.toString",
      "offset": [
        1044,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0xA"
    },
    "2151": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2152": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DIV",
      "path": "0"
    },
    "2153": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2156": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x845"
    },
    "2159": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "fn": "Strings.toString",
      "offset": [
        1120,
        1126
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 14
    },
    "2162": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2163": {
      "op": "POP"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        447,
        1143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2167": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1873,
        2218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2168": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1944,
        1953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2170": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1955,
        1964
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2171": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1966,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2173": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2002
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 15
    },
    "2174": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2175": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2013,
        2015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "2177": {
      "branch": 30,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1993,
        2015
      ],
      "op": "EQ",
      "path": "3"
    },
    "2178": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CD"
    },
    "2181": {
      "branch": 30,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2182": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2184": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2193": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2196": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2198": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2199": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "ADD",
      "path": "3"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2205": {
      "op": "DUP3"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "PUSH32",
      "value": "0x696E76616C6964207369676E6174757265206C656E6774680000000000000000"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2243": {
      "op": "DUP3"
    },
    "2244": {
      "op": "ADD"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B7"
    },
    "2252": {
      "op": "JUMP"
    },
    "2253": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1985,
        2044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2103,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2259": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2260": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2088,
        2106
      ],
      "op": "ADD",
      "path": "3"
    },
    "2261": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2262": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2146,
        2148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2264": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2131,
        2149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2265": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2131,
        2149
      ],
      "op": "ADD",
      "path": "3"
    },
    "2266": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2125,
        2150
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2267": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2197,
        2199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2269": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2270": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2271": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2182,
        2200
      ],
      "op": "ADD",
      "path": "3"
    },
    "2272": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2176,
        2201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2273": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2274": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2082,
        2107
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2275": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2173,
        2174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2277": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2278": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2279": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2280": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "BYTE",
      "path": "3"
    },
    "2281": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        2168,
        2202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2282": {
      "fn": "APIConsumer._splitSignature",
      "jump": "o",
      "offset": [
        1873,
        2218
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2283": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2284": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2286": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2287": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2311": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "LT",
      "path": "1"
    },
    "2312": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92A"
    },
    "2315": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2316": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 16
    },
    "2340": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DIV",
      "path": "1"
    },
    "2341": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10351
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x40"
    },
    "2345": {
      "fn": "Math.log10",
      "offset": [
        10339,
        10351
      ],
      "op": "ADD",
      "path": "1"
    },
    "2346": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2347": {
      "fn": "Math.log10",
      "offset": [
        10392,
        10400
      ],
      "op": "PUSH14",
      "path": "1",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2362": {
      "fn": "Math.log10",
      "offset": [
        10383,
        10388
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2363": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10383,
        10400
      ],
      "op": "LT",
      "path": "1"
    },
    "2364": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x956"
    },
    "2367": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2368": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10437
      ],
      "op": "PUSH14",
      "path": "1",
      "statement": 18,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2383": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2384": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DIV",
      "path": "1"
    },
    "2385": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "fn": "Math.log10",
      "offset": [
        10465,
        10467
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x20"
    },
    "2389": {
      "fn": "Math.log10",
      "offset": [
        10455,
        10467
      ],
      "op": "ADD",
      "path": "1"
    },
    "2390": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2391": {
      "fn": "Math.log10",
      "offset": [
        10508,
        10516
      ],
      "op": "PUSH7",
      "path": "1",
      "value": "0x2386F26FC10000"
    },
    "2399": {
      "fn": "Math.log10",
      "offset": [
        10499,
        10504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2400": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10499,
        10516
      ],
      "op": "LT",
      "path": "1"
    },
    "2401": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x974"
    },
    "2404": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2405": {
      "fn": "Math.log10",
      "offset": [
        10545,
        10553
      ],
      "op": "PUSH7",
      "path": "1",
      "statement": 20,
      "value": "0x2386F26FC10000"
    },
    "2413": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2414": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DIV",
      "path": "1"
    },
    "2415": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "fn": "Math.log10",
      "offset": [
        10581,
        10583
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x10"
    },
    "2419": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10583
      ],
      "op": "ADD",
      "path": "1"
    },
    "2420": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2421": {
      "fn": "Math.log10",
      "offset": [
        10624,
        10631
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5F5E100"
    },
    "2426": {
      "fn": "Math.log10",
      "offset": [
        10615,
        10620
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2427": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10615,
        10631
      ],
      "op": "LT",
      "path": "1"
    },
    "2428": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98C"
    },
    "2431": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2432": {
      "fn": "Math.log10",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH4",
      "path": "1",
      "statement": 22,
      "value": "0x5F5E100"
    },
    "2437": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2438": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DIV",
      "path": "1"
    },
    "2439": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "Math.log10",
      "offset": [
        10695,
        10696
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x8"
    },
    "2443": {
      "fn": "Math.log10",
      "offset": [
        10685,
        10696
      ],
      "op": "ADD",
      "path": "1"
    },
    "2444": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2445": {
      "fn": "Math.log10",
      "offset": [
        10737,
        10744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2710"
    },
    "2448": {
      "fn": "Math.log10",
      "offset": [
        10728,
        10733
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2449": {
      "branch": 38,
      "fn": "Math.log10",
      "offset": [
        10728,
        10744
      ],
      "op": "LT",
      "path": "1"
    },
    "2450": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A0"
    },
    "2453": {
      "branch": 38,
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2454": {
      "fn": "Math.log10",
      "offset": [
        10773,
        10780
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x2710"
    },
    "2457": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2458": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DIV",
      "path": "1"
    },
    "2459": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2460": {
      "op": "POP"
    },
    "2461": {
      "fn": "Math.log10",
      "offset": [
        10808,
        10809
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x4"
    },
    "2463": {
      "fn": "Math.log10",
      "offset": [
        10798,
        10809
      ],
      "op": "ADD",
      "path": "1"
    },
    "2464": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2465": {
      "fn": "Math.log10",
      "offset": [
        10850,
        10857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2467": {
      "fn": "Math.log10",
      "offset": [
        10841,
        10846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2468": {
      "branch": 39,
      "fn": "Math.log10",
      "offset": [
        10841,
        10857
      ],
      "op": "LT",
      "path": "1"
    },
    "2469": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B2"
    },
    "2472": {
      "branch": 39,
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2473": {
      "fn": "Math.log10",
      "offset": [
        10886,
        10893
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x64"
    },
    "2475": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2476": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DIV",
      "path": "1"
    },
    "2477": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "fn": "Math.log10",
      "offset": [
        10921,
        10922
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x2"
    },
    "2481": {
      "fn": "Math.log10",
      "offset": [
        10911,
        10922
      ],
      "op": "ADD",
      "path": "1"
    },
    "2482": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2483": {
      "fn": "Math.log10",
      "offset": [
        10963,
        10970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2485": {
      "fn": "Math.log10",
      "offset": [
        10954,
        10959
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2486": {
      "branch": 40,
      "fn": "Math.log10",
      "offset": [
        10954,
        10970
      ],
      "op": "LT",
      "path": "1"
    },
    "2487": {
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E3"
    },
    "2490": {
      "branch": 40,
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2491": {
      "fn": "Math.log10",
      "offset": [
        11000,
        11001
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "2493": {
      "fn": "Math.log10",
      "offset": [
        10990,
        11001
      ],
      "op": "ADD",
      "path": "1"
    },
    "2494": {
      "fn": "Math.log10",
      "offset": [
        11042,
        11048
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 29
    },
    "2495": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "POP"
    },
    "2498": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2504": {
      "op": "DUP3"
    },
    "2505": {
      "op": "DUP5"
    },
    "2506": {
      "op": "SUB"
    },
    "2507": {
      "op": "SLT"
    },
    "2508": {
      "op": "ISZERO"
    },
    "2509": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "2512": {
      "op": "JUMPI"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2515": {
      "op": "DUP1"
    },
    "2516": {
      "op": "REVERT"
    },
    "2517": {
      "op": "JUMPDEST"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "CALLDATALOAD"
    },
    "2520": {
      "op": "SWAP2"
    },
    "2521": {
      "op": "SWAP1"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "jump": "o",
      "op": "JUMP"
    },
    "2524": {
      "op": "JUMPDEST"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2527": {
      "op": "JUMPDEST"
    },
    "2528": {
      "op": "DUP4"
    },
    "2529": {
      "op": "DUP2"
    },
    "2530": {
      "op": "LT"
    },
    "2531": {
      "op": "ISZERO"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9F7"
    },
    "2535": {
      "op": "JUMPI"
    },
    "2536": {
      "op": "DUP2"
    },
    "2537": {
      "op": "DUP2"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "MLOAD"
    },
    "2540": {
      "op": "DUP4"
    },
    "2541": {
      "op": "DUP3"
    },
    "2542": {
      "op": "ADD"
    },
    "2543": {
      "op": "MSTORE"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x9DF"
    },
    "2550": {
      "op": "JUMP"
    },
    "2551": {
      "op": "JUMPDEST"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2556": {
      "op": "SWAP2"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "jump": "o",
      "op": "JUMP"
    },
    "2560": {
      "op": "JUMPDEST"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "MLOAD"
    },
    "2565": {
      "op": "DUP1"
    },
    "2566": {
      "op": "DUP5"
    },
    "2567": {
      "op": "MSTORE"
    },
    "2568": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2571": {
      "op": "DUP2"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2574": {
      "op": "DUP7"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2578": {
      "op": "DUP7"
    },
    "2579": {
      "op": "ADD"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0x9DC"
    },
    "2583": {
      "jump": "i",
      "op": "JUMP"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2590": {
      "op": "NOT"
    },
    "2591": {
      "op": "AND"
    },
    "2592": {
      "op": "SWAP3"
    },
    "2593": {
      "op": "SWAP1"
    },
    "2594": {
      "op": "SWAP3"
    },
    "2595": {
      "op": "ADD"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "SWAP3"
    },
    "2600": {
      "op": "SWAP2"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "jump": "o",
      "op": "JUMP"
    },
    "2604": {
      "op": "JUMPDEST"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2607": {
      "op": "DUP2"
    },
    "2608": {
      "op": "MSTORE"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2611": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2616": {
      "op": "DUP4"
    },
    "2617": {
      "op": "ADD"
    },
    "2618": {
      "op": "DUP5"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "2622": {
      "jump": "i",
      "op": "JUMP"
    },
    "2623": {
      "op": "JUMPDEST"
    },
    "2624": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2634": {
      "op": "MSTORE"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2639": {
      "op": "MSTORE"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2644": {
      "op": "REVERT"
    },
    "2645": {
      "op": "JUMPDEST"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2648": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2657": {
      "op": "DUP1"
    },
    "2658": {
      "op": "DUP5"
    },
    "2659": {
      "op": "GT"
    },
    "2660": {
      "op": "ISZERO"
    },
    "2661": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2664": {
      "op": "JUMPI"
    },
    "2665": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2668": {
      "op": "PUSH2",
      "value": "0xA3F"
    },
    "2671": {
      "jump": "i",
      "op": "JUMP"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2675": {
      "op": "MLOAD"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2678": {
      "op": "DUP6"
    },
    "2679": {
      "op": "ADD"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2682": {
      "op": "NOT"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "DUP2"
    },
    "2685": {
      "op": "AND"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2688": {
      "op": "ADD"
    },
    "2689": {
      "op": "AND"
    },
    "2690": {
      "op": "DUP2"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "SWAP1"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "DUP3"
    },
    "2695": {
      "op": "GT"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "DUP4"
    },
    "2698": {
      "op": "LT"
    },
    "2699": {
      "op": "OR"
    },
    "2700": {
      "op": "ISZERO"
    },
    "2701": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2704": {
      "op": "JUMPI"
    },
    "2705": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2708": {
      "op": "PUSH2",
      "value": "0xA3F"
    },
    "2711": {
      "jump": "i",
      "op": "JUMP"
    },
    "2712": {
      "op": "JUMPDEST"
    },
    "2713": {
      "op": "DUP2"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "DUP1"
    },
    "2718": {
      "op": "SWAP4"
    },
    "2719": {
      "op": "POP"
    },
    "2720": {
      "op": "DUP6"
    },
    "2721": {
      "op": "DUP2"
    },
    "2722": {
      "op": "MSTORE"
    },
    "2723": {
      "op": "DUP7"
    },
    "2724": {
      "op": "DUP7"
    },
    "2725": {
      "op": "DUP7"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "op": "GT"
    },
    "2728": {
      "op": "ISZERO"
    },
    "2729": {
      "op": "PUSH2",
      "value": "0xAB1"
    },
    "2732": {
      "op": "JUMPI"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2735": {
      "op": "DUP1"
    },
    "2736": {
      "op": "REVERT"
    },
    "2737": {
      "op": "JUMPDEST"
    },
    "2738": {
      "op": "DUP6"
    },
    "2739": {
      "op": "DUP6"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2742": {
      "op": "DUP4"
    },
    "2743": {
      "op": "ADD"
    },
    "2744": {
      "op": "CALLDATACOPY"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2749": {
      "op": "DUP8"
    },
    "2750": {
      "op": "DUP4"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "ADD"
    },
    "2753": {
      "op": "MSTORE"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "op": "POP"
    },
    "2756": {
      "op": "POP"
    },
    "2757": {
      "op": "SWAP4"
    },
    "2758": {
      "op": "SWAP3"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "jump": "o",
      "op": "JUMP"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2766": {
      "op": "DUP3"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2769": {
      "op": "DUP4"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "op": "SLT"
    },
    "2772": {
      "op": "PUSH2",
      "value": "0xADC"
    },
    "2775": {
      "op": "JUMPI"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2778": {
      "op": "DUP1"
    },
    "2779": {
      "op": "REVERT"
    },
    "2780": {
      "op": "JUMPDEST"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "2784": {
      "op": "DUP4"
    },
    "2785": {
      "op": "DUP4"
    },
    "2786": {
      "op": "CALLDATALOAD"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2789": {
      "op": "DUP6"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2794": {
      "jump": "i",
      "op": "JUMP"
    },
    "2795": {
      "op": "JUMPDEST"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2798": {
      "op": "DUP1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2803": {
      "op": "DUP5"
    },
    "2804": {
      "op": "DUP7"
    },
    "2805": {
      "op": "SUB"
    },
    "2806": {
      "op": "SLT"
    },
    "2807": {
      "op": "ISZERO"
    },
    "2808": {
      "op": "PUSH2",
      "value": "0xB00"
    },
    "2811": {
      "op": "JUMPI"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2814": {
      "op": "DUP1"
    },
    "2815": {
      "op": "REVERT"
    },
    "2816": {
      "op": "JUMPDEST"
    },
    "2817": {
      "op": "DUP4"
    },
    "2818": {
      "op": "CALLDATALOAD"
    },
    "2819": {
      "op": "SWAP3"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2823": {
      "op": "DUP5"
    },
    "2824": {
      "op": "ADD"
    },
    "2825": {
      "op": "CALLDATALOAD"
    },
    "2826": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2835": {
      "op": "DUP2"
    },
    "2836": {
      "op": "GT"
    },
    "2837": {
      "op": "ISZERO"
    },
    "2838": {
      "op": "PUSH2",
      "value": "0xB1E"
    },
    "2841": {
      "op": "JUMPI"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "DUP1"
    },
    "2845": {
      "op": "REVERT"
    },
    "2846": {
      "op": "JUMPDEST"
    },
    "2847": {
      "op": "PUSH2",
      "value": "0xB2A"
    },
    "2850": {
      "op": "DUP7"
    },
    "2851": {
      "op": "DUP3"
    },
    "2852": {
      "op": "DUP8"
    },
    "2853": {
      "op": "ADD"
    },
    "2854": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "2857": {
      "jump": "i",
      "op": "JUMP"
    },
    "2858": {
      "op": "JUMPDEST"
    },
    "2859": {
      "op": "SWAP3"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "op": "POP"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2864": {
      "op": "DUP5"
    },
    "2865": {
      "op": "ADD"
    },
    "2866": {
      "op": "CALLDATALOAD"
    },
    "2867": {
      "op": "SWAP1"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "SWAP3"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "SWAP3"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "op": "SWAP3"
    },
    "2874": {
      "jump": "o",
      "op": "JUMP"
    },
    "2875": {
      "op": "JUMPDEST"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2878": {
      "op": "DUP1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2881": {
      "op": "DUP4"
    },
    "2882": {
      "op": "DUP6"
    },
    "2883": {
      "op": "SUB"
    },
    "2884": {
      "op": "SLT"
    },
    "2885": {
      "op": "ISZERO"
    },
    "2886": {
      "op": "PUSH2",
      "value": "0xB4E"
    },
    "2889": {
      "op": "JUMPI"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2892": {
      "op": "DUP1"
    },
    "2893": {
      "op": "REVERT"
    },
    "2894": {
      "op": "JUMPDEST"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "CALLDATALOAD"
    },
    "2897": {
      "op": "SWAP2"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2901": {
      "op": "DUP4"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "CALLDATALOAD"
    },
    "2904": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2913": {
      "op": "DUP2"
    },
    "2914": {
      "op": "GT"
    },
    "2915": {
      "op": "ISZERO"
    },
    "2916": {
      "op": "PUSH2",
      "value": "0xB6C"
    },
    "2919": {
      "op": "JUMPI"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2922": {
      "op": "DUP1"
    },
    "2923": {
      "op": "REVERT"
    },
    "2924": {
      "op": "JUMPDEST"
    },
    "2925": {
      "op": "PUSH2",
      "value": "0xB78"
    },
    "2928": {
      "op": "DUP6"
    },
    "2929": {
      "op": "DUP3"
    },
    "2930": {
      "op": "DUP7"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "2935": {
      "jump": "i",
      "op": "JUMP"
    },
    "2936": {
      "op": "JUMPDEST"
    },
    "2937": {
      "op": "SWAP2"
    },
    "2938": {
      "op": "POP"
    },
    "2939": {
      "op": "POP"
    },
    "2940": {
      "op": "SWAP3"
    },
    "2941": {
      "op": "POP"
    },
    "2942": {
      "op": "SWAP3"
    },
    "2943": {
      "op": "SWAP1"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "jump": "o",
      "op": "JUMP"
    },
    "2946": {
      "op": "JUMPDEST"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2949": {
      "op": "DUP1"
    },
    "2950": {
      "op": "DUP4"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2953": {
      "op": "DUP5"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "SLT"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB94"
    },
    "2959": {
      "op": "JUMPI"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "REVERT"
    },
    "2964": {
      "op": "JUMPDEST"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "op": "DUP2"
    },
    "2967": {
      "op": "CALLDATALOAD"
    },
    "2968": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "GT"
    },
    "2979": {
      "op": "ISZERO"
    },
    "2980": {
      "op": "PUSH2",
      "value": "0xBAC"
    },
    "2983": {
      "op": "JUMPI"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2986": {
      "op": "DUP1"
    },
    "2987": {
      "op": "REVERT"
    },
    "2988": {
      "op": "JUMPDEST"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2991": {
      "op": "DUP4"
    },
    "2992": {
      "op": "ADD"
    },
    "2993": {
      "op": "SWAP2"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "op": "DUP4"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "DUP6"
    },
    "3000": {
      "op": "ADD"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "op": "GT"
    },
    "3003": {
      "op": "ISZERO"
    },
    "3004": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "3007": {
      "op": "JUMPI"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3010": {
      "op": "DUP1"
    },
    "3011": {
      "op": "REVERT"
    },
    "3012": {
      "op": "JUMPDEST"
    },
    "3013": {
      "op": "SWAP3"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "SWAP3"
    },
    "3016": {
      "op": "SWAP1"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "jump": "o",
      "op": "JUMP"
    },
    "3019": {
      "op": "JUMPDEST"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3022": {
      "op": "DUP1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3025": {
      "op": "DUP1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3028": {
      "op": "DUP6"
    },
    "3029": {
      "op": "DUP8"
    },
    "3030": {
      "op": "SUB"
    },
    "3031": {
      "op": "SLT"
    },
    "3032": {
      "op": "ISZERO"
    },
    "3033": {
      "op": "PUSH2",
      "value": "0xBE1"
    },
    "3036": {
      "op": "JUMPI"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3039": {
      "op": "DUP1"
    },
    "3040": {
      "op": "REVERT"
    },
    "3041": {
      "op": "JUMPDEST"
    },
    "3042": {
      "op": "DUP5"
    },
    "3043": {
      "op": "CALLDATALOAD"
    },
    "3044": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3053": {
      "op": "DUP1"
    },
    "3054": {
      "op": "DUP3"
    },
    "3055": {
      "op": "GT"
    },
    "3056": {
      "op": "ISZERO"
    },
    "3057": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3060": {
      "op": "JUMPI"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3063": {
      "op": "DUP1"
    },
    "3064": {
      "op": "REVERT"
    },
    "3065": {
      "op": "JUMPDEST"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC05"
    },
    "3069": {
      "op": "DUP9"
    },
    "3070": {
      "op": "DUP4"
    },
    "3071": {
      "op": "DUP10"
    },
    "3072": {
      "op": "ADD"
    },
    "3073": {
      "op": "PUSH2",
      "value": "0xB82"
    },
    "3076": {
      "jump": "i",
      "op": "JUMP"
    },
    "3077": {
      "op": "JUMPDEST"
    },
    "3078": {
      "op": "SWAP1"
    },
    "3079": {
      "op": "SWAP7"
    },
    "3080": {
      "op": "POP"
    },
    "3081": {
      "op": "SWAP5"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3085": {
      "op": "DUP8"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "CALLDATALOAD"
    },
    "3088": {
      "op": "SWAP2"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "op": "DUP1"
    },
    "3091": {
      "op": "DUP3"
    },
    "3092": {
      "op": "GT"
    },
    "3093": {
      "op": "ISZERO"
    },
    "3094": {
      "op": "PUSH2",
      "value": "0xC1E"
    },
    "3097": {
      "op": "JUMPI"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3100": {
      "op": "DUP1"
    },
    "3101": {
      "op": "REVERT"
    },
    "3102": {
      "op": "JUMPDEST"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3107": {
      "op": "DUP8"
    },
    "3108": {
      "op": "DUP3"
    },
    "3109": {
      "op": "DUP9"
    },
    "3110": {
      "op": "ADD"
    },
    "3111": {
      "op": "PUSH2",
      "value": "0xB82"
    },
    "3114": {
      "jump": "i",
      "op": "JUMP"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "SWAP6"
    },
    "3117": {
      "op": "SWAP9"
    },
    "3118": {
      "op": "SWAP5"
    },
    "3119": {
      "op": "SWAP8"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "SWAP6"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "op": "POP"
    },
    "3125": {
      "op": "POP"
    },
    "3126": {
      "jump": "o",
      "op": "JUMP"
    },
    "3127": {
      "op": "JUMPDEST"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3130": {
      "op": "DUP1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3133": {
      "op": "DUP4"
    },
    "3134": {
      "op": "DUP6"
    },
    "3135": {
      "op": "SUB"
    },
    "3136": {
      "op": "SLT"
    },
    "3137": {
      "op": "ISZERO"
    },
    "3138": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3141": {
      "op": "JUMPI"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3144": {
      "op": "DUP1"
    },
    "3145": {
      "op": "REVERT"
    },
    "3146": {
      "op": "JUMPDEST"
    },
    "3147": {
      "op": "DUP3"
    },
    "3148": {
      "op": "CALLDATALOAD"
    },
    "3149": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3158": {
      "op": "DUP2"
    },
    "3159": {
      "op": "GT"
    },
    "3160": {
      "op": "ISZERO"
    },
    "3161": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3164": {
      "op": "JUMPI"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3167": {
      "op": "DUP1"
    },
    "3168": {
      "op": "REVERT"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC6D"
    },
    "3173": {
      "op": "DUP6"
    },
    "3174": {
      "op": "DUP3"
    },
    "3175": {
      "op": "DUP7"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "PUSH2",
      "value": "0xB82"
    },
    "3180": {
      "jump": "i",
      "op": "JUMP"
    },
    "3181": {
      "op": "JUMPDEST"
    },
    "3182": {
      "op": "SWAP1"
    },
    "3183": {
      "op": "SWAP7"
    },
    "3184": {
      "op": "SWAP1"
    },
    "3185": {
      "op": "SWAP6"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "op": "SWAP4"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "op": "POP"
    },
    "3192": {
      "jump": "o",
      "op": "JUMP"
    },
    "3193": {
      "op": "JUMPDEST"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3196": {
      "op": "DUP1"
    },
    "3197": {
      "op": "DUP3"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3201": {
      "op": "SWAP1"
    },
    "3202": {
      "op": "DUP3"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3240": {
      "op": "DUP3"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "MSTORE"
    },
    "3243": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3254": {
      "op": "DUP3"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "MSTORE"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "SWAP1"
    },
    "3261": {
      "jump": "o",
      "op": "JUMP"
    },
    "3262": {
      "op": "JUMPDEST"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "DUP5"
    },
    "3269": {
      "op": "SUB"
    },
    "3270": {
      "op": "SLT"
    },
    "3271": {
      "op": "ISZERO"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCD0"
    },
    "3275": {
      "op": "JUMPI"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3278": {
      "op": "DUP1"
    },
    "3279": {
      "op": "REVERT"
    },
    "3280": {
      "op": "JUMPDEST"
    },
    "3281": {
      "op": "DUP2"
    },
    "3282": {
      "op": "MLOAD"
    },
    "3283": {
      "op": "DUP1"
    },
    "3284": {
      "op": "ISZERO"
    },
    "3285": {
      "op": "ISZERO"
    },
    "3286": {
      "op": "DUP2"
    },
    "3287": {
      "op": "EQ"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "REVERT"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "SWAP4"
    },
    "3298": {
      "op": "SWAP3"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "jump": "o",
      "op": "JUMP"
    },
    "3303": {
      "op": "JUMPDEST"
    },
    "3304": {
      "op": "DUP1"
    },
    "3305": {
      "op": "DUP3"
    },
    "3306": {
      "op": "ADD"
    },
    "3307": {
      "op": "DUP1"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "GT"
    },
    "3310": {
      "op": "ISZERO"
    },
    "3311": {
      "op": "PUSH2",
      "value": "0x5E3"
    },
    "3314": {
      "op": "JUMPI"
    },
    "3315": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3330": {
      "op": "MSTORE"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3335": {
      "op": "REVERT"
    },
    "3336": {
      "op": "JUMPDEST"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3339": {
      "op": "DUP2"
    },
    "3340": {
      "op": "MSTORE"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "PUSH2",
      "value": "0xD1B"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3348": {
      "op": "DUP4"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "op": "DUP6"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "3354": {
      "jump": "i",
      "op": "JUMP"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "SWAP1"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3361": {
      "op": "DUP4"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "MSTORE"
    },
    "3364": {
      "op": "SWAP4"
    },
    "3365": {
      "op": "SWAP3"
    },
    "3366": {
      "op": "POP"
    },
    "3367": {
      "op": "POP"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "jump": "o",
      "op": "JUMP"
    },
    "3370": {
      "op": "JUMPDEST"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3375": {
      "op": "DUP3"
    },
    "3376": {
      "op": "DUP5"
    },
    "3377": {
      "op": "SUB"
    },
    "3378": {
      "op": "SLT"
    },
    "3379": {
      "op": "ISZERO"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3C"
    },
    "3383": {
      "op": "JUMPI"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3386": {
      "op": "DUP1"
    },
    "3387": {
      "op": "REVERT"
    },
    "3388": {
      "op": "JUMPDEST"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "op": "MLOAD"
    },
    "3391": {
      "op": "SWAP2"
    },
    "3392": {
      "op": "SWAP1"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "jump": "o",
      "op": "JUMP"
    },
    "3395": {
      "op": "JUMPDEST"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3400": {
      "op": "DUP3"
    },
    "3401": {
      "op": "DUP5"
    },
    "3402": {
      "op": "SUB"
    },
    "3403": {
      "op": "SLT"
    },
    "3404": {
      "op": "ISZERO"
    },
    "3405": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3408": {
      "op": "JUMPI"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3411": {
      "op": "DUP1"
    },
    "3412": {
      "op": "REVERT"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "DUP2"
    },
    "3415": {
      "op": "CALLDATALOAD"
    },
    "3416": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3425": {
      "op": "DUP1"
    },
    "3426": {
      "op": "DUP3"
    },
    "3427": {
      "op": "GT"
    },
    "3428": {
      "op": "ISZERO"
    },
    "3429": {
      "op": "PUSH2",
      "value": "0xD6D"
    },
    "3432": {
      "op": "JUMPI"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "DUP1"
    },
    "3436": {
      "op": "REVERT"
    },
    "3437": {
      "op": "JUMPDEST"
    },
    "3438": {
      "op": "SWAP1"
    },
    "3439": {
      "op": "DUP4"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "SWAP1"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3444": {
      "op": "DUP3"
    },
    "3445": {
      "op": "DUP7"
    },
    "3446": {
      "op": "SUB"
    },
    "3447": {
      "op": "SLT"
    },
    "3448": {
      "op": "ISZERO"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "3452": {
      "op": "JUMPI"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "DUP1"
    },
    "3456": {
      "op": "REVERT"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3460": {
      "op": "MLOAD"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3463": {
      "op": "DUP2"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "LT"
    },
    "3468": {
      "op": "DUP4"
    },
    "3469": {
      "op": "DUP3"
    },
    "3470": {
      "op": "GT"
    },
    "3471": {
      "op": "OR"
    },
    "3472": {
      "op": "ISZERO"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3476": {
      "op": "JUMPI"
    },
    "3477": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xA3F"
    },
    "3483": {
      "jump": "i",
      "op": "JUMP"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "DUP3"
    },
    "3489": {
      "op": "CALLDATALOAD"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "DUP2"
    },
    "3492": {
      "op": "GT"
    },
    "3493": {
      "op": "ISZERO"
    },
    "3494": {
      "op": "PUSH2",
      "value": "0xDAE"
    },
    "3497": {
      "op": "JUMPI"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP1"
    },
    "3501": {
      "op": "REVERT"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "DUP1"
    },
    "3504": {
      "op": "DUP5"
    },
    "3505": {
      "op": "ADD"
    },
    "3506": {
      "op": "SWAP4"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "op": "DUP6"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3512": {
      "op": "DUP5"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "op": "SLT"
    },
    "3515": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3518": {
      "op": "JUMPI"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3521": {
      "op": "DUP1"
    },
    "3522": {
      "op": "REVERT"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xDD2"
    },
    "3527": {
      "op": "DUP7"
    },
    "3528": {
      "op": "DUP5"
    },
    "3529": {
      "op": "CALLDATALOAD"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "op": "DUP7"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "3537": {
      "jump": "i",
      "op": "JUMP"
    },
    "3538": {
      "op": "JUMPDEST"
    },
    "3539": {
      "op": "DUP2"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "SWAP6"
    },
    "3542": {
      "op": "SWAP5"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "jump": "o",
      "op": "JUMP"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3554": {
      "op": "DUP3"
    },
    "3555": {
      "op": "DUP5"
    },
    "3556": {
      "op": "SUB"
    },
    "3557": {
      "op": "SLT"
    },
    "3558": {
      "op": "ISZERO"
    },
    "3559": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3562": {
      "op": "JUMPI"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3565": {
      "op": "DUP1"
    },
    "3566": {
      "op": "REVERT"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "DUP2"
    },
    "3569": {
      "op": "CALLDATALOAD"
    },
    "3570": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3579": {
      "op": "DUP1"
    },
    "3580": {
      "op": "DUP3"
    },
    "3581": {
      "op": "GT"
    },
    "3582": {
      "op": "ISZERO"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3586": {
      "op": "JUMPI"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3589": {
      "op": "DUP1"
    },
    "3590": {
      "op": "REVERT"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "SWAP1"
    },
    "3593": {
      "op": "DUP4"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "SWAP1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "DUP7"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "op": "SLT"
    },
    "3602": {
      "op": "ISZERO"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3606": {
      "op": "JUMPI"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "REVERT"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3614": {
      "op": "MLOAD"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3617": {
      "op": "DUP2"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "DUP2"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "LT"
    },
    "3622": {
      "op": "DUP4"
    },
    "3623": {
      "op": "DUP3"
    },
    "3624": {
      "op": "GT"
    },
    "3625": {
      "op": "OR"
    },
    "3626": {
      "op": "ISZERO"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3630": {
      "op": "JUMPI"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xA3F"
    },
    "3637": {
      "jump": "i",
      "op": "JUMP"
    },
    "3638": {
      "op": "JUMPDEST"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3641": {
      "op": "MSTORE"
    },
    "3642": {
      "op": "DUP3"
    },
    "3643": {
      "op": "CALLDATALOAD"
    },
    "3644": {
      "op": "DUP3"
    },
    "3645": {
      "op": "DUP2"
    },
    "3646": {
      "op": "GT"
    },
    "3647": {
      "op": "ISZERO"
    },
    "3648": {
      "op": "PUSH2",
      "value": "0xE48"
    },
    "3651": {
      "op": "JUMPI"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3654": {
      "op": "DUP1"
    },
    "3655": {
      "op": "REVERT"
    },
    "3656": {
      "op": "JUMPDEST"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "3660": {
      "op": "DUP8"
    },
    "3661": {
      "op": "DUP3"
    },
    "3662": {
      "op": "DUP7"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "3667": {
      "jump": "i",
      "op": "JUMP"
    },
    "3668": {
      "op": "JUMPDEST"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "MSTORE"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3674": {
      "op": "DUP4"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "CALLDATALOAD"
    },
    "3677": {
      "op": "DUP3"
    },
    "3678": {
      "op": "DUP2"
    },
    "3679": {
      "op": "GT"
    },
    "3680": {
      "op": "ISZERO"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3684": {
      "op": "JUMPI"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "DUP1"
    },
    "3688": {
      "op": "REVERT"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "PUSH2",
      "value": "0xE75"
    },
    "3693": {
      "op": "DUP8"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "DUP7"
    },
    "3696": {
      "op": "ADD"
    },
    "3697": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "3700": {
      "jump": "i",
      "op": "JUMP"
    },
    "3701": {
      "op": "JUMPDEST"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3704": {
      "op": "DUP4"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "SWAP6"
    },
    "3709": {
      "op": "SWAP5"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "op": "POP"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "jump": "o",
      "op": "JUMP"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3721": {
      "op": "DUP3"
    },
    "3722": {
      "op": "DUP5"
    },
    "3723": {
      "op": "SUB"
    },
    "3724": {
      "op": "SLT"
    },
    "3725": {
      "op": "ISZERO"
    },
    "3726": {
      "op": "PUSH2",
      "value": "0xE96"
    },
    "3729": {
      "op": "JUMPI"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3732": {
      "op": "DUP1"
    },
    "3733": {
      "op": "REVERT"
    },
    "3734": {
      "op": "JUMPDEST"
    },
    "3735": {
      "op": "DUP2"
    },
    "3736": {
      "op": "MLOAD"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3743": {
      "op": "SHL"
    },
    "3744": {
      "op": "SUB"
    },
    "3745": {
      "op": "DUP2"
    },
    "3746": {
      "op": "AND"
    },
    "3747": {
      "op": "DUP2"
    },
    "3748": {
      "op": "EQ"
    },
    "3749": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3752": {
      "op": "JUMPI"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "op": "DUP1"
    },
    "3756": {
      "op": "REVERT"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A000000000000"
    },
    "3791": {
      "op": "DUP2"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "DUP4"
    },
    "3796": {
      "op": "MLOAD"
    },
    "3797": {
      "op": "PUSH2",
      "value": "0xEE5"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3803": {
      "op": "DUP6"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3807": {
      "op": "DUP9"
    },
    "3808": {
      "op": "ADD"
    },
    "3809": {
      "op": "PUSH2",
      "value": "0x9DC"
    },
    "3812": {
      "jump": "i",
      "op": "JUMP"
    },
    "3813": {
      "op": "JUMPDEST"
    },
    "3814": {
      "op": "DUP4"
    },
    "3815": {
      "op": "MLOAD"
    },
    "3816": {
      "op": "SWAP1"
    },
    "3817": {
      "op": "DUP4"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "op": "SWAP1"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3823": {
      "op": "DUP2"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3826": {
      "op": "DUP5"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3830": {
      "op": "DUP9"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "PUSH2",
      "value": "0x9DC"
    },
    "3835": {
      "jump": "i",
      "op": "JUMP"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "SWAP5"
    },
    "3842": {
      "op": "SWAP4"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "op": "POP"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c96aa4a8e9422237f38d8e8b01f4ef03874e5ae6",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./APIProvider.sol\";\nimport \"./BaseClient.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n\nstruct Input {\n    string apiIdentifier;\n}\n\nstruct APIResponse { //TODO pasar estas esctructuras al provider? o la funcion de getinputdatastructure a algun lugar accesible por APIOracle python\n    bytes response;\n    bytes signature;\n}\n\ncontract APIConsumer is BaseClient {\n\n    APIProvider public provider;\n    \n    constructor(address brokerAddress, address apiProviderAddress) BaseClient(brokerAddress) {\n        provider = APIProvider(apiProviderAddress);\n    }\n\n    function submitRequest(uint payment, bytes memory input) public onlyOwner payable returns (uint) {\n        return super.submitRequest(payment, input, 0);\n    }\n\n    function checkResult(bytes calldata inputData, bytes calldata resultData) external override view returns (bool) {\n        Input memory input = abi.decode(inputData, (Input));\n        APIResponse memory apiResponse = abi.decode(resultData, (APIResponse));\n        return _verifySignature(apiResponse, provider.getAddress(input.apiIdentifier));\n    }\n\n    function getInputDataStructure() external override pure returns (string memory) {\n        return \"{string apiIdentifier;}\";\n    }\n\n    function getResultDataStructure() external override pure returns (string memory) {\n        return \"{bytes response; bytes signature;}\";\n    }\n\n    function _verifySignature(APIResponse memory apiResponse, address signer) private pure returns (bool) {\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(apiResponse.response.length), apiResponse.response));\n        (bytes32 r, bytes32 s, uint8 v) = _splitSignature(apiResponse.signature);\n        return (ecrecover(prefixedHash, v, r, s) == signer);\n    }\n\n    function _splitSignature(bytes memory signature) private pure returns (bytes32 r, bytes32 s, uint8 v) {\n        require(signature.length == 65, \"invalid signature length\");\n        assembly {\n            r := mload(add(signature, 32))\n            s := mload(add(signature, 64))\n            v := byte(0, mload(add(signature, 96)))\n        }\n    }\n\n}",
  "sourceMap": "417:1804:3:-:0;;;497:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;234:6:7;:19;;-1:-1:-1;;;;;;234:19:7;;;243:10;234:19;;;;;1072:47:5;;-1:-1:-1;;;;;1072:47:5;;::::1;::::0;;::::1;;::::0;;596:8:3::1;:42:::0;;;;;::::1;::::0;::::1;;::::0;;417:1804;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;417:1804:3;;;;;;",
  "sourcePath": "contracts/APIConsumer.sol",
  "type": "contract"
}