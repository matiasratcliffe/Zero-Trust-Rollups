{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brokerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "apiProviderAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "requestSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "brokerContract",
      "outputs": [
        {
          "internalType": "contract ExecutionBroker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "processResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provider",
      "outputs": [
        {
          "internalType": "contract APIProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "postProcessingGas",
          "type": "uint256"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
    "1": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/Math.sol",
    "2": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/math/SignedMath.sol",
    "3": "contracts/APIConsumer.sol",
    "4": "contracts/APIProvider.sol",
    "5": "contracts/BaseClient.sol",
    "7": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIConsumer.sol",
    "exportedSymbols": {
      "APIConsumer": [
        154
      ],
      "APIProvider": [
        439
      ],
      "APIResponse": [
        12
      ],
      "BaseClient": [
        606
      ],
      "ExecutionBroker": [
        2209
      ],
      "Input": [
        7
      ],
      "Math": [
        1472
      ],
      "Ownable": [
        1620
      ],
      "Request": [
        1642
      ],
      "SignedMath": [
        1577
      ],
      "Strings": [
        383
      ],
      "Transferable": [
        2293
      ]
    },
    "id": 155,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:3"
      },
      {
        "absolutePath": "contracts/APIProvider.sol",
        "file": "./APIProvider.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 440,
        "src": "70:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseClient.sol",
        "file": "./BaseClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 607,
        "src": "98:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/j3ster/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.2/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 384,
        "src": "126:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "Input",
        "id": 7,
        "members": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "apiIdentifier",
            "nameLocation": "206:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 7,
            "src": "199:20:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "199:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Input",
        "nameLocation": "187:5:3",
        "nodeType": "StructDefinition",
        "scope": 155,
        "src": "180:42:3",
        "visibility": "public"
      },
      {
        "canonicalName": "APIResponse",
        "id": 12,
        "members": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "response",
            "nameLocation": "255:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "249:14:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 8,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "249:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "275:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "269:15:3",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 10,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "269:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "APIResponse",
        "nameLocation": "231:11:3",
        "nodeType": "StructDefinition",
        "scope": 155,
        "src": "224:63:3",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "BaseClient",
              "nameLocations": [
                "313:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 606,
              "src": "313:10:3"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "313:10:3"
          }
        ],
        "canonicalName": "APIConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 154,
        "linearizedBaseContracts": [
          154,
          606,
          1620
        ],
        "name": "APIConsumer",
        "nameLocation": "298:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "085d4883",
            "id": 17,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "350:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "331:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_APIProvider_$439",
              "typeString": "contract APIProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "APIProvider",
                "nameLocations": [
                  "331:11:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 439,
                "src": "331:11:3"
              },
              "referencedDeclaration": 439,
              "src": "331:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_APIProvider_$439",
                "typeString": "contract APIProvider"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "458:59:3",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "468:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$439",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29,
                          "name": "apiProviderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "491:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28,
                        "name": "APIProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "479:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_APIProvider_$439_$",
                          "typeString": "type(contract APIProvider)"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "479:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_APIProvider_$439",
                        "typeString": "contract APIProvider"
                      }
                    },
                    "src": "468:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_APIProvider_$439",
                      "typeString": "contract APIProvider"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "468:42:3"
                }
              ]
            },
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "brokerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "443:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23,
                  "name": "BaseClient",
                  "nameLocations": [
                    "432:10:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 606,
                  "src": "432:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "432:25:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "brokerAddress",
                  "nameLocation": "389:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "381:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "apiProviderAddress",
                  "nameLocation": "412:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "404:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:51:3"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:3"
            },
            "scope": 154,
            "src": "369:148:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              490
            ],
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "635:236:3",
              "statements": [
                {
                  "assignments": [
                    46
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "658:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 73,
                      "src": "645:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                        "typeString": "struct Input"
                      },
                      "typeName": {
                        "id": 45,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44,
                          "name": "Input",
                          "nameLocations": [
                            "645:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7,
                          "src": "645:5:3"
                        },
                        "referencedDeclaration": 7,
                        "src": "645:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$7_storage_ptr",
                          "typeString": "struct Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "677:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 50,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "689:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                              "typeString": "type(struct Input storage pointer)"
                            }
                          }
                        ],
                        "id": 51,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "688:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$7_storage_ptr_$",
                          "typeString": "type(struct Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 47,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "666:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "670:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "666:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                      "typeString": "struct Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "645:51:3"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "apiResponse",
                      "nameLocation": "725:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 73,
                      "src": "706:30:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                        "typeString": "struct APIResponse"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "APIResponse",
                          "nameLocations": [
                            "706:11:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "706:11:3"
                        },
                        "referencedDeclaration": 12,
                        "src": "706:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                          "typeString": "struct APIResponse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "750:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 60,
                            "name": "APIResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "763:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                              "typeString": "type(struct APIResponse storage pointer)"
                            }
                          }
                        ],
                        "id": 61,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "762:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_APIResponse_$12_storage_ptr_$",
                          "typeString": "type(struct APIResponse storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 57,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "739:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "743:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "739:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                      "typeString": "struct APIResponse memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65,
                        "name": "apiResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "810:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 68,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "843:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$7_memory_ptr",
                                "typeString": "struct Input memory"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "849:13:3",
                            "memberName": "apiIdentifier",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "843:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 66,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "823:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_APIProvider_$439",
                              "typeString": "contract APIProvider"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "832:10:3",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 438,
                          "src": "823:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (string memory) view external returns (address)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "823:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                          "typeString": "struct APIResponse memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "name": "_verifySignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "793:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_APIResponse_$12_memory_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (struct APIResponse memory,address) pure returns (bool)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 72,
                  "nodeType": "Return",
                  "src": "786:78:3"
                }
              ]
            },
            "functionSelector": "c91c7b37",
            "id": 74,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkResult",
            "nameLocation": "532:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "606:8:3"
            },
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "559:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "544:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "585:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "570:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:53:3"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "629:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:6:3"
            },
            "scope": 154,
            "src": "523:348:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              495
            ],
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "961:49:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b737472696e67206170694964656e7469666965723b7d",
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "978:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_04fd13a6b1d6c82cd5b6aedd525b1a7a6a577755aa9866396743ebc8496a7809",
                      "typeString": "literal_string \"{string apiIdentifier;}\""
                    },
                    "value": "{string apiIdentifier;}"
                  },
                  "functionReturnParameters": 79,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "971:32:3"
                }
              ]
            },
            "functionSelector": "2896de13",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputDataStructure",
            "nameLocation": "890:21:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 76,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "923:8:3"
            },
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:2:3"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "946:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:15:3"
            },
            "scope": 154,
            "src": "881:129:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1118:313:3",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "prefixedHash",
                      "nameLocation": "1136:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1128:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1128:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1178:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n"
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 101,
                                    "name": "apiResponse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "1229:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                      "typeString": "struct APIResponse memory"
                                    }
                                  },
                                  "id": 102,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1241:8:3",
                                  "memberName": "response",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "1229:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1250:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1229:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 99,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 383,
                                "src": "1212:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$383_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1220:8:3",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 213,
                              "src": "1212:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1212:45:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 105,
                              "name": "apiResponse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "1259:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                                "typeString": "struct APIResponse memory"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1271:8:3",
                            "memberName": "response",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "1259:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 96,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1161:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1165:12:3",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1161:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1161:119:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 95,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1151:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:130:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1128:153:3"
                },
                {
                  "assignments": [
                    111,
                    113,
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1300:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1292:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1292:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 113,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1311:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1303:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1303:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "1320:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1314:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1314:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 120,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 117,
                          "name": "apiResponse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1341:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                            "typeString": "struct APIResponse memory"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1353:9:3",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "1341:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 116,
                      "name": "_splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1325:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1291:72:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "prefixedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1391:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 123,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1405:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 124,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1408:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 125,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1411:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 121,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "1381:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1381:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 127,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "1417:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1381:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 129,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1380:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1373:51:3"
                }
              ]
            },
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifySignature",
            "nameLocation": "1025:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "apiResponse",
                  "nameLocation": "1061:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1042:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_APIResponse_$12_memory_ptr",
                    "typeString": "struct APIResponse"
                  },
                  "typeName": {
                    "id": 85,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84,
                      "name": "APIResponse",
                      "nameLocations": [
                        "1042:11:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "1042:11:3"
                    },
                    "referencedDeclaration": 12,
                    "src": "1042:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_APIResponse_$12_storage_ptr",
                      "typeString": "struct APIResponse"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1082:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1074:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:48:3"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1112:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:6:3"
            },
            "scope": 154,
            "src": "1016:415:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1539:243:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "1557:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1567:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1557:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1577:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "1557:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1581:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1549:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:59:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1627:149:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1641:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "1656:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1667:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1652:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1652:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1646:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1641:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1684:30:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "1699:9:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1710:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1695:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1695:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1689:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1689:25:3"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1684:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1727:39:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1737:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1750:9:3"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1761:2:3",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1746:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1746:18:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1740:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1740:25:3"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1732:4:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1732:34:3"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1727:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 137,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1641:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1684:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 134,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1656:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 134,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1699:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 134,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1750:9:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 141,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1727:1:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 151,
                  "nodeType": "InlineAssembly",
                  "src": "1618:158:3"
                }
              ]
            },
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_splitSignature",
            "nameLocation": "1446:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1475:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1462:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1461:24:3"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1516:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1508:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1527:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1519:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1536:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1530:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1507:31:3"
            },
            "scope": 154,
            "src": "1437:345:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 155,
        "src": "289:1496:3",
        "usedErrors": []
      }
    ],
    "src": "37:1748:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610eb4380380610eb483398101604081905261002f91610087565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316179055600280549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b610deb806100c96000396000f3fe60806040526004361061009c5760003560e01c80638d68cf59116100645780638d68cf591461017a5780638da5cb5b1461019d5780638f32d59b146101bb578063c2c56245146101db578063c91c7b37146101fb578063cb3927471461021b57600080fd5b8063085d4883146100a1578063155dd5ee146100de5780632896de131461010e5780633015394c1461015a57806343bb58de1461017c575b600080fd5b3480156100ad57600080fd5b506002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506100fe6100f93660046108b4565b61023b565b60405190151581526020016100d5565b34801561011a57600080fd5b50604080518082018252601781527f7b737472696e67206170694964656e7469666965723b7d000000000000000000602082015290516100d5919061091d565b34801561016657600080fd5b5061017a6101753660046108b4565b610308565b005b61018f61018a3660046109e3565b6103a5565b6040519081526020016100d5565b3480156101a957600080fd5b506000546001600160a01b03166100c1565b3480156101c757600080fd5b506000546001600160a01b031633146100fe565b3480156101e757600080fd5b506001546100c1906001600160a01b031681565b34801561020757600080fd5b506100fe610216366004610a7c565b6104d9565b34801561022757600080fd5b5061017a610236366004610ae8565b610581565b600080546001600160a01b0316331461026f5760405162461bcd60e51b815260040161026690610b2a565b60405180910390fd5b814710156102b45760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610266565b6040513390600090829085908381818185875af1925050503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b509095945050505050565b6000546001600160a01b031633146103325760405162461bcd60e51b815260040161026690610b2a565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610b72565b5050565b600080546001600160a01b031633146103d05760405162461bcd60e51b815260040161026690610b2a565b6103da4734610b94565b84111561041e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610266565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a9087906104539088908890600401610bb5565b60206040518083038185885af1158015610471573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104969190610bd7565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c816040516104c991815260200190565b60405180910390a1949350505050565b6000806104e885870187610bf0565b905060006104f884860186610c8a565b600254835160405163bf40fac160e01b81529293506105769284926001600160a01b03169163bf40fac191610530919060040161091d565b602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190610d31565b6105f8565b979650505050505050565b6001546001600160a01b031633146103a15760405162461bcd60e51b815260206004820152603460248201527f43616e206f6e6c792062652063616c6c65642062792074686520726567697374604482015273195c995908189c9bdad95c8818dbdb9d1c9858dd60621b6064820152608401610266565b6000806106098460000151516106d5565b845160405161061c929190602001610d5a565b60405160208183030381529060405280519060200120905060008060006106468760200151610768565b925092509250856001600160a01b031660018583868660405160008152602001604052604051610692949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156106b4573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b92915050565b606060006106e2836107dc565b600101905060008167ffffffffffffffff81111561070257610702610937565b6040519080825280601f01601f19166020018201604052801561072c576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461073657509392505050565b600080600083516041146107be5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610266565b50505060208101516040820151606090920151909260009190911a90565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061081b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610847576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061086557662386f26fc10000830492506010015b6305f5e100831061087d576305f5e100830492506008015b612710831061089157612710830492506004015b606483106108a3576064830492506002015b600a83106106cf5760010192915050565b6000602082840312156108c657600080fd5b5035919050565b60005b838110156108e85781810151838201526020016108d0565b50506000910152565b600081518084526109098160208601602086016108cd565b601f01601f19169290920160200192915050565b60208152600061093060208301846108f1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561096857610968610937565b604051601f8501601f19908116603f0116810190828211818310171561099057610990610937565b816040528093508581528686860111156109a957600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126109d457600080fd5b6109308383356020850161094d565b6000806000606084860312156109f857600080fd5b83359250602084013567ffffffffffffffff811115610a1657600080fd5b610a22868287016109c3565b925050604084013590509250925092565b60008083601f840112610a4557600080fd5b50813567ffffffffffffffff811115610a5d57600080fd5b602083019150836020828501011115610a7557600080fd5b9250929050565b60008060008060408587031215610a9257600080fd5b843567ffffffffffffffff80821115610aaa57600080fd5b610ab688838901610a33565b90965094506020870135915080821115610acf57600080fd5b50610adc87828801610a33565b95989497509550505050565b60008060208385031215610afb57600080fd5b823567ffffffffffffffff811115610b1257600080fd5b610b1e85828601610a33565b90969095509350505050565b60208082526028908201527f46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206040820152676f776e657220212160c01b606082015260800190565b600060208284031215610b8457600080fd5b8151801515811461093057600080fd5b808201808211156106cf57634e487b7160e01b600052601160045260246000fd5b604081526000610bc860408301856108f1565b90508260208301529392505050565b600060208284031215610be957600080fd5b5051919050565b600060208284031215610c0257600080fd5b813567ffffffffffffffff80821115610c1a57600080fd5b9083019060208286031215610c2e57600080fd5b604051602081018181108382111715610c4957610c49610937565b604052823582811115610c5b57600080fd5b80840193505085601f840112610c7057600080fd5b610c7f8684356020860161094d565b815295945050505050565b600060208284031215610c9c57600080fd5b813567ffffffffffffffff80821115610cb457600080fd5b9083019060408286031215610cc857600080fd5b604051604081018181108382111715610ce357610ce3610937565b604052823582811115610cf557600080fd5b610d01878286016109c3565b825250602083013582811115610d1657600080fd5b610d22878286016109c3565b60208301525095945050505050565b600060208284031215610d4357600080fd5b81516001600160a01b038116811461093057600080fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008351610d9281601a8501602088016108cd565b835190830190610da981601a8401602088016108cd565b01601a0194935050505056fea2646970667358221220a815a045d1d986dc29a13815524783334feda23539e82ec7fc36b28a9375604864736f6c63430008130033",
  "bytecodeSha1": "87616e676efedd28ff2710bbd2c5871c5b0d69e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "APIConsumer",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Math.log10": {
          "31": [
            10267,
            10284,
            false
          ],
          "32": [
            10383,
            10400,
            false
          ],
          "33": [
            10499,
            10516,
            false
          ],
          "34": [
            10615,
            10631,
            false
          ],
          "35": [
            10728,
            10744,
            false
          ],
          "36": [
            10841,
            10857,
            false
          ],
          "37": [
            10954,
            10970,
            false
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "28": [
            1557,
            1579,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.submitRequest": {
          "30": [
            962,
            1006,
            true
          ]
        },
        "BaseClient.withdrawFunds": {
          "29": [
            1460,
            1490,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Strings.toString": {
          "10": [
            851,
            856
          ],
          "11": [
            1035,
            1046
          ],
          "12": [
            1113,
            1126
          ]
        }
      },
      "1": {
        "Math.log10": {
          "14": [
            10304,
            10321
          ],
          "15": [
            10339,
            10351
          ],
          "16": [
            10420,
            10437
          ],
          "17": [
            10455,
            10467
          ],
          "18": [
            10536,
            10553
          ],
          "19": [
            10571,
            10583
          ],
          "20": [
            10651,
            10667
          ],
          "21": [
            10685,
            10696
          ],
          "22": [
            10764,
            10780
          ],
          "23": [
            10798,
            10809
          ],
          "24": [
            10877,
            10893
          ],
          "25": [
            10911,
            10922
          ],
          "26": [
            10990,
            11001
          ],
          "27": [
            11035,
            11048
          ]
        }
      },
      "2": {},
      "3": {
        "APIConsumer._splitSignature": {
          "13": [
            1549,
            1608
          ]
        },
        "APIConsumer._verifySignature": {
          "9": [
            1373,
            1424
          ]
        },
        "APIConsumer.checkResult": {
          "8": [
            786,
            864
          ]
        },
        "APIConsumer.getInputDataStructure": {
          "0": [
            971,
            1003
          ]
        }
      },
      "4": {},
      "5": {
        "BaseClient.cancelRequest": {
          "4": [
            1275,
            1314
          ]
        },
        "BaseClient.submitRequest": {
          "5": [
            954,
            1029
          ],
          "6": [
            1136,
            1168
          ],
          "7": [
            1178,
            1194
          ]
        },
        "BaseClient.withdrawFunds": {
          "3": [
            1452,
            1513
          ]
        }
      },
      "7": {
        "Ownable.isOwner": {
          "2": [
            378,
            405
          ]
        },
        "Ownable.owner": {
          "1": [
            310,
            323
          ]
        }
      }
    }
  },
  "dependencies": [
    "APIProvider",
    "BaseClient",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Math",
    "Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/SignedMath",
    "OpenZeppelin/openzeppelin-contracts@4.9.2/Strings"
  ],
  "deployedBytecode": "60806040526004361061009c5760003560e01c80638d68cf59116100645780638d68cf591461017a5780638da5cb5b1461019d5780638f32d59b146101bb578063c2c56245146101db578063c91c7b37146101fb578063cb3927471461021b57600080fd5b8063085d4883146100a1578063155dd5ee146100de5780632896de131461010e5780633015394c1461015a57806343bb58de1461017c575b600080fd5b3480156100ad57600080fd5b506002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506100fe6100f93660046108b4565b61023b565b60405190151581526020016100d5565b34801561011a57600080fd5b50604080518082018252601781527f7b737472696e67206170694964656e7469666965723b7d000000000000000000602082015290516100d5919061091d565b34801561016657600080fd5b5061017a6101753660046108b4565b610308565b005b61018f61018a3660046109e3565b6103a5565b6040519081526020016100d5565b3480156101a957600080fd5b506000546001600160a01b03166100c1565b3480156101c757600080fd5b506000546001600160a01b031633146100fe565b3480156101e757600080fd5b506001546100c1906001600160a01b031681565b34801561020757600080fd5b506100fe610216366004610a7c565b6104d9565b34801561022757600080fd5b5061017a610236366004610ae8565b610581565b600080546001600160a01b0316331461026f5760405162461bcd60e51b815260040161026690610b2a565b60405180910390fd5b814710156102b45760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610266565b6040513390600090829085908381818185875af1925050503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b509095945050505050565b6000546001600160a01b031633146103325760405162461bcd60e51b815260040161026690610b2a565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610b72565b5050565b600080546001600160a01b031633146103d05760405162461bcd60e51b815260040161026690610b2a565b6103da4734610b94565b84111561041e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610266565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a9087906104539088908890600401610bb5565b60206040518083038185885af1158015610471573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104969190610bd7565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c816040516104c991815260200190565b60405180910390a1949350505050565b6000806104e885870187610bf0565b905060006104f884860186610c8a565b600254835160405163bf40fac160e01b81529293506105769284926001600160a01b03169163bf40fac191610530919060040161091d565b602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190610d31565b6105f8565b979650505050505050565b6001546001600160a01b031633146103a15760405162461bcd60e51b815260206004820152603460248201527f43616e206f6e6c792062652063616c6c65642062792074686520726567697374604482015273195c995908189c9bdad95c8818dbdb9d1c9858dd60621b6064820152608401610266565b6000806106098460000151516106d5565b845160405161061c929190602001610d5a565b60405160208183030381529060405280519060200120905060008060006106468760200151610768565b925092509250856001600160a01b031660018583868660405160008152602001604052604051610692949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156106b4573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b92915050565b606060006106e2836107dc565b600101905060008167ffffffffffffffff81111561070257610702610937565b6040519080825280601f01601f19166020018201604052801561072c576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461073657509392505050565b600080600083516041146107be5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610266565b50505060208101516040820151606090920151909260009190911a90565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061081b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610847576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061086557662386f26fc10000830492506010015b6305f5e100831061087d576305f5e100830492506008015b612710831061089157612710830492506004015b606483106108a3576064830492506002015b600a83106106cf5760010192915050565b6000602082840312156108c657600080fd5b5035919050565b60005b838110156108e85781810151838201526020016108d0565b50506000910152565b600081518084526109098160208601602086016108cd565b601f01601f19169290920160200192915050565b60208152600061093060208301846108f1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561096857610968610937565b604051601f8501601f19908116603f0116810190828211818310171561099057610990610937565b816040528093508581528686860111156109a957600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126109d457600080fd5b6109308383356020850161094d565b6000806000606084860312156109f857600080fd5b83359250602084013567ffffffffffffffff811115610a1657600080fd5b610a22868287016109c3565b925050604084013590509250925092565b60008083601f840112610a4557600080fd5b50813567ffffffffffffffff811115610a5d57600080fd5b602083019150836020828501011115610a7557600080fd5b9250929050565b60008060008060408587031215610a9257600080fd5b843567ffffffffffffffff80821115610aaa57600080fd5b610ab688838901610a33565b90965094506020870135915080821115610acf57600080fd5b50610adc87828801610a33565b95989497509550505050565b60008060208385031215610afb57600080fd5b823567ffffffffffffffff811115610b1257600080fd5b610b1e85828601610a33565b90969095509350505050565b60208082526028908201527f46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206040820152676f776e657220212160c01b606082015260800190565b600060208284031215610b8457600080fd5b8151801515811461093057600080fd5b808201808211156106cf57634e487b7160e01b600052601160045260246000fd5b604081526000610bc860408301856108f1565b90508260208301529392505050565b600060208284031215610be957600080fd5b5051919050565b600060208284031215610c0257600080fd5b813567ffffffffffffffff80821115610c1a57600080fd5b9083019060208286031215610c2e57600080fd5b604051602081018181108382111715610c4957610c49610937565b604052823582811115610c5b57600080fd5b80840193505085601f840112610c7057600080fd5b610c7f8684356020860161094d565b815295945050505050565b600060208284031215610c9c57600080fd5b813567ffffffffffffffff80821115610cb457600080fd5b9083019060408286031215610cc857600080fd5b604051604081018181108382111715610ce357610ce3610937565b604052823582811115610cf557600080fd5b610d01878286016109c3565b825250602083013582811115610d1657600080fd5b610d22878286016109c3565b60208301525095945050505050565b600060208284031215610d4357600080fd5b81516001600160a01b038116811461093057600080fd5b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000815260008351610d9281601a8501602088016108cd565b835190830190610da981601a8401602088016108cd565b01601a0194935050505056fea2646970667358221220a815a045d1d986dc29a13815524783334feda23539e82ec7fc36b28a9375604864736f6c63430008130033",
  "deployedSourceMap": "289:1496:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:27;;;;;;;;;;-1:-1:-1;331:27:3;;;;-1:-1:-1;;;;;331:27:3;;;;;;-1:-1:-1;;;;;197:32:9;;;179:51;;167:2;152:18;331:27:3;;;;;;;;1375:279:5;;;;;;;;;;-1:-1:-1;1375:279:5;;;;;:::i;:::-;;:::i;:::-;;;591:14:9;;584:22;566:41;;554:2;539:18;1375:279:5;426:187:9;881:129:3;;;;;;;;;;-1:-1:-1;971:32:3;;;;;;;;;;;;;;;;881:129;;;;971:32;881:129;:::i;1207:114:5:-;;;;;;;;;;-1:-1:-1;1207:114:5;;;;;:::i;:::-;;:::i;:::-;;823:378;;;;;;:::i;:::-;;:::i;:::-;;;2974:25:9;;;2962:2;2947:18;823:378:5;2828:177:9;262:64:7;;;;;;;;;;-1:-1:-1;299:7:7;317:6;-1:-1:-1;;;;;317:6:7;262:64;;331:77;;;;;;;;;;-1:-1:-1;370:4:7;399:6;-1:-1:-1;;;;;399:6:7;385:10;:20;331:77;;175:37:5;;;;;;;;;;-1:-1:-1;175:37:5;;;;-1:-1:-1;;;;;175:37:5;;;523:348:3;;;;;;;;;;-1:-1:-1;523:348:3;;;;;:::i;:::-;;:::i;737:80:5:-;;;;;;;;;;-1:-1:-1;737:80:5;;;;;:::i;:::-;;:::i;1375:279::-;1436:4;399:6:7;;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;;;;;;;;;1485:5:5::1;1460:21;:30;;1452:61;;;::::0;-1:-1:-1;;;1452:61:5;;5549:2:9;1452:61:5::1;::::0;::::1;5531:21:9::0;5588:2;5568:18;;;5561:30;-1:-1:-1;;;5607:18:9;;;5600:48;5665:18;;1452:61:5::1;5347:342:9::0;1452:61:5::1;1595:28;::::0;1555:10:::1;::::0;1523:21:::1;::::0;1555:10;;1613:5;;1523:21;1595:28;1523:21;1595:28;1613:5;1555:10;1595:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1576:47:5;;1375:279;-1:-1:-1;;;;;1375:279:5:o;1207:114::-;370:4:7;399:6;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;1275:14:5::1;::::0;:39:::1;::::0;-1:-1:-1;;;1275:39:5;;::::1;::::0;::::1;2974:25:9::0;;;-1:-1:-1;;;;;1275:14:5;;::::1;::::0;:28:::1;::::0;2947:18:9;;1275:39:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1207:114:::0;:::o;823:378::-;938:4;399:6:7;;-1:-1:-1;;;;;399:6:7;385:10;:20;118:62;;;;-1:-1:-1;;;118:62:7;;;;;;;:::i;:::-;973:33:5::1;985:21;973:9;:33;:::i;:::-;962:7;:44;;954:75;;;::::0;-1:-1:-1;;;954:75:5;;5549:2:9;954:75:5::1;::::0;::::1;5531:21:9::0;5588:2;5568:18;;;5561:30;-1:-1:-1;;;5607:18:9;;;5600:48;5665:18;;954:75:5::1;5347:342:9::0;954:75:5::1;1056:14;::::0;:70:::1;::::0;-1:-1:-1;;;1056:70:5;;1039:14:::1;::::0;-1:-1:-1;;;;;1056:14:5::1;::::0;:28:::1;::::0;1092:7;;1056:70:::1;::::0;1101:5;;1108:17;;1056:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1039:87;;1141:27;1158:9;1141:27;;;;2974:25:9::0;;2962:2;2947:18;;2828:177;1141:27:5::1;;;;;;;;1185:9:::0;823:378;-1:-1:-1;;;;823:378:5:o;523:348:3:-;629:4;;666:30;;;;677:9;666:30;:::i;:::-;645:51;-1:-1:-1;706:30:3;739:37;;;;750:10;739:37;:::i;:::-;823:8;;843:19;;823:40;;-1:-1:-1;;;823:40:3;;706:70;;-1:-1:-1;793:71:3;;706:70;;-1:-1:-1;;;;;823:8:3;;:19;;:40;;843:19;823:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;793:16;:71::i;:::-;786:78;523:348;-1:-1:-1;;;;;;;523:348:3:o;737:80:5:-;326:14;;-1:-1:-1;;;;;326:14:5;304:10;:37;296:102;;;;-1:-1:-1;;;296:102:5;;9210:2:9;296:102:5;;;9192:21:9;9249:2;9229:18;;;9222:30;9288:34;9268:18;;;9261:62;-1:-1:-1;;;9339:18:9;;;9332:50;9399:19;;296:102:5;9008:416:9;1016:415:3;1112:4;1128:20;1212:45;1229:11;:20;;;:27;1212:16;:45::i;:::-;1259:20;;1161:119;;;;;1259:20;1161:119;;;:::i;:::-;;;;;;;;;;;;;1151:130;;;;;;1128:153;;1292:9;1303;1314:7;1325:38;1341:11;:21;;;1325:15;:38::i;:::-;1291:72;;;;;;1417:6;-1:-1:-1;;;;;1381:42:3;:32;1391:12;1405:1;1408;1411;1381:32;;;;;;;;;;;;;;;;;10362:25:9;;;10435:4;10423:17;;;;10418:2;10403:18;;10396:45;10472:2;10457:18;;10450:34;10515:2;10500:18;;10493:34;10349:3;10334:19;;10135:398;1381:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1381:42:3;;1373:51;;;;;;1016:415;;;;;:::o;447:696:0:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:0;-1:-1:-1;604:41:0;-1:-1:-1;765:28:0;;;781:2;765:28;820:280;-1:-1:-1;;851:5:0;-1:-1:-1;;;985:2:0;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:0;820:280;1064:21;-1:-1:-1;1120:6:0;447:696;-1:-1:-1;;;447:696:0:o;1437:345:3:-;1508:9;1519;1530:7;1557:9;:16;1577:2;1557:22;1549:59;;;;-1:-1:-1;;;1549:59:3;;10872:2:9;1549:59:3;;;10854:21:9;10911:2;10891:18;;;10884:30;10950:26;10930:18;;;10923:54;10994:18;;1549:59:3;10670:348:9;1549:59:3;-1:-1:-1;;;1667:2:3;1652:18;;1646:25;1710:2;1695:18;;1689:25;1761:2;1746:18;;;1740:25;1646;;1737:1;1732:34;;;;;1437:345::o;10139:916:1:-;10192:7;;-1:-1:-1;;;10267:17:1;;10263:103;;-1:-1:-1;;;10304:17:1;;;-1:-1:-1;10349:2:1;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:1;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:1;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:1;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:1;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:1;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:1:o;241:180:9:-;300:6;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;-1:-1:-1;392:23:9;;241:180;-1:-1:-1;241:180:9:o;618:250::-;703:1;713:113;727:6;724:1;721:13;713:113;;;803:11;;;797:18;784:11;;;777:39;749:2;742:10;713:113;;;-1:-1:-1;;860:1:9;842:16;;835:27;618:250::o;873:271::-;915:3;953:5;947:12;980:6;975:3;968:19;996:76;1065:6;1058:4;1053:3;1049:14;1042:4;1035:5;1031:16;996:76;:::i;:::-;1126:2;1105:15;-1:-1:-1;;1101:29:9;1092:39;;;;1133:4;1088:50;;873:271;-1:-1:-1;;873:271:9:o;1149:220::-;1298:2;1287:9;1280:21;1261:4;1318:45;1359:2;1348:9;1344:18;1336:6;1318:45;:::i;:::-;1310:53;1149:220;-1:-1:-1;;;1149:220:9:o;1374:127::-;1435:10;1430:3;1426:20;1423:1;1416:31;1466:4;1463:1;1456:15;1490:4;1487:1;1480:15;1506:631;1570:5;1600:18;1641:2;1633:6;1630:14;1627:40;;;1647:18;;:::i;:::-;1722:2;1716:9;1690:2;1776:15;;-1:-1:-1;;1772:24:9;;;1798:2;1768:33;1764:42;1752:55;;;1822:18;;;1842:22;;;1819:46;1816:72;;;1868:18;;:::i;:::-;1908:10;1904:2;1897:22;1937:6;1928:15;;1967:6;1959;1952:22;2007:3;1998:6;1993:3;1989:16;1986:25;1983:45;;;2024:1;2021;2014:12;1983:45;2074:6;2069:3;2062:4;2054:6;2050:17;2037:44;2129:1;2122:4;2113:6;2105;2101:19;2097:30;2090:41;;;;1506:631;;;;;:::o;2142:220::-;2184:5;2237:3;2230:4;2222:6;2218:17;2214:27;2204:55;;2255:1;2252;2245:12;2204:55;2277:79;2352:3;2343:6;2330:20;2323:4;2315:6;2311:17;2277:79;:::i;2367:456::-;2453:6;2461;2469;2522:2;2510:9;2501:7;2497:23;2493:32;2490:52;;;2538:1;2535;2528:12;2490:52;2574:9;2561:23;2551:33;;2635:2;2624:9;2620:18;2607:32;2662:18;2654:6;2651:30;2648:50;;;2694:1;2691;2684:12;2648:50;2717:49;2758:7;2749:6;2738:9;2734:22;2717:49;:::i;:::-;2707:59;;;2813:2;2802:9;2798:18;2785:32;2775:42;;2367:456;;;;;:::o;3450:347::-;3501:8;3511:6;3565:3;3558:4;3550:6;3546:17;3542:27;3532:55;;3583:1;3580;3573:12;3532:55;-1:-1:-1;3606:20:9;;3649:18;3638:30;;3635:50;;;3681:1;3678;3671:12;3635:50;3718:4;3710:6;3706:17;3694:29;;3770:3;3763:4;3754:6;3746;3742:19;3738:30;3735:39;3732:59;;;3787:1;3784;3777:12;3732:59;3450:347;;;;;:::o;3802:717::-;3892:6;3900;3908;3916;3969:2;3957:9;3948:7;3944:23;3940:32;3937:52;;;3985:1;3982;3975:12;3937:52;4025:9;4012:23;4054:18;4095:2;4087:6;4084:14;4081:34;;;4111:1;4108;4101:12;4081:34;4150:58;4200:7;4191:6;4180:9;4176:22;4150:58;:::i;:::-;4227:8;;-1:-1:-1;4124:84:9;-1:-1:-1;4315:2:9;4300:18;;4287:32;;-1:-1:-1;4331:16:9;;;4328:36;;;4360:1;4357;4350:12;4328:36;;4399:60;4451:7;4440:8;4429:9;4425:24;4399:60;:::i;:::-;3802:717;;;;-1:-1:-1;4478:8:9;-1:-1:-1;;;;3802:717:9:o;4524:409::-;4594:6;4602;4655:2;4643:9;4634:7;4630:23;4626:32;4623:52;;;4671:1;4668;4661:12;4623:52;4711:9;4698:23;4744:18;4736:6;4733:30;4730:50;;;4776:1;4773;4766:12;4730:50;4815:58;4865:7;4856:6;4845:9;4841:22;4815:58;:::i;:::-;4892:8;;4789:84;;-1:-1:-1;4524:409:9;-1:-1:-1;;;;4524:409:9:o;4938:404::-;5140:2;5122:21;;;5179:2;5159:18;;;5152:30;5218:34;5213:2;5198:18;;5191:62;-1:-1:-1;;;5284:2:9;5269:18;;5262:38;5332:3;5317:19;;4938:404::o;5904:277::-;5971:6;6024:2;6012:9;6003:7;5999:23;5995:32;5992:52;;;6040:1;6037;6030:12;5992:52;6072:9;6066:16;6125:5;6118:13;6111:21;6104:5;6101:32;6091:60;;6147:1;6144;6137:12;6186:222;6251:9;;;6272:10;;;6269:133;;;6324:10;6319:3;6315:20;6312:1;6305:31;6359:4;6356:1;6349:15;6387:4;6384:1;6377:15;6413:289;6588:2;6577:9;6570:21;6551:4;6608:45;6649:2;6638:9;6634:18;6626:6;6608:45;:::i;:::-;6600:53;;6689:6;6684:2;6673:9;6669:18;6662:34;6413:289;;;;;:::o;6707:184::-;6777:6;6830:2;6818:9;6809:7;6805:23;6801:32;6798:52;;;6846:1;6843;6836:12;6798:52;-1:-1:-1;6869:16:9;;6707:184;-1:-1:-1;6707:184:9:o;6896:874::-;6975:6;7028:2;7016:9;7007:7;7003:23;6999:32;6996:52;;;7044:1;7041;7034:12;6996:52;7084:9;7071:23;7113:18;7154:2;7146:6;7143:14;7140:34;;;7170:1;7167;7160:12;7140:34;7193:22;;;;7249:2;7231:16;;;7227:25;7224:45;;;7265:1;7262;7255:12;7224:45;7298:2;7292:9;7340:2;7332:6;7328:15;7393:6;7381:10;7378:22;7373:2;7361:10;7358:18;7355:46;7352:72;;;7404:18;;:::i;:::-;7440:2;7433:22;7480:16;;7508;;;7505:36;;;7537:1;7534;7527:12;7505:36;7568:8;7564:2;7560:17;7550:27;;;7615:7;7608:4;7604:2;7600:13;7596:27;7586:55;;7637:1;7634;7627:12;7586:55;7665:73;7730:7;7725:2;7712:16;7707:2;7703;7699:11;7665:73;:::i;:::-;7650:89;;7657:6;6896:874;-1:-1:-1;;;;;6896:874:9:o;7775:933::-;7861:6;7914:2;7902:9;7893:7;7889:23;7885:32;7882:52;;;7930:1;7927;7920:12;7882:52;7970:9;7957:23;7999:18;8040:2;8032:6;8029:14;8026:34;;;8056:1;8053;8046:12;8026:34;8079:22;;;;8135:4;8117:16;;;8113:27;8110:47;;;8153:1;8150;8143:12;8110:47;8186:4;8180:11;8230:4;8222:6;8218:17;8285:6;8273:10;8270:22;8265:2;8253:10;8250:18;8247:46;8244:72;;;8296:18;;:::i;:::-;8332:4;8325:24;8374:16;;8402;;;8399:36;;;8431:1;8428;8421:12;8399:36;8459:44;8495:7;8484:8;8480:2;8476:17;8459:44;:::i;:::-;8451:6;8444:60;;8550:2;8546;8542:11;8529:25;8579:2;8569:8;8566:16;8563:36;;;8595:1;8592;8585:12;8563:36;8632:44;8668:7;8657:8;8653:2;8649:17;8632:44;:::i;:::-;8627:2;8615:15;;8608:69;-1:-1:-1;8619:6:9;7775:933;-1:-1:-1;;;;;7775:933:9:o;8713:290::-;8783:6;8836:2;8824:9;8815:7;8811:23;8807:32;8804:52;;;8852:1;8849;8842:12;8804:52;8878:16;;-1:-1:-1;;;;;8923:31:9;;8913:42;;8903:70;;8969:1;8966;8959:12;9429:701;9737:66;9732:3;9725:79;9707:3;9833:6;9827:13;9849:75;9917:6;9912:2;9907:3;9903:12;9896:4;9888:6;9884:17;9849:75;:::i;:::-;9984:13;;9943:16;;;;10006:76;9984:13;10068:2;10060:11;;10053:4;10041:17;;10006:76;:::i;:::-;10102:17;10121:2;10098:26;;9429:701;-1:-1:-1;;;;9429:701:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    289,
    1785
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D68CF59 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8D68CF59 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC2C56245 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xC91C7B37 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xCB392747 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85D4883 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2896DE13 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x43BB58DE EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0xC1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH32 0x7B737472696E67206170694964656E7469666965723B7D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xC1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC054E53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3015394C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x3DA SELFBALANCE CALLVALUE PUSH2 0xB94 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x78F8AF25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF1F15E4A SWAP1 DUP8 SWAP1 PUSH2 0x453 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP PUSH32 0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C DUP2 PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E8 DUP6 DUP8 ADD DUP8 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F8 DUP5 DUP7 ADD DUP7 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH2 0x576 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0x530 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x91D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x195C995908189C9BDAD95C8818DBDB9D1C9858DD PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x609 DUP5 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x6D5 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x40 MLOAD PUSH2 0x61C SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x646 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x768 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP6 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x692 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6E2 DUP4 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x702 JUMPI PUSH2 0x702 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x72C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x736 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x81B JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x847 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x865 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x87D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x891 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x8A3 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x909 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x930 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x968 JUMPI PUSH2 0x968 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x990 JUMPI PUSH2 0x990 PUSH2 0x937 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x930 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA22 DUP7 DUP3 DUP8 ADD PUSH2 0x9C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB6 DUP9 DUP4 DUP10 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xADC DUP8 DUP3 DUP9 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6F776E6572202121 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBC8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC49 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP4 POP POP DUP6 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7F DUP7 DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD PUSH2 0x94D JUMP JUMPDEST DUP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xCE3 JUMPI PUSH2 0xCE3 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD01 DUP8 DUP3 DUP7 ADD PUSH2 0x9C3 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD22 DUP8 DUP3 DUP7 ADD PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0xD92 DUP2 PUSH1 0x1A DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x8CD JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xDA9 DUP2 PUSH1 0x1A DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x8CD JUMP JUMPDEST ADD PUSH1 0x1A ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 ISZERO LOG0 GASLIMIT 0xD1 0xD9 DUP7 0xDC 0x29 LOG1 CODESIZE ISZERO MSTORE SELFBALANCE DUP4 CALLER 0x4F 0xED LOG2 CALLDATALOAD CODECOPY 0xE8 0x2E 0xC7 0xFC CALLDATASIZE 0xB2 DUP11 SWAP4 PUSH22 0x604864736F6C63430008130033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D68CF59"
    },
    "25": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D68CF59"
    },
    "36": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A"
    },
    "40": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "51": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "58": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB"
    },
    "62": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC2C56245"
    },
    "69": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB"
    },
    "73": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC91C7B37"
    },
    "80": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FB"
    },
    "84": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB392747"
    },
    "91": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21B"
    },
    "95": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "REVERT",
      "path": "3"
    },
    "100": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85D4883"
    },
    "107": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1"
    },
    "111": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x155DD5EE"
    },
    "118": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "122": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2896DE13"
    },
    "129": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10E"
    },
    "133": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3015394C"
    },
    "140": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A"
    },
    "144": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x43BB58DE"
    },
    "151": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "EQ",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C"
    },
    "155": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "159": {
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "160": {
      "first_revert": true,
      "fn": null,
      "offset": [
        289,
        1785
      ],
      "op": "REVERT",
      "path": "3"
    },
    "161": {
      "offset": [
        331,
        358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "168": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "REVERT",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "op": "POP"
    },
    "175": {
      "offset": [
        331,
        358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "177": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "181": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "188": {
      "op": "SHL"
    },
    "189": {
      "op": "SUB"
    },
    "190": {
      "offset": [
        331,
        358
      ],
      "op": "AND",
      "path": "3"
    },
    "191": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "JUMP",
      "path": "3"
    },
    "193": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "SWAP2"
    },
    "207": {
      "op": "AND"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "offset": [
        331,
        358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "216": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "SUB",
      "path": "3"
    },
    "220": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        331,
        358
      ],
      "op": "RETURN",
      "path": "3"
    },
    "222": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "223": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "224": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "225": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "226": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEA"
    },
    "229": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "230": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "232": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "REVERT",
      "path": "5"
    },
    "234": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "235": {
      "op": "POP"
    },
    "236": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFE"
    },
    "239": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF9"
    },
    "242": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "243": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "245": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B4"
    },
    "248": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "249": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "250": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23B"
    },
    "253": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "254": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "255": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "257": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "258": {
      "op": "SWAP1"
    },
    "259": {
      "op": "ISZERO"
    },
    "260": {
      "op": "ISZERO"
    },
    "261": {
      "op": "DUP2"
    },
    "262": {
      "op": "MSTORE"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "265": {
      "op": "ADD"
    },
    "266": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5"
    },
    "269": {
      "op": "JUMP"
    },
    "270": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "271": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "272": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "273": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "274": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A"
    },
    "277": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "278": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "280": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "281": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "REVERT",
      "path": "3"
    },
    "282": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "286": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP1",
      "path": "3"
    },
    "287": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "288": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP1",
      "path": "3"
    },
    "289": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP3",
      "path": "3"
    },
    "290": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "ADD",
      "path": "3"
    },
    "291": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP3",
      "path": "3"
    },
    "292": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "293": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "295": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "296": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "297": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7B737472696E67206170694964656E7469666965723B7D000000000000000000"
    },
    "330": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "332": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "DUP3",
      "path": "3"
    },
    "333": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "ADD",
      "path": "3"
    },
    "334": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "335": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "336": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "337": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "340": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "341": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        971,
        1003
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "342": {
      "fn": "APIConsumer.getInputDataStructure",
      "offset": [
        881,
        1010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91D"
    },
    "345": {
      "fn": "APIConsumer.getInputDataStructure",
      "jump": "i",
      "offset": [
        881,
        1010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "346": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "347": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "348": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "DUP1",
      "path": "5"
    },
    "349": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "350": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x166"
    },
    "353": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "354": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "356": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "DUP1",
      "path": "5"
    },
    "357": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "REVERT",
      "path": "5"
    },
    "358": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "359": {
      "op": "POP"
    },
    "360": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "363": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "366": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "367": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "369": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B4"
    },
    "372": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "373": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x308"
    },
    "377": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "378": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "379": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "STOP",
      "path": "5"
    },
    "380": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "381": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F"
    },
    "384": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18A"
    },
    "387": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "388": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "390": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E3"
    },
    "393": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "394": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "395": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A5"
    },
    "398": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "399": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "402": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "403": {
      "op": "SWAP1"
    },
    "404": {
      "op": "DUP2"
    },
    "405": {
      "op": "MSTORE"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "408": {
      "op": "ADD"
    },
    "409": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5"
    },
    "412": {
      "op": "JUMP"
    },
    "413": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "414": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "415": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "DUP1",
      "path": "7"
    },
    "416": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "417": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A9"
    },
    "420": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "423": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "DUP1",
      "path": "7"
    },
    "424": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "REVERT",
      "path": "7"
    },
    "425": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "426": {
      "op": "POP"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [
        299,
        306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "429": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 1
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "AND",
      "path": "7"
    },
    "439": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC1"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMP",
      "path": "7"
    },
    "443": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "444": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "445": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "446": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "447": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C7"
    },
    "450": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "451": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "453": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "DUP1",
      "path": "7"
    },
    "454": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "REVERT",
      "path": "7"
    },
    "455": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "456": {
      "op": "POP"
    },
    "457": {
      "fn": "Ownable.isOwner",
      "offset": [
        370,
        374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "459": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 2
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "466": {
      "op": "SHL"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "469": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "470": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "471": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE"
    },
    "474": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMP",
      "path": "7"
    },
    "475": {
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "476": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "477": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "478": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "479": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "482": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "483": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "485": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "5"
    },
    "486": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "REVERT",
      "path": "5"
    },
    "487": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "491": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "492": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC1"
    },
    "495": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "offset": [
        175,
        212
      ],
      "op": "AND",
      "path": "5"
    },
    "505": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "DUP2",
      "path": "5"
    },
    "506": {
      "fn": "Ownable.isOwner",
      "offset": [
        175,
        212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "507": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "508": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "509": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "DUP1",
      "path": "3"
    },
    "510": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "511": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x207"
    },
    "514": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "515": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "517": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "DUP1",
      "path": "3"
    },
    "518": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "REVERT",
      "path": "3"
    },
    "519": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE"
    },
    "524": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x216"
    },
    "527": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "528": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "530": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7C"
    },
    "533": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        523,
        871
      ],
      "op": "JUMP",
      "path": "3"
    },
    "534": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "535": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D9"
    },
    "538": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        523,
        871
      ],
      "op": "JUMP",
      "path": "3"
    },
    "539": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "540": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "541": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "DUP1",
      "path": "5"
    },
    "542": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "543": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x227"
    },
    "546": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "547": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "549": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "DUP1",
      "path": "5"
    },
    "550": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "REVERT",
      "path": "5"
    },
    "551": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "552": {
      "op": "POP"
    },
    "553": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "556": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "559": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "560": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "562": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE8"
    },
    "565": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        737,
        817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "566": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "567": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x581"
    },
    "570": {
      "fn": "BaseClient.processResult",
      "jump": "i",
      "offset": [
        737,
        817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "571": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "572": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1436,
        1440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "574": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "575": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "585": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "586": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "587": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26F"
    },
    "590": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "591": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "593": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "600": {
      "op": "SHL"
    },
    "601": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "602": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "603": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "605": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "606": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x266"
    },
    "609": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "610": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB2A"
    },
    "613": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "614": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "615": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "617": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "618": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "DUP1",
      "path": "7"
    },
    "619": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "620": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SUB",
      "path": "7"
    },
    "621": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "622": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "623": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "624": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1485,
        1490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 3
    },
    "625": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1481
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "626": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1490
      ],
      "op": "LT",
      "path": "5"
    },
    "627": {
      "branch": 29,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1460,
        1490
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "628": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B4"
    },
    "631": {
      "branch": 29,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "632": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "634": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "643": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "646": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "648": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "DUP3",
      "path": "5"
    },
    "649": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "ADD",
      "path": "5"
    },
    "650": {
      "op": "MSTORE"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "655": {
      "op": "DUP3"
    },
    "656": {
      "op": "ADD"
    },
    "657": {
      "op": "MSTORE"
    },
    "658": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "682": {
      "op": "DUP3"
    },
    "683": {
      "op": "ADD"
    },
    "684": {
      "op": "MSTORE"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x266"
    },
    "691": {
      "op": "JUMP"
    },
    "692": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1452,
        1513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "693": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "695": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "696": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "CALLER",
      "path": "5"
    },
    "697": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "698": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "700": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "701": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "DUP3",
      "path": "5"
    },
    "702": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "703": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "DUP6",
      "path": "5"
    },
    "704": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "705": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "DUP4",
      "path": "5"
    },
    "706": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "707": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1523,
        1544
      ],
      "op": "DUP2",
      "path": "5"
    },
    "708": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "709": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1613,
        1618
      ],
      "op": "DUP6",
      "path": "5"
    },
    "710": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1555,
        1565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "711": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "GAS",
      "path": "5"
    },
    "712": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "CALL",
      "path": "5"
    },
    "713": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "714": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "715": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "716": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "717": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "718": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "719": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "721": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "722": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "EQ",
      "path": "5"
    },
    "723": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F8"
    },
    "726": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "727": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "729": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "730": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "731": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "732": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "734": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "NOT",
      "path": "5"
    },
    "735": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "737": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "738": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "739": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "AND",
      "path": "5"
    },
    "740": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP3",
      "path": "5"
    },
    "741": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "742": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "744": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "745": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "746": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP3",
      "path": "5"
    },
    "747": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "748": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "749": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "751": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "753": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "DUP5",
      "path": "5"
    },
    "754": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "ADD",
      "path": "5"
    },
    "755": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "756": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FD"
    },
    "759": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMP",
      "path": "5"
    },
    "760": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "761": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "763": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "764": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "POP",
      "path": "5"
    },
    "765": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1595,
        1623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1576,
        1623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "768": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1576,
        1623
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "769": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1375,
        1654
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "o",
      "offset": [
        1375,
        1654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "776": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "777": {
      "fn": "Ownable.isOwner",
      "offset": [
        370,
        374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "779": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "789": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "790": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "791": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x332"
    },
    "794": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "795": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "797": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "806": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "807": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "809": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "810": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x266"
    },
    "813": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "814": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB2A"
    },
    "817": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "819": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x1"
    },
    "821": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "822": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "824": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "825": {
      "op": "PUSH4",
      "value": "0xC054E53"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "834": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "835": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "837": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "838": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "839": {
      "op": "DUP4"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "MSTORE"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "op": "SUB"
    },
    "850": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "851": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "852": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "AND",
      "path": "5"
    },
    "853": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "854": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1303
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3015394C"
    },
    "859": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1303
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "865": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "867": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "868": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "869": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP4",
      "path": "5"
    },
    "870": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SUB",
      "path": "5"
    },
    "871": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "872": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "874": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP8",
      "path": "5"
    },
    "875": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "GAS",
      "path": "5"
    },
    "876": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "CALL",
      "path": "5"
    },
    "877": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "878": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "879": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "880": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37D"
    },
    "883": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "884": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "885": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "887": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "888": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "889": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "890": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "892": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "REVERT",
      "path": "5"
    },
    "893": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "894": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "895": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "896": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "897": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "898": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "900": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "901": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "902": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "904": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "NOT",
      "path": "5"
    },
    "905": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "907": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP3",
      "path": "5"
    },
    "908": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "909": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "AND",
      "path": "5"
    },
    "910": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP3",
      "path": "5"
    },
    "911": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "912": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP1",
      "path": "5"
    },
    "913": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "915": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "916": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "917": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "918": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "ADD",
      "path": "5"
    },
    "919": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "920": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "923": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "924": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "925": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB72"
    },
    "928": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "929": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "930": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1275,
        1314
      ],
      "op": "POP",
      "path": "5"
    },
    "931": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1207,
        1321
      ],
      "op": "POP",
      "path": "5"
    },
    "932": {
      "fn": "BaseClient.cancelRequest",
      "jump": "o",
      "offset": [
        1207,
        1321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "933": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "934": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        938,
        942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "936": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "DUP1",
      "path": "7"
    },
    "937": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "947": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "948": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "949": {
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D0"
    },
    "952": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "953": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "955": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "offset": [
        118,
        180
      ],
      "op": "DUP2",
      "path": "7"
    },
    "964": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "965": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "967": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "ADD",
      "path": "7"
    },
    "968": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x266"
    },
    "971": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "972": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB2A"
    },
    "975": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        118,
        180
      ],
      "op": "JUMP",
      "path": "7"
    },
    "976": {
      "fn": "Ownable.isOwner",
      "offset": [
        118,
        180
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "977": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x3DA"
    },
    "980": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        985,
        1006
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "981": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        982
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "982": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB94"
    },
    "985": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        973,
        1006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "986": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        973,
        1006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "987": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        969
      ],
      "op": "DUP5",
      "path": "5"
    },
    "988": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        1006
      ],
      "op": "GT",
      "path": "5"
    },
    "989": {
      "branch": 30,
      "fn": "BaseClient.submitRequest",
      "offset": [
        962,
        1006
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "990": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41E"
    },
    "993": {
      "branch": 30,
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "994": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "996": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1005": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1008": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1010": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1011": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "ADD",
      "path": "5"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x266"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        954,
        1029
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1055": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1057": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1058": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1060": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1061": {
      "op": "PUSH4",
      "value": "0x78F8AF25"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1070": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1071": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1073": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1053
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "AND",
      "path": "5"
    },
    "1083": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1070
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1084": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1084
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF1F15E4A"
    },
    "1089": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1084
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1090": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1092,
        1099
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1091": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1092": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x453"
    },
    "1095": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1096": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1101,
        1106
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1097": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1101,
        1106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1098": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1108,
        1125
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1099": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1108,
        1125
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1100": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1102": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1103": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB5"
    },
    "1106": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1107": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1108": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1110": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1112": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1113": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1114": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1115": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SUB",
      "path": "5"
    },
    "1116": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1117": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1118": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1119": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "GAS",
      "path": "5"
    },
    "1120": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "CALL",
      "path": "5"
    },
    "1121": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1122": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1123": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1124": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x471"
    },
    "1127": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1128": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1129": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1131": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1132": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1133": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1134": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1136": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1137": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1138": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1139": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1140": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1141": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1142": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1143": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1145": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1146": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1147": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1149": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "NOT",
      "path": "5"
    },
    "1150": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1152": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1153": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1154": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "AND",
      "path": "5"
    },
    "1155": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1156": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1157": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1158": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1160": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1161": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1162": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1163": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "ADD",
      "path": "5"
    },
    "1164": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1165": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x496"
    },
    "1168": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1169": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1170": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD7"
    },
    "1173": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1174": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1056,
        1126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1175": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1176": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1039,
        1126
      ],
      "op": "POP",
      "path": "5"
    },
    "1177": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 6,
      "value": "0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C"
    },
    "1210": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1158,
        1167
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1211": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1213": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1214": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C9"
    },
    "1217": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "MSTORE"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "SWAP1"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1226": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1228": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1229": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1230": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1231": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SUB",
      "path": "5"
    },
    "1232": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1233": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1141,
        1168
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1234": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1185,
        1194
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 7
    },
    "1235": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        823,
        1201
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "fn": "BaseClient.submitRequest",
      "jump": "o",
      "offset": [
        823,
        1201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1241": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1242": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        629,
        633
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1244": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        629,
        633
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1245": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8"
    },
    "1248": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1249": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1250": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "ADD",
      "path": "3"
    },
    "1251": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        677,
        686
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1252": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF0"
    },
    "1255": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1256": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1257": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        645,
        696
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        706,
        736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1261": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1264": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1265": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1266": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "ADD",
      "path": "3"
    },
    "1267": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        750,
        760
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1268": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8A"
    },
    "1271": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        739,
        776
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        739,
        776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1273": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x2"
    },
    "1275": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        831
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1276": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        843,
        862
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1277": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        843,
        862
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1278": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1280": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1281": {
      "op": "PUSH4",
      "value": "0xBF40FAC1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1288": {
      "op": "SHL"
    },
    "1289": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1290": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1291": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        706,
        776
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1292": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        706,
        776
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        793,
        864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x576"
    },
    "1297": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        793,
        864
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1298": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        706,
        776
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1299": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        706,
        776
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "op": "SUB"
    },
    "1308": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        831
      ],
      "op": "AND",
      "path": "3"
    },
    "1309": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1310": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        842
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBF40FAC1"
    },
    "1315": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1316": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x530"
    },
    "1319": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1320": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        843,
        862
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1321": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1323": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ADD",
      "path": "3"
    },
    "1324": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91D"
    },
    "1327": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        823,
        863
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1328": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1329": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1331": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1333": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1334": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1335": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1336": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "SUB",
      "path": "3"
    },
    "1337": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1338": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1339": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "GAS",
      "path": "3"
    },
    "1340": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1341": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1342": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1343": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1344": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54D"
    },
    "1347": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1348": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1349": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1351": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1352": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1353": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1354": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1356": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1357": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1358": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "POP",
      "path": "3"
    },
    "1359": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "POP",
      "path": "3"
    },
    "1360": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "POP",
      "path": "3"
    },
    "1361": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "POP",
      "path": "3"
    },
    "1362": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1364": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1365": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1366": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1368": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "NOT",
      "path": "3"
    },
    "1369": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1371": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1372": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ADD",
      "path": "3"
    },
    "1373": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "AND",
      "path": "3"
    },
    "1374": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1375": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ADD",
      "path": "3"
    },
    "1376": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1377": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1379": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1380": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "POP",
      "path": "3"
    },
    "1381": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1382": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "ADD",
      "path": "3"
    },
    "1383": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1384": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x571"
    },
    "1387": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1388": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1389": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD31"
    },
    "1392": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        823,
        863
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1393": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        823,
        863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1394": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        793,
        809
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F8"
    },
    "1397": {
      "fn": "APIConsumer.checkResult",
      "jump": "i",
      "offset": [
        793,
        864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1398": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        793,
        864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1399": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        786,
        864
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1400": {
      "fn": "APIConsumer.checkResult",
      "offset": [
        523,
        871
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "fn": "APIConsumer.checkResult",
      "jump": "o",
      "offset": [
        523,
        871
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1409": {
      "fn": "BaseClient.processResult",
      "offset": [
        737,
        817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1410": {
      "offset": [
        326,
        340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1412": {
      "fn": "BaseClient.processResult",
      "offset": [
        326,
        340
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "offset": [
        326,
        340
      ],
      "op": "AND",
      "path": "5"
    },
    "1422": {
      "offset": [
        304,
        314
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1423": {
      "offset": [
        304,
        341
      ],
      "op": "EQ",
      "path": "5"
    },
    "1424": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "1427": {
      "offset": [
        296,
        398
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1428": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1430": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "offset": [
        296,
        398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1439": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1442": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1444": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1445": {
      "fn": "BaseClient.processResult",
      "offset": [
        296,
        398
      ],
      "op": "ADD",
      "path": "5"
    },
    "1446": {
      "op": "MSTORE"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1451": {
      "op": "DUP3"
    },
    "1452": {
      "op": "ADD"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792062652063616C6C65642062792074686520726567697374"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1489": {
      "op": "DUP3"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH20",
      "value": "0x195C995908189C9BDAD95C8818DBDB9D1C9858DD"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "offset": [
        296,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x266"
    },
    "1527": {
      "op": "JUMP"
    },
    "1528": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1529": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1112,
        1116
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1531": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1128,
        1148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1532": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1212,
        1257
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x609"
    },
    "1535": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1229,
        1240
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1536": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1229,
        1249
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1538": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1229,
        1249
      ],
      "op": "ADD",
      "path": "3"
    },
    "1539": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1229,
        1249
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1540": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1229,
        1256
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1541": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1212,
        1228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D5"
    },
    "1544": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1212,
        1257
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1545": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1212,
        1257
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1546": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1259,
        1279
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1547": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1259,
        1279
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1548": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1550": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1551": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61C"
    },
    "1554": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1555": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1556": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1259,
        1279
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1557": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1559": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "ADD",
      "path": "3"
    },
    "1560": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5A"
    },
    "1563": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1161,
        1280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1564": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1565": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1567": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1568": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1570": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1571": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1572": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "SUB",
      "path": "3"
    },
    "1573": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "SUB",
      "path": "3"
    },
    "1574": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1575": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1576": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1577": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1579": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1161,
        1280
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1580": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1581": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1582": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1583": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1585": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "ADD",
      "path": "3"
    },
    "1586": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1151,
        1281
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1587": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1128,
        1281
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1588": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1128,
        1281
      ],
      "op": "POP",
      "path": "3"
    },
    "1589": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1292,
        1301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1591": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1303,
        1312
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1592": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1314,
        1321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1594": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1325,
        1363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x646"
    },
    "1597": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1341,
        1352
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1598": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1600": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1341,
        1362
      ],
      "op": "ADD",
      "path": "3"
    },
    "1601": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1341,
        1362
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1602": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1325,
        1340
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x768"
    },
    "1605": {
      "fn": "APIConsumer._verifySignature",
      "jump": "i",
      "offset": [
        1325,
        1363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1606": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1325,
        1363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1607": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1608": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "POP",
      "path": "3"
    },
    "1609": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1610": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "POP",
      "path": "3"
    },
    "1611": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1612": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1291,
        1363
      ],
      "op": "POP",
      "path": "3"
    },
    "1613": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1417,
        1423
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 9
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1423
      ],
      "op": "AND",
      "path": "3"
    },
    "1623": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1625": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1391,
        1403
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1626": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1405,
        1406
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1627": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1408,
        1409
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1628": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1411,
        1412
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1629": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1631": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1632": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1634": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1635": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1636": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1638": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "ADD",
      "path": "3"
    },
    "1639": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1641": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1642": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1644": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1645": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x692"
    },
    "1648": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1649": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1650": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1651": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1652": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1653": {
      "op": "SWAP4"
    },
    "1654": {
      "op": "DUP5"
    },
    "1655": {
      "op": "MSTORE"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1658": {
      "op": "SWAP3"
    },
    "1659": {
      "op": "SWAP1"
    },
    "1660": {
      "op": "SWAP3"
    },
    "1661": {
      "op": "AND"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1664": {
      "op": "DUP5"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1669": {
      "op": "DUP4"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1674": {
      "op": "DUP3"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "SWAP1"
    },
    "1681": {
      "op": "JUMP"
    },
    "1682": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1683": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1685": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1687": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1688": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1690": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1691": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SUB",
      "path": "3"
    },
    "1692": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1693": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1694": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1695": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SUB",
      "path": "3"
    },
    "1696": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1697": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1698": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "GAS",
      "path": "3"
    },
    "1699": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1700": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1701": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1702": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1703": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B4"
    },
    "1706": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1707": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1708": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1710": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1711": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1712": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1713": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1715": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1716": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1717": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "POP",
      "path": "3"
    },
    "1718": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "POP",
      "path": "3"
    },
    "1719": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "POP",
      "path": "3"
    },
    "1720": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1722": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1724": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1725": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "SUB",
      "path": "3"
    },
    "1726": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1413
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1423
      ],
      "op": "AND",
      "path": "3"
    },
    "1736": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1381,
        1423
      ],
      "op": "EQ",
      "path": "3"
    },
    "1737": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1738": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "POP",
      "path": "3"
    },
    "1739": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "POP",
      "path": "3"
    },
    "1740": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "POP",
      "path": "3"
    },
    "1741": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "POP",
      "path": "3"
    },
    "1742": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1373,
        1424
      ],
      "op": "POP",
      "path": "3"
    },
    "1743": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1744": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1745": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1746": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "POP",
      "path": "3"
    },
    "1747": {
      "fn": "APIConsumer._verifySignature",
      "offset": [
        1016,
        1431
      ],
      "op": "POP",
      "path": "3"
    },
    "1748": {
      "fn": "APIConsumer._verifySignature",
      "jump": "o",
      "offset": [
        1016,
        1431
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1749": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1750": {
      "fn": "Strings.toString",
      "offset": [
        503,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1752": {
      "fn": "Strings.toString",
      "offset": [
        552,
        566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1754": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E2"
    },
    "1757": {
      "fn": "Strings.toString",
      "offset": [
        580,
        585
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1758": {
      "fn": "Strings.toString",
      "offset": [
        569,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DC"
    },
    "1761": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        569,
        586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1762": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1763": {
      "fn": "Strings.toString",
      "offset": [
        589,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1765": {
      "fn": "Strings.toString",
      "offset": [
        569,
        590
      ],
      "op": "ADD",
      "path": "0"
    },
    "1766": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1767": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "1768": {
      "fn": "Strings.toString",
      "offset": [
        604,
        624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "Strings.toString",
      "offset": [
        638,
        644
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1771": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1780": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1781": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "GT",
      "path": "0"
    },
    "1782": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1783": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1786": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1787": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1790": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x937"
    },
    "1793": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        627,
        645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1794": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1797": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1798": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1799": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1800": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1801": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1802": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1803": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1805": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1806": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1808": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "NOT",
      "path": "0"
    },
    "1809": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "AND",
      "path": "0"
    },
    "1810": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1812": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1813": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1814": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1815": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1817": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1818": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1819": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1820": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72C"
    },
    "1823": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1824": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1826": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1827": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1828": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1829": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1831": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1832": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1833": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "0"
    },
    "1834": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "fn": "Strings.toString",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1842": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1843": {
      "fn": "Strings.toString",
      "offset": [
        781,
        783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1845": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1846": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1849": {
      "op": "NOT"
    },
    "1850": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "ADD",
      "path": "0",
      "statement": 10
    },
    "1851": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "fn": "Strings.toString",
      "offset": [
        985,
        987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1873": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1874": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "MOD",
      "path": "0"
    },
    "1875": {
      "fn": "Strings.toString",
      "offset": [
        969,
        999
      ],
      "op": "BYTE",
      "path": "0"
    },
    "1876": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1877": {
      "fn": "Strings.toString",
      "offset": [
        956,
        1000
      ],
      "op": "MSTORE8",
      "path": "0"
    },
    "1878": {
      "fn": "Strings.toString",
      "offset": [
        1044,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0xA"
    },
    "1880": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1881": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DIV",
      "path": "0"
    },
    "1882": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1885": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x736"
    },
    "1888": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "Strings.toString",
      "offset": [
        1120,
        1126
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 12
    },
    "1891": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        447,
        1143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1896": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1437,
        1782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1897": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1508,
        1517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1899": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1519,
        1528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1900": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1530,
        1537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1902": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1557,
        1566
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 13
    },
    "1903": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1557,
        1573
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1904": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1577,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "1906": {
      "branch": 28,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1557,
        1579
      ],
      "op": "EQ",
      "path": "3"
    },
    "1907": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BE"
    },
    "1910": {
      "branch": 28,
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1911": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1913": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1922": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1927": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1928": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "ADD",
      "path": "3"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH32",
      "value": "0x696E76616C6964207369676E6174757265206C656E6774680000000000000000"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1972": {
      "op": "DUP3"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x266"
    },
    "1981": {
      "op": "JUMP"
    },
    "1982": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1549,
        1608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1667,
        1669
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1988": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1652,
        1670
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1989": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1652,
        1670
      ],
      "op": "ADD",
      "path": "3"
    },
    "1990": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1646,
        1671
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1991": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1710,
        1712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1993": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1695,
        1713
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1994": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1695,
        1713
      ],
      "op": "ADD",
      "path": "3"
    },
    "1995": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1689,
        1714
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1996": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1761,
        1763
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1998": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1746,
        1764
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1999": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1746,
        1764
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2000": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1746,
        1764
      ],
      "op": "ADD",
      "path": "3"
    },
    "2001": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1740,
        1765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2002": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1646,
        1671
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2003": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1646,
        1671
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2004": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1737,
        1738
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2006": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1732,
        1766
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2007": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1732,
        1766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2008": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1732,
        1766
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2009": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1732,
        1766
      ],
      "op": "BYTE",
      "path": "3"
    },
    "2010": {
      "fn": "APIConsumer._splitSignature",
      "offset": [
        1732,
        1766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2011": {
      "fn": "APIConsumer._splitSignature",
      "jump": "o",
      "offset": [
        1437,
        1782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2012": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2013": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2015": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2016": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2040": {
      "branch": 31,
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "LT",
      "path": "1"
    },
    "2041": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81B"
    },
    "2044": {
      "branch": 31,
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2045": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 14
    },
    "2069": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DIV",
      "path": "1"
    },
    "2070": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10351
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x40"
    },
    "2074": {
      "fn": "Math.log10",
      "offset": [
        10339,
        10351
      ],
      "op": "ADD",
      "path": "1"
    },
    "2075": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2076": {
      "fn": "Math.log10",
      "offset": [
        10392,
        10400
      ],
      "op": "PUSH14",
      "path": "1",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2091": {
      "fn": "Math.log10",
      "offset": [
        10383,
        10388
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2092": {
      "branch": 32,
      "fn": "Math.log10",
      "offset": [
        10383,
        10400
      ],
      "op": "LT",
      "path": "1"
    },
    "2093": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x847"
    },
    "2096": {
      "branch": 32,
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2097": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10437
      ],
      "op": "PUSH14",
      "path": "1",
      "statement": 16,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "2112": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2113": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DIV",
      "path": "1"
    },
    "2114": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2115": {
      "op": "POP"
    },
    "2116": {
      "fn": "Math.log10",
      "offset": [
        10465,
        10467
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x20"
    },
    "2118": {
      "fn": "Math.log10",
      "offset": [
        10455,
        10467
      ],
      "op": "ADD",
      "path": "1"
    },
    "2119": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2120": {
      "fn": "Math.log10",
      "offset": [
        10508,
        10516
      ],
      "op": "PUSH7",
      "path": "1",
      "value": "0x2386F26FC10000"
    },
    "2128": {
      "fn": "Math.log10",
      "offset": [
        10499,
        10504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2129": {
      "branch": 33,
      "fn": "Math.log10",
      "offset": [
        10499,
        10516
      ],
      "op": "LT",
      "path": "1"
    },
    "2130": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x865"
    },
    "2133": {
      "branch": 33,
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2134": {
      "fn": "Math.log10",
      "offset": [
        10545,
        10553
      ],
      "op": "PUSH7",
      "path": "1",
      "statement": 18,
      "value": "0x2386F26FC10000"
    },
    "2142": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2143": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DIV",
      "path": "1"
    },
    "2144": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "fn": "Math.log10",
      "offset": [
        10581,
        10583
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x10"
    },
    "2148": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10583
      ],
      "op": "ADD",
      "path": "1"
    },
    "2149": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2150": {
      "fn": "Math.log10",
      "offset": [
        10624,
        10631
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5F5E100"
    },
    "2155": {
      "fn": "Math.log10",
      "offset": [
        10615,
        10620
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2156": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10615,
        10631
      ],
      "op": "LT",
      "path": "1"
    },
    "2157": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87D"
    },
    "2160": {
      "branch": 34,
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2161": {
      "fn": "Math.log10",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH4",
      "path": "1",
      "statement": 20,
      "value": "0x5F5E100"
    },
    "2166": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2167": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DIV",
      "path": "1"
    },
    "2168": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "fn": "Math.log10",
      "offset": [
        10695,
        10696
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x8"
    },
    "2172": {
      "fn": "Math.log10",
      "offset": [
        10685,
        10696
      ],
      "op": "ADD",
      "path": "1"
    },
    "2173": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2174": {
      "fn": "Math.log10",
      "offset": [
        10737,
        10744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2710"
    },
    "2177": {
      "fn": "Math.log10",
      "offset": [
        10728,
        10733
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2178": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10728,
        10744
      ],
      "op": "LT",
      "path": "1"
    },
    "2179": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x891"
    },
    "2182": {
      "branch": 35,
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2183": {
      "fn": "Math.log10",
      "offset": [
        10773,
        10780
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0x2710"
    },
    "2186": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2187": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DIV",
      "path": "1"
    },
    "2188": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "fn": "Math.log10",
      "offset": [
        10808,
        10809
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x4"
    },
    "2192": {
      "fn": "Math.log10",
      "offset": [
        10798,
        10809
      ],
      "op": "ADD",
      "path": "1"
    },
    "2193": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2194": {
      "fn": "Math.log10",
      "offset": [
        10850,
        10857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2196": {
      "fn": "Math.log10",
      "offset": [
        10841,
        10846
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2197": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10841,
        10857
      ],
      "op": "LT",
      "path": "1"
    },
    "2198": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A3"
    },
    "2201": {
      "branch": 36,
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2202": {
      "fn": "Math.log10",
      "offset": [
        10886,
        10893
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x64"
    },
    "2204": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2205": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DIV",
      "path": "1"
    },
    "2206": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "fn": "Math.log10",
      "offset": [
        10921,
        10922
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x2"
    },
    "2210": {
      "fn": "Math.log10",
      "offset": [
        10911,
        10922
      ],
      "op": "ADD",
      "path": "1"
    },
    "2211": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2212": {
      "fn": "Math.log10",
      "offset": [
        10963,
        10970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2214": {
      "fn": "Math.log10",
      "offset": [
        10954,
        10959
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2215": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10954,
        10970
      ],
      "op": "LT",
      "path": "1"
    },
    "2216": {
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6CF"
    },
    "2219": {
      "branch": 37,
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2220": {
      "fn": "Math.log10",
      "offset": [
        11000,
        11001
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x1"
    },
    "2222": {
      "fn": "Math.log10",
      "offset": [
        10990,
        11001
      ],
      "op": "ADD",
      "path": "1"
    },
    "2223": {
      "fn": "Math.log10",
      "offset": [
        11042,
        11048
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 27
    },
    "2224": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "op": "POP"
    },
    "2227": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2228": {
      "op": "JUMPDEST"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "DUP5"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "op": "SLT"
    },
    "2237": {
      "op": "ISZERO"
    },
    "2238": {
      "op": "PUSH2",
      "value": "0x8C6"
    },
    "2241": {
      "op": "JUMPI"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2244": {
      "op": "DUP1"
    },
    "2245": {
      "op": "REVERT"
    },
    "2246": {
      "op": "JUMPDEST"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "op": "CALLDATALOAD"
    },
    "2249": {
      "op": "SWAP2"
    },
    "2250": {
      "op": "SWAP1"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "jump": "o",
      "op": "JUMP"
    },
    "2253": {
      "op": "JUMPDEST"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2256": {
      "op": "JUMPDEST"
    },
    "2257": {
      "op": "DUP4"
    },
    "2258": {
      "op": "DUP2"
    },
    "2259": {
      "op": "LT"
    },
    "2260": {
      "op": "ISZERO"
    },
    "2261": {
      "op": "PUSH2",
      "value": "0x8E8"
    },
    "2264": {
      "op": "JUMPI"
    },
    "2265": {
      "op": "DUP2"
    },
    "2266": {
      "op": "DUP2"
    },
    "2267": {
      "op": "ADD"
    },
    "2268": {
      "op": "MLOAD"
    },
    "2269": {
      "op": "DUP4"
    },
    "2270": {
      "op": "DUP3"
    },
    "2271": {
      "op": "ADD"
    },
    "2272": {
      "op": "MSTORE"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "PUSH2",
      "value": "0x8D0"
    },
    "2279": {
      "op": "JUMP"
    },
    "2280": {
      "op": "JUMPDEST"
    },
    "2281": {
      "op": "POP"
    },
    "2282": {
      "op": "POP"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2285": {
      "op": "SWAP2"
    },
    "2286": {
      "op": "ADD"
    },
    "2287": {
      "op": "MSTORE"
    },
    "2288": {
      "jump": "o",
      "op": "JUMP"
    },
    "2289": {
      "op": "JUMPDEST"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2292": {
      "op": "DUP2"
    },
    "2293": {
      "op": "MLOAD"
    },
    "2294": {
      "op": "DUP1"
    },
    "2295": {
      "op": "DUP5"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH2",
      "value": "0x909"
    },
    "2300": {
      "op": "DUP2"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2303": {
      "op": "DUP7"
    },
    "2304": {
      "op": "ADD"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2307": {
      "op": "DUP7"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2312": {
      "jump": "i",
      "op": "JUMP"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2319": {
      "op": "NOT"
    },
    "2320": {
      "op": "AND"
    },
    "2321": {
      "op": "SWAP3"
    },
    "2322": {
      "op": "SWAP1"
    },
    "2323": {
      "op": "SWAP3"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "SWAP3"
    },
    "2329": {
      "op": "SWAP2"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "jump": "o",
      "op": "JUMP"
    },
    "2333": {
      "op": "JUMPDEST"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "op": "DUP2"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2340": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2345": {
      "op": "DUP4"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "DUP5"
    },
    "2348": {
      "op": "PUSH2",
      "value": "0x8F1"
    },
    "2351": {
      "jump": "i",
      "op": "JUMP"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "SWAP4"
    },
    "2354": {
      "op": "SWAP3"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "op": "POP"
    },
    "2358": {
      "jump": "o",
      "op": "JUMP"
    },
    "2359": {
      "op": "JUMPDEST"
    },
    "2360": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2380": {
      "op": "REVERT"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2393": {
      "op": "DUP1"
    },
    "2394": {
      "op": "DUP5"
    },
    "2395": {
      "op": "GT"
    },
    "2396": {
      "op": "ISZERO"
    },
    "2397": {
      "op": "PUSH2",
      "value": "0x968"
    },
    "2400": {
      "op": "JUMPI"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x968"
    },
    "2404": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "2407": {
      "jump": "i",
      "op": "JUMP"
    },
    "2408": {
      "op": "JUMPDEST"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2411": {
      "op": "MLOAD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2414": {
      "op": "DUP6"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2418": {
      "op": "NOT"
    },
    "2419": {
      "op": "SWAP1"
    },
    "2420": {
      "op": "DUP2"
    },
    "2421": {
      "op": "AND"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "AND"
    },
    "2426": {
      "op": "DUP2"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "SWAP1"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "DUP3"
    },
    "2431": {
      "op": "GT"
    },
    "2432": {
      "op": "DUP2"
    },
    "2433": {
      "op": "DUP4"
    },
    "2434": {
      "op": "LT"
    },
    "2435": {
      "op": "OR"
    },
    "2436": {
      "op": "ISZERO"
    },
    "2437": {
      "op": "PUSH2",
      "value": "0x990"
    },
    "2440": {
      "op": "JUMPI"
    },
    "2441": {
      "op": "PUSH2",
      "value": "0x990"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "2447": {
      "jump": "i",
      "op": "JUMP"
    },
    "2448": {
      "op": "JUMPDEST"
    },
    "2449": {
      "op": "DUP2"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2452": {
      "op": "MSTORE"
    },
    "2453": {
      "op": "DUP1"
    },
    "2454": {
      "op": "SWAP4"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "DUP6"
    },
    "2457": {
      "op": "DUP2"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "DUP7"
    },
    "2460": {
      "op": "DUP7"
    },
    "2461": {
      "op": "DUP7"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "op": "GT"
    },
    "2464": {
      "op": "ISZERO"
    },
    "2465": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "2468": {
      "op": "JUMPI"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2471": {
      "op": "DUP1"
    },
    "2472": {
      "op": "REVERT"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "DUP6"
    },
    "2475": {
      "op": "DUP6"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2478": {
      "op": "DUP4"
    },
    "2479": {
      "op": "ADD"
    },
    "2480": {
      "op": "CALLDATACOPY"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2485": {
      "op": "DUP8"
    },
    "2486": {
      "op": "DUP4"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "op": "MSTORE"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "op": "SWAP4"
    },
    "2494": {
      "op": "SWAP3"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "POP"
    },
    "2498": {
      "jump": "o",
      "op": "JUMP"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2502": {
      "op": "DUP3"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2505": {
      "op": "DUP4"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "SLT"
    },
    "2508": {
      "op": "PUSH2",
      "value": "0x9D4"
    },
    "2511": {
      "op": "JUMPI"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2514": {
      "op": "DUP1"
    },
    "2515": {
      "op": "REVERT"
    },
    "2516": {
      "op": "JUMPDEST"
    },
    "2517": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2520": {
      "op": "DUP4"
    },
    "2521": {
      "op": "DUP4"
    },
    "2522": {
      "op": "CALLDATALOAD"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2525": {
      "op": "DUP6"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2530": {
      "jump": "i",
      "op": "JUMP"
    },
    "2531": {
      "op": "JUMPDEST"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2534": {
      "op": "DUP1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2539": {
      "op": "DUP5"
    },
    "2540": {
      "op": "DUP7"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "op": "SLT"
    },
    "2543": {
      "op": "ISZERO"
    },
    "2544": {
      "op": "PUSH2",
      "value": "0x9F8"
    },
    "2547": {
      "op": "JUMPI"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2550": {
      "op": "DUP1"
    },
    "2551": {
      "op": "REVERT"
    },
    "2552": {
      "op": "JUMPDEST"
    },
    "2553": {
      "op": "DUP4"
    },
    "2554": {
      "op": "CALLDATALOAD"
    },
    "2555": {
      "op": "SWAP3"
    },
    "2556": {
      "op": "POP"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2559": {
      "op": "DUP5"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "CALLDATALOAD"
    },
    "2562": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2571": {
      "op": "DUP2"
    },
    "2572": {
      "op": "GT"
    },
    "2573": {
      "op": "ISZERO"
    },
    "2574": {
      "op": "PUSH2",
      "value": "0xA16"
    },
    "2577": {
      "op": "JUMPI"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2580": {
      "op": "DUP1"
    },
    "2581": {
      "op": "REVERT"
    },
    "2582": {
      "op": "JUMPDEST"
    },
    "2583": {
      "op": "PUSH2",
      "value": "0xA22"
    },
    "2586": {
      "op": "DUP7"
    },
    "2587": {
      "op": "DUP3"
    },
    "2588": {
      "op": "DUP8"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2593": {
      "jump": "i",
      "op": "JUMP"
    },
    "2594": {
      "op": "JUMPDEST"
    },
    "2595": {
      "op": "SWAP3"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2600": {
      "op": "DUP5"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "CALLDATALOAD"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "SWAP3"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "SWAP3"
    },
    "2608": {
      "op": "POP"
    },
    "2609": {
      "op": "SWAP3"
    },
    "2610": {
      "jump": "o",
      "op": "JUMP"
    },
    "2611": {
      "op": "JUMPDEST"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2614": {
      "op": "DUP1"
    },
    "2615": {
      "op": "DUP4"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2618": {
      "op": "DUP5"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "SLT"
    },
    "2621": {
      "op": "PUSH2",
      "value": "0xA45"
    },
    "2624": {
      "op": "JUMPI"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2627": {
      "op": "DUP1"
    },
    "2628": {
      "op": "REVERT"
    },
    "2629": {
      "op": "JUMPDEST"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "op": "DUP2"
    },
    "2632": {
      "op": "CALLDATALOAD"
    },
    "2633": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2642": {
      "op": "DUP2"
    },
    "2643": {
      "op": "GT"
    },
    "2644": {
      "op": "ISZERO"
    },
    "2645": {
      "op": "PUSH2",
      "value": "0xA5D"
    },
    "2648": {
      "op": "JUMPI"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2651": {
      "op": "DUP1"
    },
    "2652": {
      "op": "REVERT"
    },
    "2653": {
      "op": "JUMPDEST"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2656": {
      "op": "DUP4"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "SWAP2"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "op": "DUP4"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2663": {
      "op": "DUP3"
    },
    "2664": {
      "op": "DUP6"
    },
    "2665": {
      "op": "ADD"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "op": "GT"
    },
    "2668": {
      "op": "ISZERO"
    },
    "2669": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "2672": {
      "op": "JUMPI"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2675": {
      "op": "DUP1"
    },
    "2676": {
      "op": "REVERT"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "SWAP3"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "op": "SWAP3"
    },
    "2681": {
      "op": "SWAP1"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "jump": "o",
      "op": "JUMP"
    },
    "2684": {
      "op": "JUMPDEST"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2687": {
      "op": "DUP1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2690": {
      "op": "DUP1"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2693": {
      "op": "DUP6"
    },
    "2694": {
      "op": "DUP8"
    },
    "2695": {
      "op": "SUB"
    },
    "2696": {
      "op": "SLT"
    },
    "2697": {
      "op": "ISZERO"
    },
    "2698": {
      "op": "PUSH2",
      "value": "0xA92"
    },
    "2701": {
      "op": "JUMPI"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2704": {
      "op": "DUP1"
    },
    "2705": {
      "op": "REVERT"
    },
    "2706": {
      "op": "JUMPDEST"
    },
    "2707": {
      "op": "DUP5"
    },
    "2708": {
      "op": "CALLDATALOAD"
    },
    "2709": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2718": {
      "op": "DUP1"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "GT"
    },
    "2721": {
      "op": "ISZERO"
    },
    "2722": {
      "op": "PUSH2",
      "value": "0xAAA"
    },
    "2725": {
      "op": "JUMPI"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2728": {
      "op": "DUP1"
    },
    "2729": {
      "op": "REVERT"
    },
    "2730": {
      "op": "JUMPDEST"
    },
    "2731": {
      "op": "PUSH2",
      "value": "0xAB6"
    },
    "2734": {
      "op": "DUP9"
    },
    "2735": {
      "op": "DUP4"
    },
    "2736": {
      "op": "DUP10"
    },
    "2737": {
      "op": "ADD"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2741": {
      "jump": "i",
      "op": "JUMP"
    },
    "2742": {
      "op": "JUMPDEST"
    },
    "2743": {
      "op": "SWAP1"
    },
    "2744": {
      "op": "SWAP7"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "op": "SWAP5"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2750": {
      "op": "DUP8"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "CALLDATALOAD"
    },
    "2753": {
      "op": "SWAP2"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "op": "DUP1"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "GT"
    },
    "2758": {
      "op": "ISZERO"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2762": {
      "op": "JUMPI"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2765": {
      "op": "DUP1"
    },
    "2766": {
      "op": "REVERT"
    },
    "2767": {
      "op": "JUMPDEST"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "PUSH2",
      "value": "0xADC"
    },
    "2772": {
      "op": "DUP8"
    },
    "2773": {
      "op": "DUP3"
    },
    "2774": {
      "op": "DUP9"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2779": {
      "jump": "i",
      "op": "JUMP"
    },
    "2780": {
      "op": "JUMPDEST"
    },
    "2781": {
      "op": "SWAP6"
    },
    "2782": {
      "op": "SWAP9"
    },
    "2783": {
      "op": "SWAP5"
    },
    "2784": {
      "op": "SWAP8"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "SWAP6"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "jump": "o",
      "op": "JUMP"
    },
    "2792": {
      "op": "JUMPDEST"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "DUP1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2798": {
      "op": "DUP4"
    },
    "2799": {
      "op": "DUP6"
    },
    "2800": {
      "op": "SUB"
    },
    "2801": {
      "op": "SLT"
    },
    "2802": {
      "op": "ISZERO"
    },
    "2803": {
      "op": "PUSH2",
      "value": "0xAFB"
    },
    "2806": {
      "op": "JUMPI"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2809": {
      "op": "DUP1"
    },
    "2810": {
      "op": "REVERT"
    },
    "2811": {
      "op": "JUMPDEST"
    },
    "2812": {
      "op": "DUP3"
    },
    "2813": {
      "op": "CALLDATALOAD"
    },
    "2814": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2823": {
      "op": "DUP2"
    },
    "2824": {
      "op": "GT"
    },
    "2825": {
      "op": "ISZERO"
    },
    "2826": {
      "op": "PUSH2",
      "value": "0xB12"
    },
    "2829": {
      "op": "JUMPI"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2832": {
      "op": "DUP1"
    },
    "2833": {
      "op": "REVERT"
    },
    "2834": {
      "op": "JUMPDEST"
    },
    "2835": {
      "op": "PUSH2",
      "value": "0xB1E"
    },
    "2838": {
      "op": "DUP6"
    },
    "2839": {
      "op": "DUP3"
    },
    "2840": {
      "op": "DUP7"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2845": {
      "jump": "i",
      "op": "JUMP"
    },
    "2846": {
      "op": "JUMPDEST"
    },
    "2847": {
      "op": "SWAP1"
    },
    "2848": {
      "op": "SWAP7"
    },
    "2849": {
      "op": "SWAP1"
    },
    "2850": {
      "op": "SWAP6"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "op": "SWAP4"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "op": "POP"
    },
    "2856": {
      "op": "POP"
    },
    "2857": {
      "jump": "o",
      "op": "JUMP"
    },
    "2858": {
      "op": "JUMPDEST"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2861": {
      "op": "DUP1"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2866": {
      "op": "SWAP1"
    },
    "2867": {
      "op": "DUP3"
    },
    "2868": {
      "op": "ADD"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2905": {
      "op": "DUP3"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "op": "MSTORE"
    },
    "2908": {
      "op": "PUSH8",
      "value": "0x6F776E6572202121"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2922": {
      "op": "DUP3"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "op": "MSTORE"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2927": {
      "op": "ADD"
    },
    "2928": {
      "op": "SWAP1"
    },
    "2929": {
      "jump": "o",
      "op": "JUMP"
    },
    "2930": {
      "op": "JUMPDEST"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2935": {
      "op": "DUP3"
    },
    "2936": {
      "op": "DUP5"
    },
    "2937": {
      "op": "SUB"
    },
    "2938": {
      "op": "SLT"
    },
    "2939": {
      "op": "ISZERO"
    },
    "2940": {
      "op": "PUSH2",
      "value": "0xB84"
    },
    "2943": {
      "op": "JUMPI"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "REVERT"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "DUP2"
    },
    "2950": {
      "op": "MLOAD"
    },
    "2951": {
      "op": "DUP1"
    },
    "2952": {
      "op": "ISZERO"
    },
    "2953": {
      "op": "ISZERO"
    },
    "2954": {
      "op": "DUP2"
    },
    "2955": {
      "op": "EQ"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2959": {
      "op": "JUMPI"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "REVERT"
    },
    "2964": {
      "op": "JUMPDEST"
    },
    "2965": {
      "op": "DUP1"
    },
    "2966": {
      "op": "DUP3"
    },
    "2967": {
      "op": "ADD"
    },
    "2968": {
      "op": "DUP1"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "GT"
    },
    "2971": {
      "op": "ISZERO"
    },
    "2972": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "2975": {
      "op": "JUMPI"
    },
    "2976": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2996": {
      "op": "REVERT"
    },
    "2997": {
      "op": "JUMPDEST"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3000": {
      "op": "DUP2"
    },
    "3001": {
      "op": "MSTORE"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3004": {
      "op": "PUSH2",
      "value": "0xBC8"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3009": {
      "op": "DUP4"
    },
    "3010": {
      "op": "ADD"
    },
    "3011": {
      "op": "DUP6"
    },
    "3012": {
      "op": "PUSH2",
      "value": "0x8F1"
    },
    "3015": {
      "jump": "i",
      "op": "JUMP"
    },
    "3016": {
      "op": "JUMPDEST"
    },
    "3017": {
      "op": "SWAP1"
    },
    "3018": {
      "op": "POP"
    },
    "3019": {
      "op": "DUP3"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3022": {
      "op": "DUP4"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "op": "MSTORE"
    },
    "3025": {
      "op": "SWAP4"
    },
    "3026": {
      "op": "SWAP3"
    },
    "3027": {
      "op": "POP"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "POP"
    },
    "3030": {
      "jump": "o",
      "op": "JUMP"
    },
    "3031": {
      "op": "JUMPDEST"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3036": {
      "op": "DUP3"
    },
    "3037": {
      "op": "DUP5"
    },
    "3038": {
      "op": "SUB"
    },
    "3039": {
      "op": "SLT"
    },
    "3040": {
      "op": "ISZERO"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3044": {
      "op": "JUMPI"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3047": {
      "op": "DUP1"
    },
    "3048": {
      "op": "REVERT"
    },
    "3049": {
      "op": "JUMPDEST"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "op": "MLOAD"
    },
    "3052": {
      "op": "SWAP2"
    },
    "3053": {
      "op": "SWAP1"
    },
    "3054": {
      "op": "POP"
    },
    "3055": {
      "jump": "o",
      "op": "JUMP"
    },
    "3056": {
      "op": "JUMPDEST"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "DUP5"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "op": "SLT"
    },
    "3065": {
      "op": "ISZERO"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC02"
    },
    "3069": {
      "op": "JUMPI"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "REVERT"
    },
    "3074": {
      "op": "JUMPDEST"
    },
    "3075": {
      "op": "DUP2"
    },
    "3076": {
      "op": "CALLDATALOAD"
    },
    "3077": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3086": {
      "op": "DUP1"
    },
    "3087": {
      "op": "DUP3"
    },
    "3088": {
      "op": "GT"
    },
    "3089": {
      "op": "ISZERO"
    },
    "3090": {
      "op": "PUSH2",
      "value": "0xC1A"
    },
    "3093": {
      "op": "JUMPI"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3096": {
      "op": "DUP1"
    },
    "3097": {
      "op": "REVERT"
    },
    "3098": {
      "op": "JUMPDEST"
    },
    "3099": {
      "op": "SWAP1"
    },
    "3100": {
      "op": "DUP4"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "op": "SWAP1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3105": {
      "op": "DUP3"
    },
    "3106": {
      "op": "DUP7"
    },
    "3107": {
      "op": "SUB"
    },
    "3108": {
      "op": "SLT"
    },
    "3109": {
      "op": "ISZERO"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0xC2E"
    },
    "3113": {
      "op": "JUMPI"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3116": {
      "op": "DUP1"
    },
    "3117": {
      "op": "REVERT"
    },
    "3118": {
      "op": "JUMPDEST"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3121": {
      "op": "MLOAD"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "DUP2"
    },
    "3127": {
      "op": "DUP2"
    },
    "3128": {
      "op": "LT"
    },
    "3129": {
      "op": "DUP4"
    },
    "3130": {
      "op": "DUP3"
    },
    "3131": {
      "op": "GT"
    },
    "3132": {
      "op": "OR"
    },
    "3133": {
      "op": "ISZERO"
    },
    "3134": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3137": {
      "op": "JUMPI"
    },
    "3138": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "3144": {
      "jump": "i",
      "op": "JUMP"
    },
    "3145": {
      "op": "JUMPDEST"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3148": {
      "op": "MSTORE"
    },
    "3149": {
      "op": "DUP3"
    },
    "3150": {
      "op": "CALLDATALOAD"
    },
    "3151": {
      "op": "DUP3"
    },
    "3152": {
      "op": "DUP2"
    },
    "3153": {
      "op": "GT"
    },
    "3154": {
      "op": "ISZERO"
    },
    "3155": {
      "op": "PUSH2",
      "value": "0xC5B"
    },
    "3158": {
      "op": "JUMPI"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3161": {
      "op": "DUP1"
    },
    "3162": {
      "op": "REVERT"
    },
    "3163": {
      "op": "JUMPDEST"
    },
    "3164": {
      "op": "DUP1"
    },
    "3165": {
      "op": "DUP5"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "SWAP4"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "op": "DUP6"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3173": {
      "op": "DUP5"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "op": "SLT"
    },
    "3176": {
      "op": "PUSH2",
      "value": "0xC70"
    },
    "3179": {
      "op": "JUMPI"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3182": {
      "op": "DUP1"
    },
    "3183": {
      "op": "REVERT"
    },
    "3184": {
      "op": "JUMPDEST"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3188": {
      "op": "DUP7"
    },
    "3189": {
      "op": "DUP5"
    },
    "3190": {
      "op": "CALLDATALOAD"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3193": {
      "op": "DUP7"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "3198": {
      "jump": "i",
      "op": "JUMP"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "DUP2"
    },
    "3201": {
      "op": "MSTORE"
    },
    "3202": {
      "op": "SWAP6"
    },
    "3203": {
      "op": "SWAP5"
    },
    "3204": {
      "op": "POP"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "op": "POP"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "jump": "o",
      "op": "JUMP"
    },
    "3210": {
      "op": "JUMPDEST"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3215": {
      "op": "DUP3"
    },
    "3216": {
      "op": "DUP5"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "op": "SLT"
    },
    "3219": {
      "op": "ISZERO"
    },
    "3220": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "3223": {
      "op": "JUMPI"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3226": {
      "op": "DUP1"
    },
    "3227": {
      "op": "REVERT"
    },
    "3228": {
      "op": "JUMPDEST"
    },
    "3229": {
      "op": "DUP2"
    },
    "3230": {
      "op": "CALLDATALOAD"
    },
    "3231": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3240": {
      "op": "DUP1"
    },
    "3241": {
      "op": "DUP3"
    },
    "3242": {
      "op": "GT"
    },
    "3243": {
      "op": "ISZERO"
    },
    "3244": {
      "op": "PUSH2",
      "value": "0xCB4"
    },
    "3247": {
      "op": "JUMPI"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3250": {
      "op": "DUP1"
    },
    "3251": {
      "op": "REVERT"
    },
    "3252": {
      "op": "JUMPDEST"
    },
    "3253": {
      "op": "SWAP1"
    },
    "3254": {
      "op": "DUP4"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "SWAP1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3259": {
      "op": "DUP3"
    },
    "3260": {
      "op": "DUP7"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "op": "SLT"
    },
    "3263": {
      "op": "ISZERO"
    },
    "3264": {
      "op": "PUSH2",
      "value": "0xCC8"
    },
    "3267": {
      "op": "JUMPI"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3270": {
      "op": "DUP1"
    },
    "3271": {
      "op": "REVERT"
    },
    "3272": {
      "op": "JUMPDEST"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3275": {
      "op": "MLOAD"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3278": {
      "op": "DUP2"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "DUP2"
    },
    "3281": {
      "op": "DUP2"
    },
    "3282": {
      "op": "LT"
    },
    "3283": {
      "op": "DUP4"
    },
    "3284": {
      "op": "DUP3"
    },
    "3285": {
      "op": "GT"
    },
    "3286": {
      "op": "OR"
    },
    "3287": {
      "op": "ISZERO"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCE3"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "PUSH2",
      "value": "0xCE3"
    },
    "3295": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "3298": {
      "jump": "i",
      "op": "JUMP"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "DUP3"
    },
    "3304": {
      "op": "CALLDATALOAD"
    },
    "3305": {
      "op": "DUP3"
    },
    "3306": {
      "op": "DUP2"
    },
    "3307": {
      "op": "GT"
    },
    "3308": {
      "op": "ISZERO"
    },
    "3309": {
      "op": "PUSH2",
      "value": "0xCF5"
    },
    "3312": {
      "op": "JUMPI"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "DUP1"
    },
    "3316": {
      "op": "REVERT"
    },
    "3317": {
      "op": "JUMPDEST"
    },
    "3318": {
      "op": "PUSH2",
      "value": "0xD01"
    },
    "3321": {
      "op": "DUP8"
    },
    "3322": {
      "op": "DUP3"
    },
    "3323": {
      "op": "DUP7"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "3328": {
      "jump": "i",
      "op": "JUMP"
    },
    "3329": {
      "op": "JUMPDEST"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "MSTORE"
    },
    "3332": {
      "op": "POP"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3335": {
      "op": "DUP4"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "op": "CALLDATALOAD"
    },
    "3338": {
      "op": "DUP3"
    },
    "3339": {
      "op": "DUP2"
    },
    "3340": {
      "op": "GT"
    },
    "3341": {
      "op": "ISZERO"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "3345": {
      "op": "JUMPI"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3348": {
      "op": "DUP1"
    },
    "3349": {
      "op": "REVERT"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xD22"
    },
    "3354": {
      "op": "DUP8"
    },
    "3355": {
      "op": "DUP3"
    },
    "3356": {
      "op": "DUP7"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "3361": {
      "jump": "i",
      "op": "JUMP"
    },
    "3362": {
      "op": "JUMPDEST"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "op": "MSTORE"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "op": "SWAP6"
    },
    "3370": {
      "op": "SWAP5"
    },
    "3371": {
      "op": "POP"
    },
    "3372": {
      "op": "POP"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "jump": "o",
      "op": "JUMP"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3382": {
      "op": "DUP3"
    },
    "3383": {
      "op": "DUP5"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "op": "SLT"
    },
    "3386": {
      "op": "ISZERO"
    },
    "3387": {
      "op": "PUSH2",
      "value": "0xD43"
    },
    "3390": {
      "op": "JUMPI"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "DUP1"
    },
    "3394": {
      "op": "REVERT"
    },
    "3395": {
      "op": "JUMPDEST"
    },
    "3396": {
      "op": "DUP2"
    },
    "3397": {
      "op": "MLOAD"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "SUB"
    },
    "3406": {
      "op": "DUP2"
    },
    "3407": {
      "op": "AND"
    },
    "3408": {
      "op": "DUP2"
    },
    "3409": {
      "op": "EQ"
    },
    "3410": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "3413": {
      "op": "JUMPI"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3416": {
      "op": "DUP1"
    },
    "3417": {
      "op": "REVERT"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A000000000000"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3456": {
      "op": "DUP4"
    },
    "3457": {
      "op": "MLOAD"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3464": {
      "op": "DUP6"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3468": {
      "op": "DUP9"
    },
    "3469": {
      "op": "ADD"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "3473": {
      "jump": "i",
      "op": "JUMP"
    },
    "3474": {
      "op": "JUMPDEST"
    },
    "3475": {
      "op": "DUP4"
    },
    "3476": {
      "op": "MLOAD"
    },
    "3477": {
      "op": "SWAP1"
    },
    "3478": {
      "op": "DUP4"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "SWAP1"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3484": {
      "op": "DUP2"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3487": {
      "op": "DUP5"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3491": {
      "op": "DUP9"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "3496": {
      "jump": "i",
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "ADD"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "SWAP5"
    },
    "3503": {
      "op": "SWAP4"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8ba27290ca1e7443fc2521b5ce03144013f2b7d9",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./APIProvider.sol\";\nimport \"./BaseClient.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n\nstruct Input {\n    string apiIdentifier;\n}\n\nstruct APIResponse {\n    bytes response;\n    bytes signature;\n}\n\ncontract APIConsumer is BaseClient {\n\n    APIProvider public provider;\n    \n    constructor(address brokerAddress, address apiProviderAddress) BaseClient(brokerAddress) {\n        provider = APIProvider(apiProviderAddress);\n    }\n\n    function checkResult(bytes calldata inputData, bytes calldata resultData) external override view returns (bool) {\n        Input memory input = abi.decode(inputData, (Input));\n        APIResponse memory apiResponse = abi.decode(resultData, (APIResponse));\n        return _verifySignature(apiResponse, provider.getAddress(input.apiIdentifier));\n    }\n    \n    function getInputDataStructure() external override pure returns (string memory) {\n        return \"{string apiIdentifier;}\";\n    }\n\n    function _verifySignature(APIResponse memory apiResponse, address signer) private pure returns (bool) {\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(apiResponse.response.length), apiResponse.response));\n        (bytes32 r, bytes32 s, uint8 v) = _splitSignature(apiResponse.signature);\n        return (ecrecover(prefixedHash, v, r, s) == signer);\n    }\n\n    function _splitSignature(bytes memory signature) private pure returns (bytes32 r, bytes32 s, uint8 v) {\n        require(signature.length == 65, \"invalid signature length\");\n        assembly {\n            r := mload(add(signature, 32))\n            s := mload(add(signature, 64))\n            v := byte(0, mload(add(signature, 96)))\n        }\n    }\n\n}",
  "sourceMap": "289:1496:3:-:0;;;369:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;237:6:7;:19;;-1:-1:-1;;;;;;237:19:7;;;246:10;237:19;;;;;477:47:5;;-1:-1:-1;;;;;477:47:5;;::::1;::::0;;::::1;;::::0;;468:8:3::1;:42:::0;;;;;::::1;::::0;::::1;;::::0;;289:1496;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;289:1496:3;;;;;;",
  "sourcePath": "contracts/APIConsumer.sol",
  "type": "contract"
}