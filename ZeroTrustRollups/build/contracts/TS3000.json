{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brokerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_encryptedDataRefference",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "firstLocalHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "globalHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_minTimeFramePerFragment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fragmentDifficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "keyFullyMined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "requestSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "resultPostProcessed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "brokerContract",
      "outputs": [
        {
          "internalType": "contract ExecutionBroker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encryptedDataRefference",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fragmentDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResultDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keyFragments",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "globalHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "localHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "passcode",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTimeFramePerFragment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "postProcessingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "postProcessingGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "processResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        }
      ],
      "name": "resolveOnChain",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerFragment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "postProcessingGas",
          "type": "uint256"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "submitResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePostProcessing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/BaseClient.sol",
    "2": "contracts/Ownable.sol",
    "3": "contracts/TS3000.sol"
  },
  "ast": {
    "absolutePath": "contracts/TS3000.sol",
    "exportedSymbols": {
      "BaseClient": [
        689
      ],
      "ExecutionBroker": [
        1359
      ],
      "Ownable": [
        1402
      ],
      "Request": [
        713
      ],
      "TS3000": [
        368
      ],
      "Transferable": [
        1486
      ]
    },
    "id": 369,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:3"
      },
      {
        "absolutePath": "contracts/BaseClient.sol",
        "file": "./BaseClient.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 369,
        "sourceUnit": 690,
        "src": "70:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "BaseClient",
              "nameLocations": [
                "118:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 689,
              "src": "118:10:3"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "118:10:3"
          }
        ],
        "canonicalName": "TS3000",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368,
          689,
          1402
        ],
        "name": "TS3000",
        "nameLocation": "108:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TS3000.KeyFragment",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "globalHash",
                "nameLocation": "173:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "165:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 5,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "localHash",
                "nameLocation": "201:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "193:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "passcode",
                "nameLocation": "225:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "220:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "KeyFragment",
            "nameLocation": "143:11:3",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "136:104:3",
            "visibility": "public"
          },
          {
            "canonicalName": "TS3000.Input",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "fragmentIndex",
                "nameLocation": "274:13:3",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "269:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "globalHash",
                "nameLocation": "305:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "297:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 14,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "297:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "localHash",
                "nameLocation": "333:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "325:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 16,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "minTimestamp",
                "nameLocation": "357:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "352:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Input",
            "nameLocation": "253:5:3",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "246:130:3",
            "visibility": "public"
          },
          {
            "canonicalName": "TS3000.Result",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "fragmentIndex",
                "nameLocation": "411:13:3",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "406:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "406:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "timestampRestriction",
                "nameLocation": "439:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "434:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "passcode",
                "nameLocation": "474:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "469:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nameLocation": "389:6:3",
            "nodeType": "StructDefinition",
            "scope": 368,
            "src": "382:107:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd36",
            "id": 29,
            "name": "keyFullyMined",
            "nameLocation": "501:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:3"
            },
            "src": "495:22:3"
          },
          {
            "constant": false,
            "functionSelector": "552b0b83",
            "id": 31,
            "mutability": "mutable",
            "name": "encryptedDataRefference",
            "nameLocation": "537:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "523:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 30,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "523:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7353d891",
            "id": 35,
            "mutability": "mutable",
            "name": "keyFragments",
            "nameLocation": "587:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "566:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
              "typeString": "struct TS3000.KeyFragment[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "KeyFragment",
                  "nameLocations": [
                    "566:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "566:11:3"
                },
                "referencedDeclaration": 11,
                "src": "566:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_KeyFragment_$11_storage_ptr",
                  "typeString": "struct TS3000.KeyFragment"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "566:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage_ptr",
                "typeString": "struct TS3000.KeyFragment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d9e78b8",
            "id": 37,
            "mutability": "mutable",
            "name": "finalKey",
            "nameLocation": "620:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "605:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 36,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f7ef866",
            "id": 39,
            "mutability": "mutable",
            "name": "fragmentDifficulty",
            "nameLocation": "647:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "635:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "635:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d997ebf5",
            "id": 41,
            "mutability": "mutable",
            "name": "rewardPerFragment",
            "nameLocation": "683:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "671:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "671:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "22473385",
            "id": 43,
            "mutability": "mutable",
            "name": "postProcessingGas",
            "nameLocation": "718:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "706:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "706:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ace8e462",
            "id": 45,
            "mutability": "mutable",
            "name": "minTimeFramePerFragment",
            "nameLocation": "753:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "741:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "741:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "015594b8",
            "id": 47,
            "mutability": "mutable",
            "name": "postProcessingEnabled",
            "nameLocation": "794:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "782:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 46,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "782:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1047:991:3",
              "statements": [
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "postProcessingGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1057:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "343030303030",
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1077:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_400000_by_1",
                        "typeString": "int_const 400000"
                      },
                      "value": "400000"
                    },
                    "src": "1057:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:26:3"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "postProcessingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1159:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1183:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1159:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:28:3"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74,
                      "name": "fragmentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1197:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 75,
                      "name": "_fragmentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1218:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1197:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:40:3"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "rewardPerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1247:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1267:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1271:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1267:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 81,
                          "name": "globalHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1279:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1292:6:3",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1279:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1267:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1247:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:51:3"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "encryptedDataRefference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1345:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "_encryptedDataRefference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1371:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1345:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:50:3"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90,
                      "name": "minTimeFramePerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1405:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91,
                      "name": "_minTimeFramePerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1431:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1405:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:50:3"
                },
                {
                  "body": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "1512:238:3",
                    "statements": [
                      {
                        "assignments": [
                          107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 107,
                            "mutability": "mutable",
                            "name": "fragment",
                            "nameLocation": "1545:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 134,
                            "src": "1526:27:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_KeyFragment_$11_memory_ptr",
                              "typeString": "struct TS3000.KeyFragment"
                            },
                            "typeName": {
                              "id": 106,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 105,
                                "name": "KeyFragment",
                                "nameLocations": [
                                  "1526:11:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "1526:11:3"
                              },
                              "referencedDeclaration": 11,
                              "src": "1526:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$11_storage_ptr",
                                "typeString": "struct TS3000.KeyFragment"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 108,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1526:27:3"
                      },
                      {
                        "expression": {
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 109,
                              "name": "fragment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1568:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$11_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1577:10:3",
                            "memberName": "globalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "1568:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 112,
                              "name": "globalHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1590:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 114,
                            "indexExpression": {
                              "id": 113,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "1603:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1590:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1568:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1568:37:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 117,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1623:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1628:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1623:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 127,
                        "nodeType": "IfStatement",
                        "src": "1619:80:3",
                        "trueBody": {
                          "id": 126,
                          "nodeType": "Block",
                          "src": "1631:68:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 120,
                                    "name": "fragment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "1649:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_KeyFragment_$11_memory_ptr",
                                      "typeString": "struct TS3000.KeyFragment memory"
                                    }
                                  },
                                  "id": 122,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "1658:9:3",
                                  "memberName": "localHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8,
                                  "src": "1649:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 123,
                                  "name": "firstLocalHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53,
                                  "src": "1670:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1649:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 125,
                              "nodeType": "ExpressionStatement",
                              "src": "1649:35:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "fragment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1730:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$11_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_KeyFragment_$11_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            ],
                            "expression": {
                              "id": 128,
                              "name": "keyFragments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1712:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                                "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1725:4:3",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1712:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage_ptr_$_t_struct$_KeyFragment_$11_storage_$returns$__$attached_to$_t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TS3000.KeyFragment storage ref[] storage pointer,struct TS3000.KeyFragment storage ref)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "1712:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1482:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 99,
                        "name": "globalHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1486:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1499:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1486:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1482:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135,
                  "initializationExpression": {
                    "assignments": [
                      95
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1475:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1470:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1470:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 97,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1479:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1470:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1507:3:3",
                      "subExpression": {
                        "id": 102,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1507:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 104,
                    "nodeType": "ExpressionStatement",
                    "src": "1507:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1465:285:3"
                },
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "1772:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1759:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                        "typeString": "struct TS3000.Input"
                      },
                      "typeName": {
                        "id": 137,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 136,
                          "name": "Input",
                          "nameLocations": [
                            "1759:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "1759:5:3"
                        },
                        "referencedDeclaration": 20,
                        "src": "1759:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$20_storage_ptr",
                          "typeString": "struct TS3000.Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1815:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "baseExpression": {
                          "id": 141,
                          "name": "globalHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1842:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 143,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1855:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1842:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 144,
                        "name": "firstLocalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1882:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 145,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1924:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1930:9:3",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1924:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 139,
                      "name": "Input",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1780:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Input_$20_storage_ptr_$",
                        "typeString": "type(struct TS3000.Input storage pointer)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1800:13:3",
                      "1830:10:3",
                      "1871:9:3",
                      "1910:12:3"
                    ],
                    "names": [
                      "fragmentIndex",
                      "globalHash",
                      "localHash",
                      "minTimestamp"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1780:170:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                      "typeString": "struct TS3000.Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1759:191:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 150,
                        "name": "rewardPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1975:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 153,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2005:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                              "typeString": "struct TS3000.Input memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                              "typeString": "struct TS3000.Input memory"
                            }
                          ],
                          "expression": {
                            "id": 151,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1994:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1998:6:3",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1994:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 155,
                        "name": "postProcessingGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2013:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 149,
                      "name": "_submitRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "1960:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:71:3"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 63,
                    "name": "brokerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "1024:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 64,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 62,
                  "name": "BaseClient",
                  "nameLocations": [
                    "1013:10:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 689,
                  "src": "1013:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1013:25:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "brokerAddress",
                  "nameLocation": "846:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "838:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_encryptedDataRefference",
                  "nameLocation": "875:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "861:38:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "firstLocalHash",
                  "nameLocation": "909:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "901:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "globalHashes",
                  "nameLocation": "942:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "925:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "925:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 55,
                    "nodeType": "ArrayTypeName",
                    "src": "925:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_minTimeFramePerFragment",
                  "nameLocation": "961:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "956:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_fragmentDifficulty",
                  "nameLocation": "992:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "987:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:175:3"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:3"
            },
            "scope": 368,
            "src": "826:1212:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              429
            ],
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "2156:383:3",
              "statements": [
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "2179:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "2166:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                        "typeString": "struct TS3000.Input"
                      },
                      "typeName": {
                        "id": 170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 169,
                          "name": "Input",
                          "nameLocations": [
                            "2166:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "2166:5:3"
                        },
                        "referencedDeclaration": 20,
                        "src": "2166:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$20_storage_ptr",
                          "typeString": "struct TS3000.Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 174,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2198:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 175,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2210:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$20_storage_ptr_$",
                              "typeString": "type(struct TS3000.Input storage pointer)"
                            }
                          }
                        ],
                        "id": 176,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2209:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$20_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$20_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 172,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2187:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2191:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2187:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                      "typeString": "struct TS3000.Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2166:51:3"
                },
                {
                  "assignments": [
                    181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2241:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "2227:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                        "typeString": "struct TS3000.Result"
                      },
                      "typeName": {
                        "id": 180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 179,
                          "name": "Result",
                          "nameLocations": [
                            "2227:6:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "2227:6:3"
                        },
                        "referencedDeclaration": 27,
                        "src": "2227:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$27_storage_ptr",
                          "typeString": "struct TS3000.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2261:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 185,
                            "name": "Result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2274:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                              "typeString": "type(struct TS3000.Result storage pointer)"
                            }
                          }
                        ],
                        "id": 186,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2273:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 182,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2250:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2254:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2250:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                      "typeString": "struct TS3000.Result memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:55:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 189,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 171,
                                  "src": "2300:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                    "typeString": "struct TS3000.Input memory"
                                  }
                                },
                                "id": 190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2306:12:3",
                                "memberName": "minTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "2300:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 191,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "2322:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                    "typeString": "struct TS3000.Result memory"
                                  }
                                },
                                "id": 192,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2329:20:3",
                                "memberName": "timestampRestriction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24,
                                "src": "2322:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2300:49:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 194,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2299:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 195,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2355:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2361:9:3",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2355:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 197,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "2374:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                    "typeString": "struct TS3000.Result memory"
                                  }
                                },
                                "id": 198,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2381:20:3",
                                "memberName": "timestampRestriction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24,
                                "src": "2374:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2355:46:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 200,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2354:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2299:103:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 202,
                                "name": "input",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "2407:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                  "typeString": "struct TS3000.Input memory"
                                }
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2413:13:3",
                              "memberName": "fragmentIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "2407:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 204,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 181,
                                "src": "2430:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                  "typeString": "struct TS3000.Result memory"
                                }
                              },
                              "id": 205,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2437:13:3",
                              "memberName": "fragmentIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "2430:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2407:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 207,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2406:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2299:152:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 212,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 181,
                                      "src": "2477:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 213,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2484:8:3",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "2477:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 214,
                                      "name": "input",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 171,
                                      "src": "2494:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                        "typeString": "struct TS3000.Input memory"
                                      }
                                    },
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2500:9:3",
                                    "memberName": "localHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17,
                                    "src": "2494:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 210,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2466:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2470:6:3",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2466:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2466:44:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 209,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2456:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2456:55:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 218,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "2515:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                "typeString": "struct TS3000.Input memory"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2521:10:3",
                            "memberName": "globalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "2515:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2456:75:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2455:77:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2299:233:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 168,
                  "id": 223,
                  "nodeType": "Return",
                  "src": "2292:240:3"
                }
              ]
            },
            "functionSelector": "c91c7b37",
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkResult",
            "nameLocation": "2053:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2127:8:3"
            },
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "2080:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2065:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "2106:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2091:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:53:3"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2150:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2149:6:3"
            },
            "scope": 368,
            "src": "2044:495:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              447
            ],
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "2622:1296:3",
              "statements": [
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2987:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "2973:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                        "typeString": "struct TS3000.Result"
                      },
                      "typeName": {
                        "id": 234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 233,
                          "name": "Result",
                          "nameLocations": [
                            "2973:6:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "2973:6:3"
                        },
                        "referencedDeclaration": 27,
                        "src": "2973:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$27_storage_ptr",
                          "typeString": "struct TS3000.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 242,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3007:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 239,
                            "name": "Result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3020:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                              "typeString": "type(struct TS3000.Result storage pointer)"
                            }
                          }
                        ],
                        "id": 240,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3019:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Result_$27_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 236,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2996:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3000:6:3",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2996:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                      "typeString": "struct TS3000.Result memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2973:55:3"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 243,
                          "name": "keyFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "3038:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                            "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "expression": {
                            "id": 244,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "3051:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                              "typeString": "struct TS3000.Result memory"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3058:13:3",
                          "memberName": "fragmentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "3051:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3038:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_KeyFragment_$11_storage",
                          "typeString": "struct TS3000.KeyFragment storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3073:8:3",
                      "memberName": "passcode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3038:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3084:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3091:8:3",
                      "memberName": "passcode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3084:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3038:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:61:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 252,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3113:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3120:13:3",
                      "memberName": "fragmentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "3113:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 254,
                          "name": "keyFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "3137:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                            "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3150:6:3",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3137:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3159:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3137:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3113:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "3276:636:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 273,
                                "name": "keyFragments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "3290:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                                  "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                }
                              },
                              "id": 278,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 274,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 235,
                                    "src": "3303:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                      "typeString": "struct TS3000.Result memory"
                                    }
                                  },
                                  "id": 275,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3310:13:3",
                                  "memberName": "fragmentIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22,
                                  "src": "3303:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3326:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3303:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3290:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$11_storage",
                                "typeString": "struct TS3000.KeyFragment storage ref"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3329:9:3",
                            "memberName": "localHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "3290:48:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 283,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 235,
                                      "src": "3362:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 284,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3369:8:3",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "3362:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 281,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3351:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3355:6:3",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3351:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3351:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 280,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3341:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3341:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3290:89:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "3290:89:3"
                      },
                      {
                        "condition": {
                          "id": 289,
                          "name": "postProcessingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3397:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 328,
                        "nodeType": "IfStatement",
                        "src": "3393:509:3",
                        "trueBody": {
                          "id": 327,
                          "nodeType": "Block",
                          "src": "3420:482:3",
                          "statements": [
                            {
                              "assignments": [
                                292
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 292,
                                  "mutability": "mutable",
                                  "name": "input",
                                  "nameLocation": "3451:5:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 327,
                                  "src": "3438:18:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                    "typeString": "struct TS3000.Input"
                                  },
                                  "typeName": {
                                    "id": 291,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 290,
                                      "name": "Input",
                                      "nameLocations": [
                                        "3438:5:3"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 20,
                                      "src": "3438:5:3"
                                    },
                                    "referencedDeclaration": 20,
                                    "src": "3438:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Input_$20_storage_ptr",
                                      "typeString": "struct TS3000.Input"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 317,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 294,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 235,
                                        "src": "3502:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                          "typeString": "struct TS3000.Result memory"
                                        }
                                      },
                                      "id": 295,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3509:13:3",
                                      "memberName": "fragmentIndex",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "3502:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3525:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3502:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 298,
                                        "name": "keyFragments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35,
                                        "src": "3560:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                                          "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                        }
                                      },
                                      "id": 303,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 299,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 235,
                                            "src": "3573:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                              "typeString": "struct TS3000.Result memory"
                                            }
                                          },
                                          "id": 300,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3580:13:3",
                                          "memberName": "fragmentIndex",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 22,
                                          "src": "3573:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 301,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3596:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3573:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3560:38:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_KeyFragment_$11_storage",
                                        "typeString": "struct TS3000.KeyFragment storage ref"
                                      }
                                    },
                                    "id": 304,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3599:10:3",
                                    "memberName": "globalHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6,
                                    "src": "3560:49:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 305,
                                        "name": "keyFragments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35,
                                        "src": "3642:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_KeyFragment_$11_storage_$dyn_storage",
                                          "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                        }
                                      },
                                      "id": 310,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 306,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 235,
                                            "src": "3655:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                              "typeString": "struct TS3000.Result memory"
                                            }
                                          },
                                          "id": 307,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3662:13:3",
                                          "memberName": "fragmentIndex",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 22,
                                          "src": "3655:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 308,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3678:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3655:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3642:38:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_KeyFragment_$11_storage",
                                        "typeString": "struct TS3000.KeyFragment storage ref"
                                      }
                                    },
                                    "id": 311,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3681:9:3",
                                    "memberName": "localHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8,
                                    "src": "3642:48:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 312,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 235,
                                        "src": "3726:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                          "typeString": "struct TS3000.Result memory"
                                        }
                                      },
                                      "id": 313,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3733:20:3",
                                      "memberName": "timestampRestriction",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 24,
                                      "src": "3726:27:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 314,
                                      "name": "minTimeFramePerFragment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "3756:23:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3726:53:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 293,
                                  "name": "Input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20,
                                  "src": "3459:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Input_$20_storage_ptr_$",
                                    "typeString": "type(struct TS3000.Input storage pointer)"
                                  }
                                },
                                "id": 316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "3487:13:3",
                                  "3548:10:3",
                                  "3631:9:3",
                                  "3712:12:3"
                                ],
                                "names": [
                                  "fragmentIndex",
                                  "globalHash",
                                  "localHash",
                                  "minTimestamp"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "3459:339:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                  "typeString": "struct TS3000.Input memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3438:360:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 319,
                                    "name": "rewardPerFragment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41,
                                    "src": "3831:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 322,
                                        "name": "input",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 292,
                                        "src": "3861:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                          "typeString": "struct TS3000.Input memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Input_$20_memory_ptr",
                                          "typeString": "struct TS3000.Input memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 320,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3850:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3854:6:3",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "3850:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3850:17:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 324,
                                    "name": "postProcessingGas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 43,
                                    "src": "3869:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 318,
                                  "name": "_submitRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "3816:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3816:71:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 326,
                              "nodeType": "ExpressionStatement",
                              "src": "3816:71:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "3109:803:3",
                  "trueBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3162:108:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 259,
                            "name": "finalKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3176:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 263,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 235,
                                      "src": "3208:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$27_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 264,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3215:8:3",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "3208:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 261,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3197:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3201:6:3",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3197:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3197:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 260,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3187:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3187:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3176:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "3176:49:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 269,
                            "name": "keyFullyMined",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3244:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3244:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 271,
                        "nodeType": "EmitStatement",
                        "src": "3239:20:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cb392747",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 231,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "onlyClient",
                  "nameLocations": [
                    "2611:10:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 406,
                  "src": "2611:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2611:10:3"
              }
            ],
            "name": "processResult",
            "nameLocation": "2554:13:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 229,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2602:8:3"
            },
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "2583:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "2568:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2567:27:3"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2622:0:3"
            },
            "scope": 368,
            "src": "2545:1373:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3990:115:3",
              "statements": [
                {
                  "expression": {
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "postProcessingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4000:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 340,
                        "name": "postProcessingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4024:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "74727565",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4056:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4024:36:3",
                      "trueExpression": {
                        "hexValue": "66616c7365",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4000:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:60:3"
                },
                {
                  "expression": {
                    "id": 346,
                    "name": "postProcessingEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "4077:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 338,
                  "id": 347,
                  "nodeType": "Return",
                  "src": "4070:28:3"
                }
              ]
            },
            "functionSelector": "2d16d25b",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3965:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1371,
                  "src": "3965:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3965:9:3"
              }
            ],
            "name": "togglePostProcessing",
            "nameLocation": "3933:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3953:2:3"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3984:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3983:6:3"
            },
            "scope": 368,
            "src": "3924:181:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              434
            ],
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "4191:105:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7d",
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4208:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8f855c4f947b0889320f8fcdeae85458b7c5ed762c0cd1d5f61cbf3b3c0bb25f",
                      "typeString": "literal_string \"{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}\""
                    },
                    "value": "{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}"
                  },
                  "functionReturnParameters": 354,
                  "id": 356,
                  "nodeType": "Return",
                  "src": "4201:88:3"
                }
              ]
            },
            "functionSelector": "2896de13",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputDataStructure",
            "nameLocation": "4120:21:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 351,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4153:8:3"
            },
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4141:2:3"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "4176:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:15:3"
            },
            "scope": 368,
            "src": "4111:185:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              439
            ],
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "4387:89:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4404:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5bea9a5fc31ff70cddbbc1ea1cfb92be0eb52fefd16b266931ddf7cca810872e",
                      "typeString": "literal_string \"{uint fragmentIndex; uint timestampRestriction; uint passcode;}\""
                    },
                    "value": "{uint fragmentIndex; uint timestampRestriction; uint passcode;}"
                  },
                  "functionReturnParameters": 363,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "4397:72:3"
                }
              ]
            },
            "functionSelector": "8244741c",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultDataStructure",
            "nameLocation": "4315:22:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 360,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4349:8:3"
            },
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4337:2:3"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "4372:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:15:3"
            },
            "scope": 368,
            "src": "4306:170:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 369,
        "src": "99:4379:3",
        "usedErrors": [],
        "usedEvents": [
          29,
          385,
          391
        ]
      }
    ],
    "src": "37:4442:3"
  },
  "bytecode": "608060405260405162001dd038038062001dd083398101604081905262000026916200044e565b60008054336001600160a01b031991821617909155600180549091166001600160a01b03881617815562061a80600855600a805460ff191690911790556006819055825162000076903462000550565b600755600362000087868262000604565b50600982905560005b835181101562000186576040805160608101825260008082526020820181905291810191909152848281518110620000cc57620000cc620006d0565b602090810291909101015181526000829003620000eb57602081018690525b600480546001808201835560009290925282517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60039092029182015560208301517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8201556040909201517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909201919091550162000090565b50600060405180608001604052806000815260200185600081518110620001b157620001b1620006d0565b6020026020010151815260200186815260200142815250905062000222600754826040516020016200020991908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60408051601f1981840301815291905260085462000230565b50505050505050506200073d565b6000478411156200027c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640160405180910390fd5b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790620002b39088908890600401620006e6565b60206040518083038185885af1158015620002d2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620002f9919062000723565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c816040516200032d91815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000398576200039862000357565b604052919050565b60005b83811015620003bd578181015183820152602001620003a3565b50506000910152565b600082601f830112620003d857600080fd5b815160206001600160401b03821115620003f657620003f662000357565b8160051b620004078282016200036d565b92835284810182019282810190878511156200042257600080fd5b83870192505b84831015620004435782518252918301919083019062000428565b979650505050505050565b60008060008060008060c087890312156200046857600080fd5b86516001600160a01b03811681146200048057600080fd5b60208801519096506001600160401b03808211156200049e57600080fd5b818901915089601f830112620004b357600080fd5b815181811115620004c857620004c862000357565b620004dd601f8201601f19166020016200036d565b8181528b6020838601011115620004f357600080fd5b62000506826020830160208701620003a0565b60408b015160608c01519199509750925050808211156200052657600080fd5b506200053589828a01620003c6565b9350506080870151915060a087015190509295509295509295565b6000826200056e57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200058857607f821691505b602082108103620005a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005ff576000816000526020600020601f850160051c81016020861015620005da5750805b601f850160051c820191505b81811015620005fb57828155600101620005e6565b5050505b505050565b81516001600160401b0381111562000620576200062062000357565b620006388162000631845462000573565b84620005af565b602080601f831160018114620006705760008415620006575750858301515b600019600386901b1c1916600185901b178555620005fb565b600085815260208120601f198616915b82811015620006a15788860151825594840194600190910190840162000680565b5085821015620006c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b604081526000835180604084015262000707816060850160208801620003a0565b602083019390935250601f91909101601f191601606001919050565b6000602082840312156200073657600080fd5b5051919050565b611683806200074d6000396000f3fe6080604052600436106101395760003560e01c80637353d891116100ab578063a0a7ccff1161006f578063a0a7ccff14610327578063ace8e46214610347578063c2c562451461035d578063c91c7b371461037d578063cb3927471461039d578063d997ebf5146103bd57600080fd5b80637353d891146102855780638244741c146102c05780638d68cf59146102255780638da5cb5b146102d55780638f32d59b1461030757600080fd5b80632d9e78b8116100fd5780632d9e78b8146101ef5780633015394c1461020557806343bb58de1461022757806349875db21461023a5780634f7ef8661461025a578063552b0b831461027057600080fd5b8063015594b814610145578063155dd5ee1461017457806322473385146101945780632896de13146101b85780632d16d25b146101da57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50600a5461015f9060ff1681565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b5061015f61018f366004610f13565b6103d3565b3480156101a057600080fd5b506101aa60085481565b60405190815260200161016b565b3480156101c457600080fd5b506101cd6104a2565b60405161016b9190610f7c565b3480156101e657600080fd5b5061015f6104c2565b3480156101fb57600080fd5b506101aa60055481565b34801561021157600080fd5b50610225610220366004610f13565b610519565b005b6101aa61023536600461102f565b6105b6565b34801561024657600080fd5b5061015f61025536600461110b565b6105f4565b34801561026657600080fd5b506101aa60065481565b34801561027c57600080fd5b506101cd6109ac565b34801561029157600080fd5b506102a56102a0366004610f13565b610a3a565b6040805193845260208401929092529082015260600161016b565b3480156102cc57600080fd5b506101cd610a6d565b3480156102e157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016b565b34801561031357600080fd5b506000546001600160a01b0316331461015f565b34801561033357600080fd5b506101cd610342366004611157565b610a8d565b34801561035357600080fd5b506101aa60095481565b34801561036957600080fd5b506001546102ef906001600160a01b031681565b34801561038957600080fd5b5061015f610398366004611199565b610acf565b3480156103a957600080fd5b506102256103b8366004611157565b610b6b565b3480156103c957600080fd5b506101aa60075481565b600080546001600160a01b031633146104075760405162461bcd60e51b81526004016103fe90611205565b60405180910390fd5b8147101561044c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6040513390600090829085908381818185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b509093505050505b919050565b60606040518060800160405280604f81526020016115ff604f9139905090565b600080546001600160a01b031633146104ed5760405162461bcd60e51b81526004016103fe90611205565b600a5460ff166104fe576001610501565b60005b600a805460ff1916911515918217905560ff16919050565b6000546001600160a01b031633146105435760405162461bcd60e51b81526004016103fe90611205565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061125a565b5050565b600080546001600160a01b031633146105e15760405162461bcd60e51b81526004016103fe90611205565b6105ec848484610df7565b949350505050565b60008381526002602052604081205460ff16151560011461067d5760405162461bcd60e51b815260206004820152603f60248201527f5468697320494420646f6573206e6f742062656c6f6e6720746f20616e20616360448201527f7469766520726571756573742077697468696e207468697320636c69656e740060648201526084016103fe565b60015460405163c58343ef60e01b8152600481018690526000916001600160a01b03169063c58343ef90602401600060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ef91908101906112d1565b60a08101519091506001600160a01b03166107585760405162461bcd60e51b8152602060048201526024808201527f596f75206e65656420746f2061636365707420746865207265717565737420666044820152631a5c9cdd60e21b60648201526084016103fe565b610100810151156107ab5760405162461bcd60e51b815260206004820152601d60248201527f546865207265717565737420697320616c726561647920636c6f73656400000060448201526064016103fe565b60a08101516001600160a01b031633146108155760405162461bcd60e51b815260206004820152602560248201527f536f6d656f6e6520656c736520686173206163636570746564207468652052656044820152641c5d595cdd60da1b60648201526084016103fe565b6001546040516324c3aed960e11b81526000916001600160a01b0316906349875db29061084a908990899089906004016113ec565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d919061125a565b905080156109a357600086815260026020526040808220805460ff191690555163cb39274760e01b906108c69088908890602401611406565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600083608001516001600160a01b031684606001518360405161091e919061141a565b60006040518083038160008787f1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5050604080518a815282151560208201529192507fa531c8f4bbf2a18049d85528bb5aaae66874af94bcb325738ee729a2b6cf8428910160405180910390a150505b95945050505050565b600380546109b990611436565b80601f01602080910402602001604051908101604052809291908181526020018280546109e590611436565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b505050505081565b60048181548110610a4a57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60606040518060600160405280603f81526020016115c0603f9139905090565b606082828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b600080610ade85870187611470565b90506000610aee848601866114d6565b905080602001518260600151148015610b0b575080602001514210155b8015610b18575080518251145b8015610b605750816020015181604001518360400151604051602001610b48929190918252602082015260400190565b60405160208183030381529060405280519060200120145b979650505050505050565b333014610bd25760405162461bcd60e51b815260206004820152602f60248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526e31b7b73a3930b1ba1034ba39b2b63360891b60648201526084016103fe565b6000610be0828401846114d6565b905080604001516004826000015181548110610bfe57610bfe611532565b6000918252602090912060026003909202010155600454610c219060019061155e565b815103610c86578060400151604051602001610c3f91815260200190565b60408051601f198184030181529082905280516020909101206005557f3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd3690600090a1505050565b8060400151604051602001610c9d91815260200190565b60405160208183030381529060405280519060200120600482600001516001610cc69190611571565b81548110610cd657610cd6611532565b6000918252602090912060016003909202010155600a5460ff1615610df2576000604051806080016040528083600001516001610d139190611571565b8152602001600484600001516001610d2b9190611571565b81548110610d3b57610d3b611532565b9060005260206000209060030201600001548152602001600484600001516001610d659190611571565b81548110610d7557610d75611532565b90600052602060002090600302016001015481526020016009548460200151610d9e9190611571565b905260075460408051835160208083019190915284015181830152908301516060808301919091528301516080820152919250610def9160a001604051602081830303815290604052600854610df7565b50505b505050565b600047841115610e3e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790610e739088908890600401611584565b60206040518083038185885af1158015610e91573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610eb691906115a6565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c81604051610ee991815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b600060208284031215610f2557600080fd5b5035919050565b60005b83811015610f47578181015183820152602001610f2f565b50506000910152565b60008151808452610f68816020860160208601610f2c565b601f01601f19169290920160200192915050565b602081526000610f8f6020830184610f50565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610fd057610fd0610f96565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fff57610fff610f96565b604052919050565b600067ffffffffffffffff82111561102157611021610f96565b50601f01601f191660200190565b60008060006060848603121561104457600080fd5b83359250602084013567ffffffffffffffff81111561106257600080fd5b8401601f8101861361107357600080fd5b803561108661108182611007565b610fd6565b81815287602083850101111561109b57600080fd5b81602084016020830137600060208383010152809450505050604084013590509250925092565b60008083601f8401126110d457600080fd5b50813567ffffffffffffffff8111156110ec57600080fd5b60208301915083602082850101111561110457600080fd5b9250929050565b60008060006040848603121561112057600080fd5b83359250602084013567ffffffffffffffff81111561113e57600080fd5b61114a868287016110c2565b9497909650939450505050565b6000806020838503121561116a57600080fd5b823567ffffffffffffffff81111561118157600080fd5b61118d858286016110c2565b90969095509350505050565b600080600080604085870312156111af57600080fd5b843567ffffffffffffffff808211156111c757600080fd5b6111d3888389016110c2565b909650945060208701359150808211156111ec57600080fd5b506111f9878288016110c2565b95989497509550505050565b60208082526025908201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060408201526437bbb732b960d91b606082015260800190565b8051801515811461049d57600080fd5b60006020828403121561126c57600080fd5b610f8f8261124a565b600082601f83011261128657600080fd5b815161129461108182611007565b8181528460208386010111156112a957600080fd5b6105ec826020830160208701610f2c565b80516001600160a01b038116811461049d57600080fd5b6000602082840312156112e357600080fd5b815167ffffffffffffffff808211156112fb57600080fd5b90830190610120828603121561131057600080fd5b611318610fac565b8251815260208301518281111561132e57600080fd5b61133a87828601611275565b6020830152506040830151604082015260608301516060820152611360608084016112ba565b608082015261137160a084016112ba565b60a082015260c083015160c082015260e08301518281111561139257600080fd5b61139e87828601611275565b60e08301525061010091506113b482840161124a565b91810191909152949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109a36040830184866113c3565b6020815260006105ec6020830184866113c3565b6000825161142c818460208701610f2c565b9190910192915050565b600181811c9082168061144a57607f821691505b60208210810361146a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006080828403121561148257600080fd5b6040516080810181811067ffffffffffffffff821117156114a5576114a5610f96565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000606082840312156114e857600080fd5b6040516060810181811067ffffffffffffffff8211171561150b5761150b610f96565b80604052508235815260208301356020820152604083013560408201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610ac957610ac9611548565b80820180821115610ac957610ac9611548565b6040815260006115976040830185610f50565b90508260208301529392505050565b6000602082840312156115b857600080fd5b505191905056fe7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7da26469706673582212209b41181b8852add7cefa6b0d68382f02bfde7d45a354f92810d3cc81adfa688c64736f6c63430008170033",
  "bytecodeSha1": "1105f4c55c00e4eafbe14e4245b16fb357703546",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.23+commit.f704f362"
  },
  "contractName": "TS3000",
  "coverageMap": {
    "branches": {
      "0": {
        "BaseClient._submitRequest": {
          "35": [
            1531,
            1563,
            true
          ]
        },
        "BaseClient.submitResult": {
          "30": [
            2389,
            2424,
            true
          ],
          "31": [
            2583,
            2615,
            true
          ],
          "32": [
            2675,
            2698,
            true
          ],
          "33": [
            2751,
            2781,
            true
          ],
          "34": [
            2920,
            2927,
            false
          ]
        },
        "BaseClient.withdrawFunds": {
          "29": [
            2079,
            2109,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "TS3000.processResult": {
          "27": [
            3113,
            3160,
            false
          ],
          "28": [
            3397,
            3418,
            false
          ]
        },
        "TS3000.togglePostProcessing": {
          "26": [
            4024,
            4045,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BaseClient._submitRequest": {
          "23": [
            1523,
            1586
          ],
          "24": [
            1695,
            1727
          ],
          "25": [
            1738,
            1772
          ]
        },
        "BaseClient.cancelRequest": {
          "6": [
            1888,
            1927
          ]
        },
        "BaseClient.resolveOnChain": {
          "16": [
            1175,
            1191
          ]
        },
        "BaseClient.submitRequest": {
          "7": [
            1334,
            1390
          ]
        },
        "BaseClient.submitResult": {
          "8": [
            2381,
            2492
          ],
          "9": [
            2575,
            2656
          ],
          "10": [
            2667,
            2732
          ],
          "11": [
            2743,
            2823
          ],
          "12": [
            2944,
            2979
          ],
          "13": [
            3312,
            3360
          ],
          "14": [
            3382,
            3396
          ]
        },
        "BaseClient.withdrawFunds": {
          "2": [
            2071,
            2132
          ]
        }
      },
      "2": {
        "Ownable.isOwner": {
          "1": [
            387,
            414
          ]
        },
        "Ownable.owner": {
          "0": [
            318,
            331
          ]
        }
      },
      "3": {
        "TS3000.checkResult": {
          "17": [
            2292,
            2532
          ]
        },
        "TS3000.getInputDataStructure": {
          "3": [
            4201,
            4289
          ]
        },
        "TS3000.getResultDataStructure": {
          "15": [
            4397,
            4469
          ]
        },
        "TS3000.processResult": {
          "18": [
            3038,
            3099
          ],
          "19": [
            3176,
            3225
          ],
          "20": [
            3239,
            3259
          ],
          "21": [
            3290,
            3379
          ],
          "22": [
            3816,
            3887
          ]
        },
        "TS3000.togglePostProcessing": {
          "4": [
            4000,
            4060
          ],
          "5": [
            4070,
            4098
          ]
        }
      }
    }
  },
  "dependencies": [
    "BaseClient",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106101395760003560e01c80637353d891116100ab578063a0a7ccff1161006f578063a0a7ccff14610327578063ace8e46214610347578063c2c562451461035d578063c91c7b371461037d578063cb3927471461039d578063d997ebf5146103bd57600080fd5b80637353d891146102855780638244741c146102c05780638d68cf59146102255780638da5cb5b146102d55780638f32d59b1461030757600080fd5b80632d9e78b8116100fd5780632d9e78b8146101ef5780633015394c1461020557806343bb58de1461022757806349875db21461023a5780634f7ef8661461025a578063552b0b831461027057600080fd5b8063015594b814610145578063155dd5ee1461017457806322473385146101945780632896de13146101b85780632d16d25b146101da57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50600a5461015f9060ff1681565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b5061015f61018f366004610f13565b6103d3565b3480156101a057600080fd5b506101aa60085481565b60405190815260200161016b565b3480156101c457600080fd5b506101cd6104a2565b60405161016b9190610f7c565b3480156101e657600080fd5b5061015f6104c2565b3480156101fb57600080fd5b506101aa60055481565b34801561021157600080fd5b50610225610220366004610f13565b610519565b005b6101aa61023536600461102f565b6105b6565b34801561024657600080fd5b5061015f61025536600461110b565b6105f4565b34801561026657600080fd5b506101aa60065481565b34801561027c57600080fd5b506101cd6109ac565b34801561029157600080fd5b506102a56102a0366004610f13565b610a3a565b6040805193845260208401929092529082015260600161016b565b3480156102cc57600080fd5b506101cd610a6d565b3480156102e157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016b565b34801561031357600080fd5b506000546001600160a01b0316331461015f565b34801561033357600080fd5b506101cd610342366004611157565b610a8d565b34801561035357600080fd5b506101aa60095481565b34801561036957600080fd5b506001546102ef906001600160a01b031681565b34801561038957600080fd5b5061015f610398366004611199565b610acf565b3480156103a957600080fd5b506102256103b8366004611157565b610b6b565b3480156103c957600080fd5b506101aa60075481565b600080546001600160a01b031633146104075760405162461bcd60e51b81526004016103fe90611205565b60405180910390fd5b8147101561044c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6040513390600090829085908381818185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b509093505050505b919050565b60606040518060800160405280604f81526020016115ff604f9139905090565b600080546001600160a01b031633146104ed5760405162461bcd60e51b81526004016103fe90611205565b600a5460ff166104fe576001610501565b60005b600a805460ff1916911515918217905560ff16919050565b6000546001600160a01b031633146105435760405162461bcd60e51b81526004016103fe90611205565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061125a565b5050565b600080546001600160a01b031633146105e15760405162461bcd60e51b81526004016103fe90611205565b6105ec848484610df7565b949350505050565b60008381526002602052604081205460ff16151560011461067d5760405162461bcd60e51b815260206004820152603f60248201527f5468697320494420646f6573206e6f742062656c6f6e6720746f20616e20616360448201527f7469766520726571756573742077697468696e207468697320636c69656e740060648201526084016103fe565b60015460405163c58343ef60e01b8152600481018690526000916001600160a01b03169063c58343ef90602401600060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ef91908101906112d1565b60a08101519091506001600160a01b03166107585760405162461bcd60e51b8152602060048201526024808201527f596f75206e65656420746f2061636365707420746865207265717565737420666044820152631a5c9cdd60e21b60648201526084016103fe565b610100810151156107ab5760405162461bcd60e51b815260206004820152601d60248201527f546865207265717565737420697320616c726561647920636c6f73656400000060448201526064016103fe565b60a08101516001600160a01b031633146108155760405162461bcd60e51b815260206004820152602560248201527f536f6d656f6e6520656c736520686173206163636570746564207468652052656044820152641c5d595cdd60da1b60648201526084016103fe565b6001546040516324c3aed960e11b81526000916001600160a01b0316906349875db29061084a908990899089906004016113ec565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d919061125a565b905080156109a357600086815260026020526040808220805460ff191690555163cb39274760e01b906108c69088908890602401611406565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600083608001516001600160a01b031684606001518360405161091e919061141a565b60006040518083038160008787f1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5050604080518a815282151560208201529192507fa531c8f4bbf2a18049d85528bb5aaae66874af94bcb325738ee729a2b6cf8428910160405180910390a150505b95945050505050565b600380546109b990611436565b80601f01602080910402602001604051908101604052809291908181526020018280546109e590611436565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b505050505081565b60048181548110610a4a57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60606040518060600160405280603f81526020016115c0603f9139905090565b606082828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b600080610ade85870187611470565b90506000610aee848601866114d6565b905080602001518260600151148015610b0b575080602001514210155b8015610b18575080518251145b8015610b605750816020015181604001518360400151604051602001610b48929190918252602082015260400190565b60405160208183030381529060405280519060200120145b979650505050505050565b333014610bd25760405162461bcd60e51b815260206004820152602f60248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526e31b7b73a3930b1ba1034ba39b2b63360891b60648201526084016103fe565b6000610be0828401846114d6565b905080604001516004826000015181548110610bfe57610bfe611532565b6000918252602090912060026003909202010155600454610c219060019061155e565b815103610c86578060400151604051602001610c3f91815260200190565b60408051601f198184030181529082905280516020909101206005557f3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd3690600090a1505050565b8060400151604051602001610c9d91815260200190565b60405160208183030381529060405280519060200120600482600001516001610cc69190611571565b81548110610cd657610cd6611532565b6000918252602090912060016003909202010155600a5460ff1615610df2576000604051806080016040528083600001516001610d139190611571565b8152602001600484600001516001610d2b9190611571565b81548110610d3b57610d3b611532565b9060005260206000209060030201600001548152602001600484600001516001610d659190611571565b81548110610d7557610d75611532565b90600052602060002090600302016001015481526020016009548460200151610d9e9190611571565b905260075460408051835160208083019190915284015181830152908301516060808301919091528301516080820152919250610def9160a001604051602081830303815290604052600854610df7565b50505b505050565b600047841115610e3e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790610e739088908890600401611584565b60206040518083038185885af1158015610e91573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610eb691906115a6565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c81604051610ee991815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b600060208284031215610f2557600080fd5b5035919050565b60005b83811015610f47578181015183820152602001610f2f565b50506000910152565b60008151808452610f68816020860160208601610f2c565b601f01601f19169290920160200192915050565b602081526000610f8f6020830184610f50565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610fd057610fd0610f96565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fff57610fff610f96565b604052919050565b600067ffffffffffffffff82111561102157611021610f96565b50601f01601f191660200190565b60008060006060848603121561104457600080fd5b83359250602084013567ffffffffffffffff81111561106257600080fd5b8401601f8101861361107357600080fd5b803561108661108182611007565b610fd6565b81815287602083850101111561109b57600080fd5b81602084016020830137600060208383010152809450505050604084013590509250925092565b60008083601f8401126110d457600080fd5b50813567ffffffffffffffff8111156110ec57600080fd5b60208301915083602082850101111561110457600080fd5b9250929050565b60008060006040848603121561112057600080fd5b83359250602084013567ffffffffffffffff81111561113e57600080fd5b61114a868287016110c2565b9497909650939450505050565b6000806020838503121561116a57600080fd5b823567ffffffffffffffff81111561118157600080fd5b61118d858286016110c2565b90969095509350505050565b600080600080604085870312156111af57600080fd5b843567ffffffffffffffff808211156111c757600080fd5b6111d3888389016110c2565b909650945060208701359150808211156111ec57600080fd5b506111f9878288016110c2565b95989497509550505050565b60208082526025908201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060408201526437bbb732b960d91b606082015260800190565b8051801515811461049d57600080fd5b60006020828403121561126c57600080fd5b610f8f8261124a565b600082601f83011261128657600080fd5b815161129461108182611007565b8181528460208386010111156112a957600080fd5b6105ec826020830160208701610f2c565b80516001600160a01b038116811461049d57600080fd5b6000602082840312156112e357600080fd5b815167ffffffffffffffff808211156112fb57600080fd5b90830190610120828603121561131057600080fd5b611318610fac565b8251815260208301518281111561132e57600080fd5b61133a87828601611275565b6020830152506040830151604082015260608301516060820152611360608084016112ba565b608082015261137160a084016112ba565b60a082015260c083015160c082015260e08301518281111561139257600080fd5b61139e87828601611275565b60e08301525061010091506113b482840161124a565b91810191909152949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109a36040830184866113c3565b6020815260006105ec6020830184866113c3565b6000825161142c818460208701610f2c565b9190910192915050565b600181811c9082168061144a57607f821691505b60208210810361146a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006080828403121561148257600080fd5b6040516080810181811067ffffffffffffffff821117156114a5576114a5610f96565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000606082840312156114e857600080fd5b6040516060810181811067ffffffffffffffff8211171561150b5761150b610f96565b80604052508235815260208301356020820152604083013560408201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610ac957610ac9611548565b80820180821115610ac957610ac9611548565b6040815260006115976040830185610f50565b90508260208301529392505050565b6000602082840312156115b857600080fd5b505191905056fe7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7da26469706673582212209b41181b8852add7cefa6b0d68382f02bfde7d45a354f92810d3cc81adfa688c64736f6c63430008170033",
  "deployedSourceMap": "99:4379:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:33;;;;;;;;;;-1:-1:-1;782:33:3;;;;;;;;;;;179:14:5;;172:22;154:41;;142:2;127:18;782:33:3;;;;;;;;1993:284:0;;;;;;;;;;-1:-1:-1;1993:284:0;;;;;:::i;:::-;;:::i;706:29:3:-;;;;;;;;;;;;;;;;;;;537:25:5;;;525:2;510:18;706:29:3;391:177:5;4111:185:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3924:181::-;;;;;;;;;;;;;:::i;605:23::-;;;;;;;;;;;;;;;;1819:116:0;;;;;;;;;;-1:-1:-1;1819:116:0;;;;;:::i;:::-;;:::i;:::-;;1202:196;;;;;;:::i;:::-;;:::i;2285:1119::-;;;;;;;;;;-1:-1:-1;2285:1119:0;;;;;:::i;:::-;;:::i;635:30:3:-;;;;;;;;;;;;;;;;523:37;;;;;;;;;;;;;:::i;566:33::-;;;;;;;;;;-1:-1:-1;566:33:3;;;;;:::i;:::-;;:::i;:::-;;;;4222:25:5;;;4278:2;4263:18;;4256:34;;;;4306:18;;;4299:34;4210:2;4195:18;566:33:3;4020:319:5;4306:170:3;;;;;;;;;;;;;:::i;270:64:2:-;;;;;;;;;;-1:-1:-1;307:7:2;325:6;-1:-1:-1;;;;;325:6:2;270:64;;;-1:-1:-1;;;;;4508:32:5;;;4490:51;;4478:2;4463:18;270:64:2;4344:203:5;340:77:2;;;;;;;;;;-1:-1:-1;379:4:2;408:6;-1:-1:-1;;;;;408:6:2;394:10;:20;340:77;;1019:175:0;;;;;;;;;;-1:-1:-1;1019:175:0;;;;;:::i;:::-;;:::i;741:35:3:-;;;;;;;;;;;;;;;;185:37:0;;;;;;;;;;-1:-1:-1;185:37:0;;;;-1:-1:-1;;;;;185:37:0;;;2044:495:3;;;;;;;;;;-1:-1:-1;2044:495:3;;;;;:::i;:::-;;:::i;2545:1373::-;;;;;;;;;;-1:-1:-1;2545:1373:3;;;;;:::i;:::-;;:::i;671:29::-;;;;;;;;;;;;;;;;1993:284:0;2054:4;408:6:2;;-1:-1:-1;;;;;408:6:2;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:2;;;;;;;:::i;:::-;;;;;;;;;2104:5:0::1;2079:21;:30;;2071:61;;;::::0;-1:-1:-1;;;2071:61:0;;6751:2:5;2071:61:0::1;::::0;::::1;6733:21:5::0;6790:2;6770:18;;;6763:30;-1:-1:-1;;;6809:18:5;;;6802:48;6867:18;;2071:61:0::1;6549:342:5::0;2071:61:0::1;2216:28;::::0;2175:10:::1;::::0;2143:21:::1;::::0;2175:10;;2234:5;;2143:21;2216:28;2143:21;2216:28;2234:5;2175:10;2216:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2197:47:0;;-1:-1:-1;;;;190:1:2::1;1993:284:0::0;;;:::o;4111:185:3:-;4176:13;4201:88;;;;;;;;;;;;;;;;;;;4111:185;:::o;3924:181::-;3984:4;408:6:2;;-1:-1:-1;;;;;408:6:2;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:2;;;;;;;:::i;:::-;4024:21:3::1;::::0;::::1;;:36;;4056:4;4024:36;;;4048:5;4024:36;4000:21;:60:::0;;-1:-1:-1;;4000:60:3::1;::::0;::::1;;::::0;;::::1;::::0;;::::1;4077:21:::0;;3924:181;-1:-1:-1;3924:181:3:o;1819:116:0:-;379:4:2;408:6;-1:-1:-1;;;;;408:6:2;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:2;;;;;;;:::i;:::-;1888:14:0::1;::::0;:39:::1;::::0;-1:-1:-1;;;1888:39:0;;::::1;::::0;::::1;537:25:5::0;;;-1:-1:-1;;;;;1888:14:0;;::::1;::::0;:28:::1;::::0;510:18:5;;1888:39:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1819:116:::0;:::o;1202:196::-;1317:4;408:6:2;;-1:-1:-1;;;;;408:6:2;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:2;;;;;;;:::i;:::-;1341:49:0::1;1356:7;1365:5;1372:17;1341:14;:49::i;:::-;1334:56:::0;1202:196;-1:-1:-1;;;;1202:196:0:o;2285:1119::-;2364:4;2389:27;;;:16;:27;;;;;;;;:35;;:27;:35;2381:111;;;;-1:-1:-1;;;2381:111:0;;7684:2:5;2381:111:0;;;7666:21:5;7723:2;7703:18;;;7696:30;7762:34;7742:18;;;7735:62;7833:33;7813:18;;;7806:61;7884:19;;2381:111:0;7482:427:5;2381:111:0;2528:14;;:36;;-1:-1:-1;;;2528:36:0;;;;;537:25:5;;;2503:22:0;;-1:-1:-1;;;;;2528:14:0;;:25;;510:18:5;;2528:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2528:36:0;;;;;;;;;;;;:::i;:::-;2583:16;;;;2503:61;;-1:-1:-1;;;;;;2583:32:0;2575:81;;;;-1:-1:-1;;;2575:81:0;;10034:2:5;2575:81:0;;;10016:21:5;10073:2;10053:18;;;10046:30;10112:34;10092:18;;;10085:62;-1:-1:-1;;;10163:18:5;;;10156:34;10207:19;;2575:81:0;9832:400:5;2575:81:0;2675:14;;;;:23;2667:65;;;;-1:-1:-1;;;2667:65:0;;10439:2:5;2667:65:0;;;10421:21:5;10478:2;10458:18;;;10451:30;10517:31;10497:18;;;10490:59;10566:18;;2667:65:0;10237:353:5;2667:65:0;2751:16;;;;-1:-1:-1;;;;;2751:30:0;2771:10;2751:30;2743:80;;;;-1:-1:-1;;;2743:80:0;;10797:2:5;2743:80:0;;;10779:21:5;10836:2;10816:18;;;10809:30;10875:34;10855:18;;;10848:62;-1:-1:-1;;;10926:18:5;;;10919:35;10971:19;;2743:80:0;10595:401:5;2743:80:0;2859:14;;:46;;-1:-1:-1;;;2859:46:0;;2844:12;;-1:-1:-1;;;;;2859:14:0;;:27;;:46;;2887:9;;2898:6;;;;2859:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2844:61;;2920:7;2916:456;;;2974:5;2944:27;;;:16;:27;;;;;;:35;;-1:-1:-1;;2944:35:0;;;3014:69;-1:-1:-1;;;3037:37:0;3014:69;;3076:6;;;;3014:69;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;3014:69:0;;;;;;;-1:-1:-1;;;;;3014:69:0;;;;;;;;;;;2994:89;;3099:16;3129:7;:14;;;-1:-1:-1;;;;;3121:28:0;3155:7;:25;;;3182:4;3121:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3317:43:0;;;12301:25:5;;;12369:14;;12362:22;12357:2;12342:18;;12335:50;3098:89:0;;-1:-1:-1;3317:43:0;;12274:18:5;3317:43:0;;;;;;;2929:443;;2916:456;3389:7;2285:1119;-1:-1:-1;;;;;2285:1119:0:o;523:37:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;566:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;566:33:3;:::o;4306:170::-;4372:13;4397:72;;;;;;;;;;;;;;;;;;;4306:170;:::o;1019:175:0:-;1098:12;1182:9;;1175:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1175:16:0;;-1:-1:-1;;;;1019:175:0;;;;;:::o;2044:495:3:-;2150:4;;2187:30;;;;2198:9;2187:30;:::i;:::-;2166:51;-1:-1:-1;2227:20:3;2250:32;;;;2261:10;2250:32;:::i;:::-;2227:55;;2322:6;:27;;;2300:5;:18;;;:49;2299:103;;;;;2374:6;:27;;;2355:15;:46;;2299:103;:152;;;;-1:-1:-1;2430:20:3;;2407:19;;:43;2299:152;:233;;;;;2515:5;:16;;;2477:6;:15;;;2494:5;:15;;;2466:44;;;;;;;;14166:25:5;;;14222:2;14207:18;;14200:34;14154:2;14139:18;;13992:248;2466:44:3;;;;;;;;;;;;;2456:55;;;;;;:75;2299:233;2292:240;2044:495;-1:-1:-1;;;;;;;2044:495:3:o;2545:1373::-;426:10:0;448:4;426:27;418:87;;;;-1:-1:-1;;;418:87:0;;14447:2:5;418:87:0;;;14429:21:5;14486:2;14466:18;;;14459:30;14525:34;14505:18;;;14498:62;-1:-1:-1;;;14576:18:5;;;14569:45;14631:19;;418:87:0;14245:411:5;418:87:0;2973:20:3::1;2996:32;::::0;;::::1;3007:10:::0;2996:32:::1;:::i;:::-;2973:55;;3084:6;:15;;;3038:12;3051:6;:20;;;3038:34;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:43:::1;:34;::::0;;::::1;;:43;:61:::0;3137:12:::1;:19:::0;:23:::1;::::0;3159:1:::1;::::0;3137:23:::1;:::i;:::-;3113:20:::0;;:47;3109:803:::1;;3208:6;:15;;;3197:27;;;;;;537:25:5::0;;525:2;510:18;;391:177;3197:27:3::1;;::::0;;-1:-1:-1;;3197:27:3;;::::1;::::0;;;;;;;3187:38;;3197:27:::1;3187:38:::0;;::::1;::::0;3176:8:::1;:49:::0;3244:15:::1;::::0;;;::::1;2622:1296;2545:1373:::0;;:::o;3109:803::-:1;3362:6;:15;;;3351:27;;;;;;537:25:5::0;;525:2;510:18;;391:177;3351:27:3::1;;;;;;;;;;;;;3341:38;;;;;;3290:12;3303:6;:20;;;3326:1;3303:24;;;;:::i;:::-;3290:38;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:48:::1;:38;::::0;;::::1;;:48;:89:::0;3397:21:::1;::::0;::::1;;3393:509;;;3438:18;3459:339;;;;;;;;3502:6;:20;;;3525:1;3502:24;;;;:::i;:::-;3459:339;;;;3560:12;3573:6;:20;;;3596:1;3573:24;;;;:::i;:::-;3560:38;;;;;;;;:::i;:::-;;;;;;;;;;;:49;;;3459:339;;;;3642:12;3655:6;:20;;;3678:1;3655:24;;;;:::i;:::-;3642:38;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;3459:339;;;;3756:23;;3726:6;:27;;;:53;;;;:::i;:::-;3459:339:::0;;3831:17:::1;::::0;3850::::1;::::0;;15395:13:5;;3850:17:3::1;::::0;;::::1;15377:32:5::0;;;;15453:17;;15447:24;15425:20;;;15418:54;15516:17;;;15510:24;15488:20;;;;15481:54;;;;15579:17;;15573:24;15551:20;;;15544:54;3438:360:3;;-1:-1:-1;3816:71:3::1;::::0;15349:19:5;;3850:17:3::1;;;;;;;;;;;;3869;;3816:14;:71::i;:::-;;3420:482;3393:509;2622:1296;2545:1373:::0;;:::o;1406:405:0:-;1506:4;1542:21;1531:7;:32;;1523:63;;;;-1:-1:-1;;;1523:63:0;;6751:2:5;1523:63:0;;;6733:21:5;6790:2;6770:18;;;6763:30;-1:-1:-1;;;6809:18:5;;;6802:48;6867:18;;1523:63:0;6549:342:5;1523:63:0;1614:14;;:70;;-1:-1:-1;;;1614:70:0;;1597:14;;-1:-1:-1;;;;;1614:14:0;;:28;;1650:7;;1614:70;;1659:5;;1666:17;;1614:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1597:87;;1700:27;1717:9;1700:27;;;;537:25:5;;525:2;510:18;;391:177;1700:27:0;;;;;;;;1738;;;;:16;:27;;;;;:34;;-1:-1:-1;;1738:34:0;1768:4;1738:34;;;1755:9;-1:-1:-1;1406:405:0;;;;;:::o;206:180:5:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:5;;206:180;-1:-1:-1;206:180:5:o;573:250::-;658:1;668:113;682:6;679:1;676:13;668:113;;;758:11;;;752:18;739:11;;;732:39;704:2;697:10;668:113;;;-1:-1:-1;;815:1:5;797:16;;790:27;573:250::o;828:271::-;870:3;908:5;902:12;935:6;930:3;923:19;951:76;1020:6;1013:4;1008:3;1004:14;997:4;990:5;986:16;951:76;:::i;:::-;1081:2;1060:15;-1:-1:-1;;1056:29:5;1047:39;;;;1088:4;1043:50;;828:271;-1:-1:-1;;828:271:5:o;1104:220::-;1253:2;1242:9;1235:21;1216:4;1273:45;1314:2;1303:9;1299:18;1291:6;1273:45;:::i;:::-;1265:53;1104:220;-1:-1:-1;;;1104:220:5:o;1511:127::-;1572:10;1567:3;1563:20;1560:1;1553:31;1603:4;1600:1;1593:15;1627:4;1624:1;1617:15;1643:255;1715:2;1709:9;1757:6;1745:19;;1794:18;1779:34;;1815:22;;;1776:62;1773:88;;;1841:18;;:::i;:::-;1877:2;1870:22;1643:255;:::o;1903:275::-;1974:2;1968:9;2039:2;2020:13;;-1:-1:-1;;2016:27:5;2004:40;;2074:18;2059:34;;2095:22;;;2056:62;2053:88;;;2121:18;;:::i;:::-;2157:2;2150:22;1903:275;;-1:-1:-1;1903:275:5:o;2183:186::-;2231:4;2264:18;2256:6;2253:30;2250:56;;;2286:18;;:::i;:::-;-1:-1:-1;2352:2:5;2331:15;-1:-1:-1;;2327:29:5;2358:4;2323:40;;2183:186::o;2374:807::-;2460:6;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2581:9;2568:23;2558:33;;2642:2;2631:9;2627:18;2614:32;2669:18;2661:6;2658:30;2655:50;;;2701:1;2698;2691:12;2655:50;2724:22;;2777:4;2769:13;;2765:27;-1:-1:-1;2755:55:5;;2806:1;2803;2796:12;2755:55;2842:2;2829:16;2867:48;2883:31;2911:2;2883:31;:::i;:::-;2867:48;:::i;:::-;2938:2;2931:5;2924:17;2978:7;2973:2;2968;2964;2960:11;2956:20;2953:33;2950:53;;;2999:1;2996;2989:12;2950:53;3054:2;3049;3045;3041:11;3036:2;3029:5;3025:14;3012:45;3098:1;3093:2;3088;3081:5;3077:14;3073:23;3066:34;3119:5;3109:15;;;;;3171:2;3160:9;3156:18;3143:32;3133:42;;2374:807;;;;;:::o;3186:347::-;3237:8;3247:6;3301:3;3294:4;3286:6;3282:17;3278:27;3268:55;;3319:1;3316;3309:12;3268:55;-1:-1:-1;3342:20:5;;3385:18;3374:30;;3371:50;;;3417:1;3414;3407:12;3371:50;3454:4;3446:6;3442:17;3430:29;;3506:3;3499:4;3490:6;3482;3478:19;3474:30;3471:39;3468:59;;;3523:1;3520;3513:12;3468:59;3186:347;;;;;:::o;3538:477::-;3617:6;3625;3633;3686:2;3674:9;3665:7;3661:23;3657:32;3654:52;;;3702:1;3699;3692:12;3654:52;3738:9;3725:23;3715:33;;3799:2;3788:9;3784:18;3771:32;3826:18;3818:6;3815:30;3812:50;;;3858:1;3855;3848:12;3812:50;3897:58;3947:7;3938:6;3927:9;3923:22;3897:58;:::i;:::-;3538:477;;3974:8;;-1:-1:-1;3871:84:5;;-1:-1:-1;;;;3538:477:5:o;4552:409::-;4622:6;4630;4683:2;4671:9;4662:7;4658:23;4654:32;4651:52;;;4699:1;4696;4689:12;4651:52;4739:9;4726:23;4772:18;4764:6;4761:30;4758:50;;;4804:1;4801;4794:12;4758:50;4843:58;4893:7;4884:6;4873:9;4869:22;4843:58;:::i;:::-;4920:8;;4817:84;;-1:-1:-1;4552:409:5;-1:-1:-1;;;;4552:409:5:o;5421:717::-;5511:6;5519;5527;5535;5588:2;5576:9;5567:7;5563:23;5559:32;5556:52;;;5604:1;5601;5594:12;5556:52;5644:9;5631:23;5673:18;5714:2;5706:6;5703:14;5700:34;;;5730:1;5727;5720:12;5700:34;5769:58;5819:7;5810:6;5799:9;5795:22;5769:58;:::i;:::-;5846:8;;-1:-1:-1;5743:84:5;-1:-1:-1;5934:2:5;5919:18;;5906:32;;-1:-1:-1;5950:16:5;;;5947:36;;;5979:1;5976;5969:12;5947:36;;6018:60;6070:7;6059:8;6048:9;6044:24;6018:60;:::i;:::-;5421:717;;;;-1:-1:-1;6097:8:5;-1:-1:-1;;;;5421:717:5:o;6143:401::-;6345:2;6327:21;;;6384:2;6364:18;;;6357:30;6423:34;6418:2;6403:18;;6396:62;-1:-1:-1;;;6489:2:5;6474:18;;6467:35;6534:3;6519:19;;6143:401::o;7106:164::-;7182:13;;7231;;7224:21;7214:32;;7204:60;;7260:1;7257;7250:12;7275:202;7342:6;7395:2;7383:9;7374:7;7370:23;7366:32;7363:52;;;7411:1;7408;7401:12;7363:52;7434:37;7461:9;7434:37;:::i;7914:441::-;7967:5;8020:3;8013:4;8005:6;8001:17;7997:27;7987:55;;8038:1;8035;8028:12;7987:55;8067:6;8061:13;8098:48;8114:31;8142:2;8114:31;:::i;8098:48::-;8171:2;8162:7;8155:19;8217:3;8210:4;8205:2;8197:6;8193:15;8189:26;8186:35;8183:55;;;8234:1;8231;8224:12;8183:55;8247:77;8321:2;8314:4;8305:7;8301:18;8294:4;8286:6;8282:17;8247:77;:::i;8360:189::-;8451:13;;-1:-1:-1;;;;;8493:31:5;;8483:42;;8473:70;;8539:1;8536;8529:12;8554:1273;8648:6;8701:2;8689:9;8680:7;8676:23;8672:32;8669:52;;;8717:1;8714;8707:12;8669:52;8750:9;8744:16;8779:18;8820:2;8812:6;8809:14;8806:34;;;8836:1;8833;8826:12;8806:34;8859:22;;;;8915:6;8897:16;;;8893:29;8890:49;;;8935:1;8932;8925:12;8890:49;8961:22;;:::i;:::-;9012:2;9006:9;8999:5;8992:24;9055:2;9051;9047:11;9041:18;9084:2;9074:8;9071:16;9068:36;;;9100:1;9097;9090:12;9068:36;9136:55;9183:7;9172:8;9168:2;9164:17;9136:55;:::i;:::-;9131:2;9124:5;9120:14;9113:79;;9238:2;9234;9230:11;9224:18;9219:2;9212:5;9208:14;9201:42;9289:2;9285;9281:11;9275:18;9270:2;9263:5;9259:14;9252:42;9327:55;9377:3;9373:2;9369:12;9327:55;:::i;:::-;9321:3;9314:5;9310:15;9303:80;9416:55;9466:3;9462:2;9458:12;9416:55;:::i;:::-;9410:3;9403:5;9399:15;9392:80;9519:3;9515:2;9511:12;9505:19;9499:3;9492:5;9488:15;9481:44;9564:3;9560:2;9556:12;9550:19;9594:2;9584:8;9581:16;9578:36;;;9610:1;9607;9600:12;9578:36;9647:55;9694:7;9683:8;9679:2;9675:17;9647:55;:::i;:::-;9641:3;9634:5;9630:15;9623:80;;9722:3;9712:13;;9757:39;9792:2;9788;9784:11;9757:39;:::i;:::-;9741:14;;;9734:63;;;;9745:5;8554:1273;-1:-1:-1;;;;8554:1273:5:o;11001:266::-;11089:6;11084:3;11077:19;11141:6;11134:5;11127:4;11122:3;11118:14;11105:43;-1:-1:-1;11193:1:5;11168:16;;;11186:4;11164:27;;;11157:38;;;;11249:2;11228:15;;;-1:-1:-1;;11224:29:5;11215:39;;;11211:50;;11001:266::o;11272:315::-;11457:6;11446:9;11439:25;11500:2;11495;11484:9;11480:18;11473:30;11420:4;11520:61;11577:2;11566:9;11562:18;11554:6;11546;11520:61;:::i;11592:244::-;11749:2;11738:9;11731:21;11712:4;11769:61;11826:2;11815:9;11811:18;11803:6;11795;11769:61;:::i;11841:287::-;11970:3;12008:6;12002:13;12024:66;12083:6;12078:3;12071:4;12063:6;12059:17;12024:66;:::i;:::-;12106:16;;;;;11841:287;-1:-1:-1;;11841:287:5:o;12396:380::-;12475:1;12471:12;;;;12518;;;12539:61;;12593:4;12585:6;12581:17;12571:27;;12539:61;12646:2;12638:6;12635:14;12615:18;12612:38;12609:161;;12692:10;12687:3;12683:20;12680:1;12673:31;12727:4;12724:1;12717:15;12755:4;12752:1;12745:15;12609:161;;12396:380;;;:::o;12781:634::-;12861:6;12914:3;12902:9;12893:7;12889:23;12885:33;12882:53;;;12931:1;12928;12921:12;12882:53;12964:2;12958:9;13006:3;12998:6;12994:16;13076:6;13064:10;13061:22;13040:18;13028:10;13025:34;13022:62;13019:88;;;13087:18;;:::i;:::-;13127:10;13123:2;13116:22;;13175:9;13162:23;13154:6;13147:39;13247:2;13236:9;13232:18;13219:32;13214:2;13206:6;13202:15;13195:57;13313:2;13302:9;13298:18;13285:32;13280:2;13272:6;13268:15;13261:57;13379:2;13368:9;13364:18;13351:32;13346:2;13338:6;13334:15;13327:57;13403:6;13393:16;;;12781:634;;;;:::o;13420:567::-;13501:6;13554:2;13542:9;13533:7;13529:23;13525:32;13522:52;;;13570:1;13567;13560:12;13522:52;13603:2;13597:9;13645:2;13637:6;13633:15;13714:6;13702:10;13699:22;13678:18;13666:10;13663:34;13660:62;13657:88;;;13725:18;;:::i;:::-;13765:10;13761:2;13754:22;;13813:9;13800:23;13792:6;13785:39;13885:2;13874:9;13870:18;13857:32;13852:2;13844:6;13840:15;13833:57;13951:2;13940:9;13936:18;13923:32;13918:2;13910:6;13906:15;13899:57;13975:6;13965:16;;;13420:567;;;;:::o;14661:127::-;14722:10;14717:3;14713:20;14710:1;14703:31;14753:4;14750:1;14743:15;14777:4;14774:1;14767:15;14793:127;14854:10;14849:3;14845:20;14842:1;14835:31;14885:4;14882:1;14875:15;14909:4;14906:1;14899:15;14925:128;14992:9;;;15013:11;;;15010:37;;;15027:18;;:::i;15058:125::-;15123:9;;;15144:10;;;15141:36;;;15157:18;;:::i;15609:289::-;15784:2;15773:9;15766:21;15747:4;15804:45;15845:2;15834:9;15830:18;15822:6;15804:45;:::i;:::-;15796:53;;15885:6;15880:2;15869:9;15865:18;15858:34;15609:289;;;;;:::o;15903:184::-;15973:6;16026:2;16014:9;16005:7;16001:23;15997:32;15994:52;;;16042:1;16039;16032:12;15994:52;-1:-1:-1;16065:16:5;;15903:184;-1:-1:-1;15903:184:5:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    99,
    4478
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7353D891 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA0A7CCFF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA0A7CCFF EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xACE8E462 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC2C56245 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC91C7B37 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xCB392747 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xD997EBF5 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7353D891 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8244741C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x8D68CF59 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D9E78B8 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2D9E78B8 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x43BB58DE EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x49875DB2 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x4F7EF866 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x552B0B83 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15594B8 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x22473385 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2896DE13 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2D16D25B EQ PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x4C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x110B JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x9AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0xA6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x495 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15FF PUSH1 0x4F SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x4FE JUMPI PUSH1 0x1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC054E53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3015394C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x5EC DUP5 DUP5 DUP5 PUSH2 0xDF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320494420646F6573206E6F742062656C6F6E6720746F20616E206163 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7469766520726571756573742077697468696E207468697320636C69656E7400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC58343EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC58343EF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6EF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F206163636570742074686520726571756573742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5C9CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207265717565737420697320616C726561647920636C6F736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F6D656F6E6520656C73652068617320616363657074656420746865205265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1C5D595CDD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24C3AED9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49875DB2 SWAP1 PUSH2 0x84A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH4 0xCB392747 PUSH1 0xE0 SHL SWAP1 PUSH2 0x8C6 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x961 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0xA531C8F4BBF2A18049D85528BB5AAAE66874AF94BCB325738EE729A2B6CF8428 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x9B9 SWAP1 PUSH2 0x1436 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9E5 SWAP1 PUSH2 0x1436 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C0 PUSH1 0x3F SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADE DUP6 DUP8 ADD DUP8 PUSH2 0x1470 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAEE DUP5 DUP7 ADD DUP7 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD EQ DUP1 ISZERO PUSH2 0xB0B JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB18 JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xB60 JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB48 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x31B7B73A3930B1BA1034BA39B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE0 DUP3 DUP5 ADD DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x4 DUP3 PUSH1 0x0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBFE JUMPI PUSH2 0xBFE PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x4 SLOAD PUSH2 0xC21 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x155E JUMP JUMPDEST DUP2 MLOAD SUB PUSH2 0xC86 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x5 SSTORE PUSH32 0x3523C39EB1A9C40E6A7C7504001CA3D223A7675DC8634B5AA1B056124B87CD36 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD3B JUMPI PUSH2 0xD3B PUSH2 0x1532 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD75 JUMPI PUSH2 0xD75 PUSH2 0x1532 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0xDEF SWAP2 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x8 SLOAD PUSH2 0xDF7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE DUP5 GT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x78F8AF25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF1F15E4A SWAP1 DUP8 SWAP1 PUSH2 0xE73 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB6 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP PUSH32 0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C DUP2 PUSH1 0x40 MLOAD PUSH2 0xEE9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF47 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF2F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF68 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF8F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFD0 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFFF JUMPI PUSH2 0xFFF PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1021 JUMPI PUSH2 0x1021 PUSH2 0xF96 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1086 PUSH2 0x1081 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP7 DUP3 DUP8 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118D DUP6 DUP3 DUP7 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D3 DUP9 DUP4 DUP10 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F9 DUP8 DUP3 DUP9 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8F DUP3 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1294 PUSH2 0x1081 DUP3 PUSH2 0x1007 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EC DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xF2C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x120 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 PUSH2 0xFAC JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133A DUP8 DUP3 DUP7 ADD PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1360 PUSH1 0x80 DUP5 ADD PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1371 PUSH1 0xA0 DUP5 ADD PUSH2 0x12BA JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139E DUP8 DUP3 DUP7 ADD PUSH2 0x1275 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 SWAP2 POP PUSH2 0x13B4 DUP3 DUP5 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9A3 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5EC PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x142C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x144A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x146A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A5 PUSH2 0xF96 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x150B JUMPI PUSH2 0x150B PUSH2 0xF96 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x1548 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1597 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID PUSH28 0x75696E7420667261676D656E74496E6465783B2075696E742074696D PUSH6 0x7374616D7052 PUSH6 0x737472696374 PUSH10 0x6F6E3B2075696E742070 PUSH2 0x7373 PUSH4 0x6F64653B PUSH30 0x7B75696E7420667261676D656E74496E6465783B20627974657333322067 PUSH13 0x6F62616C486173683B20627974 PUSH6 0x733332206C6F PUSH4 0x616C4861 PUSH20 0x683B2075696E74206D696E54696D657374616D70 EXTCODESIZE PUSH30 0xA26469706673582212209B41181B8852ADD7CEFA6B0D68382F02BFDE7D45 LOG3 SLOAD 0xF9 0x28 LT 0xD3 0xCC DUP2 0xAD STATICCALL PUSH9 0x8C64736F6C63430008 OR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7353D891"
    },
    "25": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA0A7CCFF"
    },
    "36": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA0A7CCFF"
    },
    "47": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x327"
    },
    "51": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xACE8E462"
    },
    "58": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x347"
    },
    "62": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC2C56245"
    },
    "69": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35D"
    },
    "73": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC91C7B37"
    },
    "80": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37D"
    },
    "84": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB392747"
    },
    "91": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "95": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD997EBF5"
    },
    "102": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "106": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "107": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "REVERT",
      "path": "3"
    },
    "111": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7353D891"
    },
    "118": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x285"
    },
    "122": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8244741C"
    },
    "129": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C0"
    },
    "133": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D68CF59"
    },
    "140": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x225"
    },
    "144": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D5"
    },
    "155": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F32D59B"
    },
    "162": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "166": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "167": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "REVERT",
      "path": "3"
    },
    "171": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2D9E78B8"
    },
    "178": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "GT",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2D9E78B8"
    },
    "189": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF"
    },
    "193": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3015394C"
    },
    "200": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x205"
    },
    "204": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "206": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x43BB58DE"
    },
    "211": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x227"
    },
    "215": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "216": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x49875DB2"
    },
    "222": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23A"
    },
    "226": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "227": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "228": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4F7EF866"
    },
    "233": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "237": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "238": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x552B0B83"
    },
    "244": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270"
    },
    "248": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "REVERT",
      "path": "3"
    },
    "253": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x15594B8"
    },
    "260": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145"
    },
    "264": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "265": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x155DD5EE"
    },
    "271": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x174"
    },
    "275": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "276": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "277": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x22473385"
    },
    "282": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "283": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x194"
    },
    "286": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "287": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "288": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2896DE13"
    },
    "293": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8"
    },
    "297": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "298": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2D16D25B"
    },
    "304": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "EQ",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DA"
    },
    "308": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "309": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "REVERT",
      "path": "3"
    },
    "313": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "314": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "315": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140"
    },
    "318": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "319": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "STOP",
      "path": "3"
    },
    "320": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "321": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "DUP1",
      "path": "3"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        99,
        4478
      ],
      "op": "REVERT",
      "path": "3"
    },
    "325": {
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "326": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "3"
    },
    "328": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "329": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "332": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "333": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "3"
    },
    "336": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "REVERT",
      "path": "3"
    },
    "337": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "341": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "342": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "345": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "346": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "348": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "AND",
      "path": "3"
    },
    "349": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP2",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "354": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "ISZERO"
    },
    "357": {
      "op": "ISZERO"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "364": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "366": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "367": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "3"
    },
    "368": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "369": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SUB",
      "path": "3"
    },
    "370": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "371": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "RETURN",
      "path": "3"
    },
    "372": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "374": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "375": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "376": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "379": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "382": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "383": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "384": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "389": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "392": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "393": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "395": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF13"
    },
    "398": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "399": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "403": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "404": {
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "405": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "406": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP1",
      "path": "3"
    },
    "407": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "408": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A0"
    },
    "411": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "412": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "414": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "REVERT",
      "path": "3"
    },
    "416": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "417": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "POP",
      "path": "3"
    },
    "418": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "421": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "423": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "424": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP2",
      "path": "3"
    },
    "425": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMP",
      "path": "3"
    },
    "426": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "427": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "429": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "430": {
      "op": "SWAP1"
    },
    "431": {
      "op": "DUP2"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B"
    },
    "439": {
      "op": "JUMP"
    },
    "440": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "441": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "442": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "443": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "444": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C4"
    },
    "447": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "448": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "450": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "451": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "REVERT",
      "path": "3"
    },
    "452": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "453": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "POP",
      "path": "3"
    },
    "454": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD"
    },
    "457": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A2"
    },
    "460": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "i",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "461": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "462": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "464": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "465": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B"
    },
    "468": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "469": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "470": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7C"
    },
    "473": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "i",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "474": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "475": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "476": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "DUP1",
      "path": "3"
    },
    "477": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "478": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E6"
    },
    "481": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "482": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "484": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "DUP1",
      "path": "3"
    },
    "485": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "REVERT",
      "path": "3"
    },
    "486": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "487": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "POP",
      "path": "3"
    },
    "488": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "491": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C2"
    },
    "494": {
      "fn": "TS3000.togglePostProcessing",
      "jump": "i",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMP",
      "path": "3"
    },
    "495": {
      "offset": [
        605,
        628
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "496": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "497": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP1",
      "path": "3"
    },
    "498": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "499": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FB"
    },
    "502": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "503": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "505": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP1",
      "path": "3"
    },
    "506": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "REVERT",
      "path": "3"
    },
    "507": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "508": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "POP",
      "path": "3"
    },
    "509": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "512": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "514": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "515": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP2",
      "path": "3"
    },
    "516": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMP",
      "path": "3"
    },
    "517": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "518": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "519": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "DUP1",
      "path": "0"
    },
    "520": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "521": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "524": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "525": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "527": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "REVERT",
      "path": "0"
    },
    "529": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "534": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "537": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "538": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "540": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF13"
    },
    "543": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMP",
      "path": "0"
    },
    "544": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "548": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "STOP",
      "path": "0"
    },
    "551": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "555": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "558": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "559": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "561": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102F"
    },
    "564": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "569": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "572": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "DUP1",
      "path": "0"
    },
    "573": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "574": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246"
    },
    "577": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "578": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "580": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "DUP1",
      "path": "0"
    },
    "581": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "REVERT",
      "path": "0"
    },
    "582": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "587": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x255"
    },
    "590": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "591": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "593": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110B"
    },
    "596": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "597": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "598": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F4"
    },
    "601": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "602": {
      "offset": [
        635,
        665
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "603": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "604": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP1",
      "path": "3"
    },
    "605": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "606": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x266"
    },
    "609": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "610": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "612": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP1",
      "path": "3"
    },
    "613": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "REVERT",
      "path": "3"
    },
    "614": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "615": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "POP",
      "path": "3"
    },
    "616": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "619": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "621": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "622": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP2",
      "path": "3"
    },
    "623": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMP",
      "path": "3"
    },
    "624": {
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "625": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "626": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "627": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "628": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C"
    },
    "631": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "632": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "634": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "635": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "REVERT",
      "path": "3"
    },
    "636": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "637": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "638": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD"
    },
    "641": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9AC"
    },
    "644": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "645": {
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "646": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "647": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "648": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "649": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x291"
    },
    "652": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "653": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "655": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "656": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "REVERT",
      "path": "3"
    },
    "657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5"
    },
    "662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0"
    },
    "665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "666": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "668": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF13"
    },
    "671": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "672": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "673": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3A"
    },
    "676": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "677": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "678": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "680": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "681": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "682": {
      "op": "SWAP4"
    },
    "683": {
      "op": "DUP5"
    },
    "684": {
      "op": "MSTORE"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "687": {
      "op": "DUP5"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "SWAP3"
    },
    "690": {
      "op": "SWAP1"
    },
    "691": {
      "op": "SWAP3"
    },
    "692": {
      "op": "MSTORE"
    },
    "693": {
      "op": "SWAP1"
    },
    "694": {
      "op": "DUP3"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "op": "MSTORE"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B"
    },
    "703": {
      "op": "JUMP"
    },
    "704": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "705": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "706": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "707": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "708": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CC"
    },
    "711": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "712": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "714": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "715": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "REVERT",
      "path": "3"
    },
    "716": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "717": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "POP",
      "path": "3"
    },
    "718": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD"
    },
    "721": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "724": {
      "fn": "TS3000.getResultDataStructure",
      "jump": "i",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMP",
      "path": "3"
    },
    "725": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "726": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "727": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "DUP1",
      "path": "2"
    },
    "728": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "729": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1"
    },
    "732": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "733": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "735": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "DUP1",
      "path": "2"
    },
    "736": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "REVERT",
      "path": "2"
    },
    "737": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "Ownable.owner",
      "offset": [
        307,
        314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "741": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 0
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "AND",
      "path": "2"
    },
    "751": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "752": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "754": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "SWAP1"
    },
    "764": {
      "op": "SWAP2"
    },
    "765": {
      "op": "AND"
    },
    "766": {
      "op": "DUP2"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B"
    },
    "774": {
      "op": "JUMP"
    },
    "775": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "776": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "777": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "778": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "779": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313"
    },
    "782": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "783": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "785": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "786": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "REVERT",
      "path": "2"
    },
    "787": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "791": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 1
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "op": "SUB"
    },
    "800": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "801": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "802": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "803": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "806": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "807": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "808": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "809": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "810": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "811": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333"
    },
    "814": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "815": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "817": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "818": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "REVERT",
      "path": "0"
    },
    "819": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CD"
    },
    "824": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "827": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "828": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "830": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1157"
    },
    "833": {
      "fn": "BaseClient.resolveOnChain",
      "jump": "i",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "834": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8D"
    },
    "838": {
      "fn": "BaseClient.resolveOnChain",
      "jump": "i",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "839": {
      "offset": [
        741,
        776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "840": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "841": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "842": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "843": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x353"
    },
    "846": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "847": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "849": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "850": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "REVERT",
      "path": "3"
    },
    "851": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "852": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "POP",
      "path": "3"
    },
    "853": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "856": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "858": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "859": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP2",
      "path": "3"
    },
    "860": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMP",
      "path": "3"
    },
    "861": {
      "offset": [
        185,
        222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "863": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "DUP1",
      "path": "0"
    },
    "864": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "865": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "868": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "869": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "871": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "DUP1",
      "path": "0"
    },
    "872": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "REVERT",
      "path": "0"
    },
    "873": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "offset": [
        185,
        222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "877": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "878": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EF"
    },
    "881": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "offset": [
        185,
        222
      ],
      "op": "AND",
      "path": "0"
    },
    "891": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "DUP2",
      "path": "0"
    },
    "892": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        185,
        222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "893": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "894": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "895": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "DUP1",
      "path": "3"
    },
    "896": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "897": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x389"
    },
    "900": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "901": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "903": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "DUP1",
      "path": "3"
    },
    "904": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "REVERT",
      "path": "3"
    },
    "905": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "910": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x398"
    },
    "913": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "914": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "916": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1199"
    },
    "919": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "920": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "921": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACF"
    },
    "924": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "925": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "926": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "927": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "928": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "929": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A9"
    },
    "932": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "933": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "935": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "936": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "REVERT",
      "path": "3"
    },
    "937": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x225"
    },
    "942": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "945": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "946": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "948": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1157"
    },
    "951": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "952": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "953": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6B"
    },
    "956": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "957": {
      "offset": [
        671,
        700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "958": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "959": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "960": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "961": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C9"
    },
    "964": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "965": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "967": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "968": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "REVERT",
      "path": "3"
    },
    "969": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "970": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "POP",
      "path": "3"
    },
    "971": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA"
    },
    "974": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "976": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "977": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP2",
      "path": "3"
    },
    "978": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMP",
      "path": "3"
    },
    "979": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2054,
        2058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "982": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "983": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "993": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "994": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "995": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x407"
    },
    "998": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "999": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1001": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1010": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1011": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1013": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "2"
    },
    "1014": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1017": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1018": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1205"
    },
    "1021": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1022": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1023": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1025": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1026": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1027": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1028": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SUB",
      "path": "2"
    },
    "1029": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1030": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1031": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1032": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2104,
        2109
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 2
    },
    "1033": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2079,
        2100
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "1034": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2079,
        2109
      ],
      "op": "LT",
      "path": "0"
    },
    "1035": {
      "branch": 29,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2079,
        2109
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1036": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44C"
    },
    "1039": {
      "branch": 29,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1040": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1042": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1051": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1054": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1056": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1057": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "ADD",
      "path": "0"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1090": {
      "op": "DUP3"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "op": "MSTORE"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1099": {
      "op": "JUMP"
    },
    "1100": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2071,
        2132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1101": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1103": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1104": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2175,
        2185
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1105": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2175,
        2185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1106": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1108": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1109": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2175,
        2185
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1110": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2175,
        2185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1111": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2234,
        2239
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1112": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2234,
        2239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1113": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2164
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1114": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1115": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2143,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1116": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1117": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2234,
        2239
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1118": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2175,
        2185
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1119": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "GAS",
      "path": "0"
    },
    "1120": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "CALL",
      "path": "0"
    },
    "1121": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1122": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "POP",
      "path": "0"
    },
    "1123": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "POP",
      "path": "0"
    },
    "1124": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "POP",
      "path": "0"
    },
    "1125": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1126": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1127": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1129": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1130": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "EQ",
      "path": "0"
    },
    "1131": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x490"
    },
    "1134": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1135": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1137": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1138": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1139": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "POP",
      "path": "0"
    },
    "1140": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1142": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "NOT",
      "path": "0"
    },
    "1143": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "1145": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1146": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "ADD",
      "path": "0"
    },
    "1147": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "1148": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1149": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "ADD",
      "path": "0"
    },
    "1150": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1152": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1154": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1155": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1156": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1157": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1159": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1162": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "ADD",
      "path": "0"
    },
    "1163": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1164": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1167": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1168": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1169": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1171": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1172": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "POP",
      "path": "0"
    },
    "1173": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2216,
        2244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2197,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2197,
        2244
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "offset": [
        190,
        191
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1182": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1183": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1993,
        2277
      ],
      "op": "POP",
      "path": "0"
    },
    "1185": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "o",
      "offset": [
        1993,
        2277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1186": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1187": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4176,
        4189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1189": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x40"
    },
    "1191": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1192": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1193": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1195": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "ADD",
      "path": "3"
    },
    "1196": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1198": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1199": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1200": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4F"
    },
    "1202": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1203": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1204": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1206": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "ADD",
      "path": "3"
    },
    "1207": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15FF"
    },
    "1210": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4F"
    },
    "1212": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1213": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1214": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1215": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "POP",
      "path": "3"
    },
    "1216": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1217": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "o",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1218": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1219": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3984,
        3988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1221": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1222": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "1232": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1233": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "1234": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ED"
    },
    "1237": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1238": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1240": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1249": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1250": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1252": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "2"
    },
    "1253": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1256": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1257": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1205"
    },
    "1260": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1261": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1262": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0xA"
    },
    "1264": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1265": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1267": {
      "branch": 26,
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "AND",
      "path": "3"
    },
    "1268": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FE"
    },
    "1271": {
      "branch": 26,
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1272": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4056,
        4060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1274": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x501"
    },
    "1277": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1278": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1279": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4048,
        4053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1281": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1282": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4021
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "1284": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1285": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1288": {
      "op": "NOT"
    },
    "1289": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "AND",
      "path": "3"
    },
    "1290": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1291": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1292": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1293": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1294": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1295": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "OR",
      "path": "3"
    },
    "1296": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1297": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1298": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1300": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4077,
        4098
      ],
      "op": "AND",
      "path": "3",
      "statement": 5
    },
    "1301": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4077,
        4098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1302": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "fn": "TS3000.togglePostProcessing",
      "jump": "o",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1305": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1308": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "1318": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1319": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "1320": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x543"
    },
    "1323": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1324": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1326": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1335": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1336": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1338": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "2"
    },
    "1339": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1342": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1343": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1205"
    },
    "1346": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1347": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1348": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "1350": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1351": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1353": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1354": {
      "op": "PUSH4",
      "value": "0xC054E53"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1363": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1366": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "op": "DUP4"
    },
    "1369": {
      "op": "SWAP1"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1380": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1381": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "AND",
      "path": "0"
    },
    "1382": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1916
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3015394C"
    },
    "1388": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1394": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1396": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1397": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1398": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1399": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "SUB",
      "path": "0"
    },
    "1400": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1401": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1403": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1404": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "GAS",
      "path": "0"
    },
    "1405": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "CALL",
      "path": "0"
    },
    "1406": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1407": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1408": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1409": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "1412": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1413": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1414": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1416": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1417": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1418": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1419": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1421": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1422": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1423": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1424": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1425": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1426": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1427": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1429": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1430": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1431": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1433": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "NOT",
      "path": "0"
    },
    "1434": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1436": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1437": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ADD",
      "path": "0"
    },
    "1438": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "AND",
      "path": "0"
    },
    "1439": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1440": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ADD",
      "path": "0"
    },
    "1441": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1442": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1444": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1445": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1446": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1447": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "ADD",
      "path": "0"
    },
    "1448": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1449": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1453": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1454": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "1457": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1888,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1458": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1459": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "0"
    },
    "1460": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1819,
        1935
      ],
      "op": "POP",
      "path": "0"
    },
    "1461": {
      "fn": "BaseClient.cancelRequest",
      "jump": "o",
      "offset": [
        1819,
        1935
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1462": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1463": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1317,
        1321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1465": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1466": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "2"
    },
    "1476": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1477": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "2"
    },
    "1478": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E1"
    },
    "1481": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1482": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1484": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1493": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1494": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1496": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "2"
    },
    "1497": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1500": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1501": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1205"
    },
    "1504": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1505": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1506": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1341,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x5EC"
    },
    "1509": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1356,
        1363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1510": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1365,
        1370
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1511": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1372,
        1389
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1512": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1341,
        1355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF7"
    },
    "1515": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1341,
        1390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1516": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1341,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1517": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1334,
        1390
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1518": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1202,
        1398
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "fn": "BaseClient.submitRequest",
      "jump": "o",
      "offset": [
        1202,
        1398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1524": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1525": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2364,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1527": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 8
    },
    "1528": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1529": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1530": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1532": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1534": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1535": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1537": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1538": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1539": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1540": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1542": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "AND",
      "path": "0"
    },
    "1543": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2424
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1544": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2424
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1545": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1547": {
      "branch": 30,
      "fn": "BaseClient.submitResult",
      "offset": [
        2389,
        2424
      ],
      "op": "EQ",
      "path": "0"
    },
    "1548": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67D"
    },
    "1551": {
      "branch": 30,
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1552": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1554": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1563": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1566": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1568": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1569": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "ADD",
      "path": "0"
    },
    "1570": {
      "op": "MSTORE"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1575": {
      "op": "DUP3"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "MSTORE"
    },
    "1578": {
      "op": "PUSH32",
      "value": "0x5468697320494420646F6573206E6F742062656C6F6E6720746F20616E206163"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1613": {
      "op": "DUP3"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "MSTORE"
    },
    "1616": {
      "op": "PUSH32",
      "value": "0x7469766520726571756573742077697468696E207468697320636C69656E7400"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1660": {
      "op": "JUMP"
    },
    "1661": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2381,
        2492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1664": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2542
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1667": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1668": {
      "op": "PUSH4",
      "value": "0xC58343EF"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1677": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1678": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1680": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1681": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ADD",
      "path": "0"
    },
    "1682": {
      "op": "DUP7"
    },
    "1683": {
      "op": "SWAP1"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2503,
        2525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1687": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2503,
        2525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2542
      ],
      "op": "AND",
      "path": "0"
    },
    "1697": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1698": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2553
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC58343EF"
    },
    "1703": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1706": {
      "op": "ADD"
    },
    "1707": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1709": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1711": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1712": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1713": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1714": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "SUB",
      "path": "0"
    },
    "1715": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1716": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1717": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "GAS",
      "path": "0"
    },
    "1718": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1719": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1720": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1721": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1722": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C7"
    },
    "1725": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1726": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1727": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1729": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1730": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1731": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1732": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1734": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1735": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1736": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "POP",
      "path": "0"
    },
    "1737": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "POP",
      "path": "0"
    },
    "1738": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "POP",
      "path": "0"
    },
    "1739": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "POP",
      "path": "0"
    },
    "1740": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1742": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1743": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1744": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1746": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1747": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1748": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1750": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1751": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1752": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1753": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ADD",
      "path": "0"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1756": {
      "op": "NOT"
    },
    "1757": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "AND",
      "path": "0"
    },
    "1758": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1759": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ADD",
      "path": "0"
    },
    "1760": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1762": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EF"
    },
    "1766": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1767": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "ADD",
      "path": "0"
    },
    "1770": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1771": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D1"
    },
    "1774": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2528,
        2564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1775": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2528,
        2564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1776": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2583,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0xA0"
    },
    "1778": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2583,
        2599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1779": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2583,
        2599
      ],
      "op": "ADD",
      "path": "0"
    },
    "1780": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2583,
        2599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1781": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2503,
        2564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1782": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2503,
        2564
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "op": "SUB"
    },
    "1792": {
      "branch": 31,
      "fn": "BaseClient.submitResult",
      "offset": [
        2583,
        2615
      ],
      "op": "AND",
      "path": "0"
    },
    "1793": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x758"
    },
    "1796": {
      "branch": 31,
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1797": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1799": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1806": {
      "op": "SHL"
    },
    "1807": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1808": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1813": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1814": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "ADD",
      "path": "0"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "op": "DUP3"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "MSTORE"
    },
    "1822": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F206163636570742074686520726571756573742066"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1857": {
      "op": "DUP3"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "MSTORE"
    },
    "1860": {
      "op": "PUSH4",
      "value": "0x1A5C9CDD"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1870": {
      "op": "DUP3"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1879": {
      "op": "JUMP"
    },
    "1880": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2575,
        2656
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1881": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2675,
        2689
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x100"
    },
    "1884": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2675,
        2689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2675,
        2689
      ],
      "op": "ADD",
      "path": "0"
    },
    "1886": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2675,
        2689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1887": {
      "branch": 32,
      "fn": "BaseClient.submitResult",
      "offset": [
        2675,
        2698
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1888": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AB"
    },
    "1891": {
      "branch": 32,
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1892": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1894": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1903": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1908": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1909": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "ADD",
      "path": "0"
    },
    "1910": {
      "op": "MSTORE"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1915": {
      "op": "DUP3"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "op": "MSTORE"
    },
    "1918": {
      "op": "PUSH32",
      "value": "0x546865207265717565737420697320616C726561647920636C6F736564000000"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1953": {
      "op": "DUP3"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1962": {
      "op": "JUMP"
    },
    "1963": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2667,
        2732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1964": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2767
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0xA0"
    },
    "1966": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1967": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2767
      ],
      "op": "ADD",
      "path": "0"
    },
    "1968": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "op": "SUB"
    },
    "1977": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2781
      ],
      "op": "AND",
      "path": "0"
    },
    "1978": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2771,
        2781
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1979": {
      "branch": 33,
      "fn": "BaseClient.submitResult",
      "offset": [
        2751,
        2781
      ],
      "op": "EQ",
      "path": "0"
    },
    "1980": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x815"
    },
    "1983": {
      "branch": 33,
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1984": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1986": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1995": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2000": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2001": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "ADD",
      "path": "0"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "MSTORE"
    },
    "2010": {
      "op": "PUSH32",
      "value": "0x536F6D656F6E6520656C73652068617320616363657074656420746865205265"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2045": {
      "op": "DUP3"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "op": "PUSH5",
      "value": "0x1C5D595CDD"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "2068": {
      "op": "JUMP"
    },
    "2069": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2743,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2070": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2072": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2073": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2075": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2076": {
      "op": "PUSH4",
      "value": "0x24C3AED9"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2085": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2086": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2844,
        2856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2088": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2844,
        2856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2873
      ],
      "op": "AND",
      "path": "0"
    },
    "2098": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2099": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2886
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x49875DB2"
    },
    "2104": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2886
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2105": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84A"
    },
    "2108": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2109": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2887,
        2896
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2110": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2887,
        2896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2111": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2898,
        2904
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2112": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2898,
        2904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2113": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2898,
        2904
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2114": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2898,
        2904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2115": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2117": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ADD",
      "path": "0"
    },
    "2118": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EC"
    },
    "2121": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2122": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2123": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2125": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2127": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2128": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2129": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2130": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "SUB",
      "path": "0"
    },
    "2131": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2132": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2134": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2135": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "GAS",
      "path": "0"
    },
    "2136": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "CALL",
      "path": "0"
    },
    "2137": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2138": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2139": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2140": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x869"
    },
    "2143": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2144": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2145": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2147": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2148": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2149": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2150": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2152": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2153": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2154": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2155": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2156": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2157": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2158": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2160": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2161": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2162": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2164": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "NOT",
      "path": "0"
    },
    "2165": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2167": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2168": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ADD",
      "path": "0"
    },
    "2169": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "AND",
      "path": "0"
    },
    "2170": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2171": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ADD",
      "path": "0"
    },
    "2172": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2173": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2175": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2176": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2177": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2178": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "ADD",
      "path": "0"
    },
    "2179": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2180": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88D"
    },
    "2183": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2184": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2185": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "2188": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2189": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2859,
        2905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2190": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2844,
        2905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2191": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2844,
        2905
      ],
      "op": "POP",
      "path": "0"
    },
    "2192": {
      "branch": 34,
      "fn": "BaseClient.submitResult",
      "offset": [
        2920,
        2927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2193": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2916,
        3372
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2194": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2916,
        3372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A3"
    },
    "2197": {
      "branch": 34,
      "fn": "BaseClient.submitResult",
      "offset": [
        2916,
        3372
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2198": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2974,
        2979
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "2200": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2201": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2202": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2203": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2205": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2207": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2208": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2210": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2211": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2212": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2971
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2213": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2217": {
      "op": "NOT"
    },
    "2218": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2979
      ],
      "op": "AND",
      "path": "0"
    },
    "2219": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2220": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2944,
        2979
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2221": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2222": {
      "op": "PUSH4",
      "value": "0xCB392747"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3037,
        3074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2231": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C6"
    },
    "2234": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2235": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3076,
        3082
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2236": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3076,
        3082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2237": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3076,
        3082
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2238": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3076,
        3082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2239": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2241": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "ADD",
      "path": "0"
    },
    "2242": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1406"
    },
    "2245": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        3014,
        3083
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2246": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2247": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2249": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2250": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2252": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2253": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2254": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "SUB",
      "path": "0"
    },
    "2255": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "SUB",
      "path": "0"
    },
    "2256": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2257": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2258": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2259": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2261": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2262": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "NOT",
      "path": "0"
    },
    "2272": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "AND",
      "path": "0"
    },
    "2273": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2275": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2276": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "ADD",
      "path": "0"
    },
    "2277": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2278": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2288": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2289": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2290": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "AND",
      "path": "0"
    },
    "2291": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "OR",
      "path": "0"
    },
    "2292": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2293": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2294": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "POP",
      "path": "0"
    },
    "2295": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "POP",
      "path": "0"
    },
    "2296": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "POP",
      "path": "0"
    },
    "2297": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3014,
        3083
      ],
      "op": "POP",
      "path": "0"
    },
    "2298": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2994,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2299": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2994,
        3083
      ],
      "op": "POP",
      "path": "0"
    },
    "2300": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3099,
        3115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2302": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3129,
        3136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2303": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3129,
        3143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2305": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3129,
        3143
      ],
      "op": "ADD",
      "path": "0"
    },
    "2306": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3129,
        3143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3149
      ],
      "op": "AND",
      "path": "0"
    },
    "2316": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3155,
        3162
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2317": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3155,
        3180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2319": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "0"
    },
    "2320": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3155,
        3180
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2321": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3182,
        3186
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2322": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2324": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2325": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91E"
    },
    "2328": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2329": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2330": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141A"
    },
    "2333": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2334": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2335": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2337": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2339": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2340": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2341": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2342": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SUB",
      "path": "0"
    },
    "2343": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2344": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2346": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2347": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2348": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "CALL",
      "path": "0"
    },
    "2349": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2350": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "POP",
      "path": "0"
    },
    "2351": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "POP",
      "path": "0"
    },
    "2352": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "POP",
      "path": "0"
    },
    "2353": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2354": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2355": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2357": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2358": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "EQ",
      "path": "0"
    },
    "2359": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95C"
    },
    "2362": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2363": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2365": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2366": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2367": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "POP",
      "path": "0"
    },
    "2368": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2370": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "NOT",
      "path": "0"
    },
    "2371": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "2373": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2374": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "ADD",
      "path": "0"
    },
    "2375": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "AND",
      "path": "0"
    },
    "2376": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2377": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "ADD",
      "path": "0"
    },
    "2378": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2380": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2381": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2382": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2383": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2384": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2385": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2387": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2389": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2390": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "ADD",
      "path": "0"
    },
    "2391": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2392": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "2395": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2396": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2397": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2399": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2400": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "POP",
      "path": "0"
    },
    "2401": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3121,
        3187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "2406": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2407": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2408": {
      "op": "DUP11"
    },
    "2409": {
      "op": "DUP2"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "DUP3"
    },
    "2412": {
      "op": "ISZERO"
    },
    "2413": {
      "op": "ISZERO"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2416": {
      "op": "DUP3"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3098,
        3187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2420": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3098,
        3187
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xA531C8F4BBF2A18049D85528BB5AAAE66874AF94BCB325738EE729A2B6CF8428"
    },
    "2455": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2459": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2460": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2461": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2462": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "SUB",
      "path": "0"
    },
    "2463": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3317,
        3360
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2465": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2929,
        3372
      ],
      "op": "POP",
      "path": "0"
    },
    "2466": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2929,
        3372
      ],
      "op": "POP",
      "path": "0"
    },
    "2467": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2916,
        3372
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2468": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3389,
        3396
      ],
      "op": "SWAP6",
      "path": "0",
      "statement": 14
    },
    "2469": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2285,
        3404
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        2285,
        3404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2476": {
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2477": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2479": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2480": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2481": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B9"
    },
    "2484": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2485": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1436"
    },
    "2488": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2489": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2490": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2491": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2493": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2494": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2496": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2497": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2498": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DIV",
      "path": "3"
    },
    "2499": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MUL",
      "path": "3"
    },
    "2500": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2502": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2503": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2505": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2506": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2507": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2508": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2509": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2511": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2512": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2513": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2514": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2515": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2516": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2517": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2518": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2519": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2521": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2522": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2523": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2524": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2525": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E5"
    },
    "2528": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2529": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1436"
    },
    "2532": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2533": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2534": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2535": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2536": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA32"
    },
    "2539": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2540": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2541": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2543": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "LT",
      "path": "3"
    },
    "2544": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA07"
    },
    "2547": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2548": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2551": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2552": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2553": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2554": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DIV",
      "path": "3"
    },
    "2555": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MUL",
      "path": "3"
    },
    "2556": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2557": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2558": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2559": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2561": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2562": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2563": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA32"
    },
    "2566": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2567": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2568": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2569": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2570": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2571": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2572": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2574": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2575": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2577": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2579": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2580": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2581": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2582": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2583": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2584": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2585": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2586": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2587": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2589": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2590": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2591": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2593": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2594": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2595": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2596": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "GT",
      "path": "3"
    },
    "2597": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA15"
    },
    "2600": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2601": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2602": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2603": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SUB",
      "path": "3"
    },
    "2604": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2606": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "AND",
      "path": "3"
    },
    "2607": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2608": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "3"
    },
    "2609": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2610": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2611": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "2612": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "2613": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "2614": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "2615": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "3"
    },
    "2616": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2617": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2618": {
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2619": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2621": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2622": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2623": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2624": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2625": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "LT",
      "path": "3"
    },
    "2626": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4A"
    },
    "2629": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2630": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2632": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2633": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2634": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2635": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2637": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2638": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2639": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2640": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2642": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2643": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2644": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2645": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2647": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2648": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2649": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MUL",
      "path": "3"
    },
    "2650": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "3"
    },
    "2651": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2652": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2653": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2655": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2656": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "3"
    },
    "2657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2658": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2660": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2661": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "3"
    },
    "2663": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2664": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "offset": [
        566,
        599
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2668": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2669": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2670": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4372,
        4385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2672": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x40"
    },
    "2674": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2675": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2676": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2678": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "ADD",
      "path": "3"
    },
    "2679": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2681": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2682": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2683": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "2685": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2686": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2687": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2689": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "ADD",
      "path": "3"
    },
    "2690": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C0"
    },
    "2693": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "2695": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2696": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2697": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2698": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "POP",
      "path": "3"
    },
    "2699": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2700": {
      "fn": "TS3000.getResultDataStructure",
      "jump": "o",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2701": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2702": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1098,
        1110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2704": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1182,
        1191
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 16
    },
    "2705": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1182,
        1191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2706": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2707": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2708": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2710": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2711": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2713": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2714": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2715": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DIV",
      "path": "0"
    },
    "2716": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "MUL",
      "path": "0"
    },
    "2717": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2719": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2720": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2722": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2723": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2724": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2725": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2726": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2728": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2729": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2730": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2731": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2732": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2733": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2734": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2735": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2736": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2737": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2739": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2740": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2741": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2742": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2743": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2744": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2745": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2746": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2748": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2749": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2750": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2751": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2752": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2753": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2756": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1175,
        1191
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2757": {
      "op": "POP"
    },
    "2758": {
      "op": "POP"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2762": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2763": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2764": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "POP",
      "path": "0"
    },
    "2765": {
      "fn": "BaseClient.resolveOnChain",
      "offset": [
        1019,
        1194
      ],
      "op": "POP",
      "path": "0"
    },
    "2766": {
      "fn": "BaseClient.resolveOnChain",
      "jump": "o",
      "offset": [
        1019,
        1194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2767": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2768": {
      "fn": "TS3000.checkResult",
      "offset": [
        2150,
        2154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2770": {
      "fn": "TS3000.checkResult",
      "offset": [
        2150,
        2154
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2771": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2774": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2775": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2776": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "ADD",
      "path": "3"
    },
    "2777": {
      "fn": "TS3000.checkResult",
      "offset": [
        2198,
        2207
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2778": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1470"
    },
    "2781": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2187,
        2217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2782": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2783": {
      "fn": "TS3000.checkResult",
      "offset": [
        2166,
        2217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2787": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEE"
    },
    "2790": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2791": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2792": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "ADD",
      "path": "3"
    },
    "2793": {
      "fn": "TS3000.checkResult",
      "offset": [
        2261,
        2271
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2794": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D6"
    },
    "2797": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2250,
        2282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2798": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2799": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2800": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2282
      ],
      "op": "POP",
      "path": "3"
    },
    "2801": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2328
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 17
    },
    "2802": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2804": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "ADD",
      "path": "3"
    },
    "2805": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2806": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2305
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2807": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2809": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "ADD",
      "path": "3"
    },
    "2810": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2811": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2349
      ],
      "op": "EQ",
      "path": "3"
    },
    "2812": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2813": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2814": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0B"
    },
    "2817": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2818": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "POP",
      "path": "3"
    },
    "2819": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2820": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2822": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "ADD",
      "path": "3"
    },
    "2823": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2824": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2370
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2825": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2401
      ],
      "op": "LT",
      "path": "3"
    },
    "2826": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2401
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2827": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2828": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2829": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2830": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB18"
    },
    "2833": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "fn": "TS3000.checkResult",
      "offset": [
        2430,
        2450
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2836": {
      "fn": "TS3000.checkResult",
      "offset": [
        2430,
        2450
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2837": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2838": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2426
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2839": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2450
      ],
      "op": "EQ",
      "path": "3"
    },
    "2840": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2841": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2842": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2843": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB60"
    },
    "2846": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2847": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "POP",
      "path": "3"
    },
    "2848": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2851": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "ADD",
      "path": "3"
    },
    "2852": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2853": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2483
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2854": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2856": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "ADD",
      "path": "3"
    },
    "2857": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2858": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2499
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2859": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2861": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "ADD",
      "path": "3"
    },
    "2862": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2863": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2865": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2866": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2868": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "ADD",
      "path": "3"
    },
    "2869": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB48"
    },
    "2872": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2873": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2874": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2875": {
      "op": "SWAP2"
    },
    "2876": {
      "op": "DUP3"
    },
    "2877": {
      "op": "MSTORE"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2880": {
      "op": "DUP3"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "op": "MSTORE"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2885": {
      "op": "ADD"
    },
    "2886": {
      "op": "SWAP1"
    },
    "2887": {
      "op": "JUMP"
    },
    "2888": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2889": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2891": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2892": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2894": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2895": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2896": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SUB",
      "path": "3"
    },
    "2897": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SUB",
      "path": "3"
    },
    "2898": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2899": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2900": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2901": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2903": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2904": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2905": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2906": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2907": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2909": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "ADD",
      "path": "3"
    },
    "2910": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2911": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2531
      ],
      "op": "EQ",
      "path": "3"
    },
    "2912": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2913": {
      "fn": "TS3000.checkResult",
      "offset": [
        2292,
        2532
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "2914": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "op": "POP"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "fn": "TS3000.checkResult",
      "jump": "o",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2923": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2924": {
      "offset": [
        426,
        436
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2925": {
      "offset": [
        448,
        452
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2926": {
      "offset": [
        426,
        453
      ],
      "op": "EQ",
      "path": "0"
    },
    "2927": {
      "offset": [
        418,
        505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD2"
    },
    "2930": {
      "offset": [
        418,
        505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2931": {
      "fn": "TS3000.processResult",
      "offset": [
        418,
        505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2933": {
      "fn": "TS3000.processResult",
      "offset": [
        418,
        505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "offset": [
        418,
        505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "TS3000.processResult",
      "offset": [
        418,
        505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2945": {
      "offset": [
        418,
        505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2947": {
      "fn": "TS3000.processResult",
      "offset": [
        418,
        505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2948": {
      "fn": "TS3000.processResult",
      "offset": [
        418,
        505
      ],
      "op": "ADD",
      "path": "0"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2992": {
      "op": "DUP3"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH15",
      "value": "0x31B7B73A3930B1BA1034BA39B2B633"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3016": {
      "op": "DUP3"
    },
    "3017": {
      "op": "ADD"
    },
    "3018": {
      "op": "MSTORE"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3021": {
      "op": "ADD"
    },
    "3022": {
      "offset": [
        418,
        505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "3025": {
      "op": "JUMP"
    },
    "3026": {
      "offset": [
        418,
        505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3027": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        2993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3029": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE0"
    },
    "3032": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3033": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3034": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "ADD",
      "path": "3"
    },
    "3035": {
      "fn": "TS3000.processResult",
      "offset": [
        3007,
        3017
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3036": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D6"
    },
    "3039": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2996,
        3028
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3040": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3041": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        3028
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3042": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        3028
      ],
      "op": "POP",
      "path": "3"
    },
    "3043": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3090
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 18
    },
    "3044": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3046": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "ADD",
      "path": "3"
    },
    "3047": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3048": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3050": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3057
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3051": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3053": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "ADD",
      "path": "3"
    },
    "3054": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3055": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3056": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3057": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3058": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "LT",
      "path": "3"
    },
    "3059": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBFE"
    },
    "3062": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3063": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBFE"
    },
    "3066": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1532"
    },
    "3069": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3070": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3071": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3073": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3074": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3075": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3076": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3078": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3079": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3080": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3081": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3081
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3083": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3085": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3086": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3087": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "MUL",
      "path": "3"
    },
    "3088": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "ADD",
      "path": "3"
    },
    "3089": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3081
      ],
      "op": "ADD",
      "path": "3"
    },
    "3090": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3099
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3091": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3093": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3156
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3094": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC21"
    },
    "3097": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3098": {
      "fn": "TS3000.processResult",
      "offset": [
        3159,
        3160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3100": {
      "fn": "TS3000.processResult",
      "offset": [
        3159,
        3160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3101": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155E"
    },
    "3104": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3137,
        3160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3105": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3106": {
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3133
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3107": {
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3108": {
      "branch": 27,
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3160
      ],
      "op": "SUB",
      "path": "3"
    },
    "3109": {
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC86"
    },
    "3112": {
      "branch": 27,
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3113": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3214
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 19
    },
    "3114": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3116": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "ADD",
      "path": "3"
    },
    "3117": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3118": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3120": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3121": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3123": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "3124": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3F"
    },
    "3127": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3128": {
      "op": "DUP2"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "op": "SWAP1"
    },
    "3134": {
      "op": "JUMP"
    },
    "3135": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3136": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3138": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3139": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3142": {
      "op": "NOT"
    },
    "3143": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3144": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3145": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SUB",
      "path": "3"
    },
    "3146": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "3147": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3148": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3149": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3150": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3151": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3152": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3153": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3154": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3155": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3157": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3158": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3159": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "ADD",
      "path": "3"
    },
    "3160": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3161": {
      "fn": "TS3000.processResult",
      "offset": [
        3176,
        3184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3163": {
      "fn": "TS3000.processResult",
      "offset": [
        3176,
        3225
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3164": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 20,
      "value": "0x3523C39EB1A9C40E6A7C7504001CA3D223A7675DC8634B5AA1B056124B87CD36"
    },
    "3197": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3198": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3200": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3201": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "LOG1",
      "path": "3"
    },
    "3202": {
      "fn": "TS3000.processResult",
      "offset": [
        2622,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3203": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3204": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3205": {
      "fn": "TS3000.processResult",
      "jump": "o",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3206": {
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3207": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3368
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 21
    },
    "3208": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3210": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "ADD",
      "path": "3"
    },
    "3211": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3212": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3214": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3215": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3217": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "3218": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9D"
    },
    "3221": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3222": {
      "op": "DUP2"
    },
    "3223": {
      "op": "MSTORE"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3226": {
      "op": "ADD"
    },
    "3227": {
      "op": "SWAP1"
    },
    "3228": {
      "op": "JUMP"
    },
    "3229": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3230": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3232": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3233": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3235": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3236": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3237": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SUB",
      "path": "3"
    },
    "3238": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SUB",
      "path": "3"
    },
    "3239": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3240": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3241": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3242": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3244": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3245": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3246": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3248": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3250": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "ADD",
      "path": "3"
    },
    "3251": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3252": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3254": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3309
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3255": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3257": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "ADD",
      "path": "3"
    },
    "3258": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3259": {
      "fn": "TS3000.processResult",
      "offset": [
        3326,
        3327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3261": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC6"
    },
    "3264": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3265": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3266": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1571"
    },
    "3269": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3270": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3271": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3272": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3273": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3274": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "LT",
      "path": "3"
    },
    "3275": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD6"
    },
    "3278": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3279": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD6"
    },
    "3282": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1532"
    },
    "3285": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3286": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3287": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3289": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3290": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3291": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3292": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3294": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3295": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3296": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3297": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3299": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3301": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3302": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3303": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "MUL",
      "path": "3"
    },
    "3304": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "ADD",
      "path": "3"
    },
    "3305": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3338
      ],
      "op": "ADD",
      "path": "3"
    },
    "3306": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3379
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3307": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3309": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3310": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3312": {
      "branch": 28,
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "AND",
      "path": "3"
    },
    "3313": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3314": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF2"
    },
    "3317": {
      "branch": 28,
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3318": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3320": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3322": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3323": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3324": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "3326": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "3"
    },
    "3327": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3329": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3330": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3331": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3508
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3332": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3334": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "ADD",
      "path": "3"
    },
    "3335": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3336": {
      "fn": "TS3000.processResult",
      "offset": [
        3525,
        3526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3338": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD13"
    },
    "3341": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3342": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3343": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1571"
    },
    "3346": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3502,
        3526
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3347": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3348": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3349": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3350": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3352": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "3"
    },
    "3353": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3572
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3355": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3579
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3356": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3358": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "ADD",
      "path": "3"
    },
    "3359": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3360": {
      "fn": "TS3000.processResult",
      "offset": [
        3596,
        3597
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3362": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2B"
    },
    "3365": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3366": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3367": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1571"
    },
    "3370": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3573,
        3597
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3371": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3372": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3373": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3374": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3375": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "LT",
      "path": "3"
    },
    "3376": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3B"
    },
    "3379": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3380": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3B"
    },
    "3383": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1532"
    },
    "3386": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3387": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3388": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3389": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3391": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3392": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3394": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3396": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3397": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3398": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3400": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "MUL",
      "path": "3"
    },
    "3401": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "ADD",
      "path": "3"
    },
    "3402": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3404": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "ADD",
      "path": "3"
    },
    "3405": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3406": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3407": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3408": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3410": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "3"
    },
    "3411": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3413": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3661
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3414": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3416": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "ADD",
      "path": "3"
    },
    "3417": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3418": {
      "fn": "TS3000.processResult",
      "offset": [
        3678,
        3679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3420": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD65"
    },
    "3423": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3424": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3425": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1571"
    },
    "3428": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3655,
        3679
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3429": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3430": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3431": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3432": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3433": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "LT",
      "path": "3"
    },
    "3434": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "3437": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3438": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "3441": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1532"
    },
    "3444": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3445": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3446": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3447": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3449": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3450": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3452": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3454": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3455": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3456": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3458": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "MUL",
      "path": "3"
    },
    "3459": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "ADD",
      "path": "3"
    },
    "3460": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3462": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "ADD",
      "path": "3"
    },
    "3463": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3464": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3465": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3466": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3468": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "3"
    },
    "3469": {
      "fn": "TS3000.processResult",
      "offset": [
        3756,
        3779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3471": {
      "fn": "TS3000.processResult",
      "offset": [
        3756,
        3779
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3472": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3732
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3473": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3475": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "ADD",
      "path": "3"
    },
    "3476": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3477": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9E"
    },
    "3480": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3481": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3482": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1571"
    },
    "3485": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3726,
        3779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3486": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3487": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3488": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3489": {
      "fn": "TS3000.processResult",
      "offset": [
        3831,
        3848
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x7"
    },
    "3491": {
      "fn": "TS3000.processResult",
      "offset": [
        3831,
        3848
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3492": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3494": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3495": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3496": {
      "op": "DUP4"
    },
    "3497": {
      "op": "MLOAD"
    },
    "3498": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3500": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3501": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3502": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "ADD",
      "path": "3"
    },
    "3503": {
      "op": "SWAP2"
    },
    "3504": {
      "op": "SWAP1"
    },
    "3505": {
      "op": "SWAP2"
    },
    "3506": {
      "op": "MSTORE"
    },
    "3507": {
      "op": "DUP5"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "op": "MLOAD"
    },
    "3510": {
      "op": "DUP2"
    },
    "3511": {
      "op": "DUP4"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "op": "SWAP1"
    },
    "3515": {
      "op": "DUP4"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "MLOAD"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3520": {
      "op": "DUP1"
    },
    "3521": {
      "op": "DUP4"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "SWAP2"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "op": "SWAP2"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "DUP4"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "MLOAD"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3532": {
      "op": "DUP3"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "MSTORE"
    },
    "3535": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3798
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3536": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3798
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEF"
    },
    "3541": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3547": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3548": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3550": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3551": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3552": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SUB",
      "path": "3"
    },
    "3553": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SUB",
      "path": "3"
    },
    "3554": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3555": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3556": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3557": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3559": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3560": {
      "fn": "TS3000.processResult",
      "offset": [
        3869,
        3886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "3562": {
      "fn": "TS3000.processResult",
      "offset": [
        3869,
        3886
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3563": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF7"
    },
    "3566": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3816,
        3887
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3567": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3568": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "POP",
      "path": "3"
    },
    "3569": {
      "fn": "TS3000.processResult",
      "offset": [
        3420,
        3902
      ],
      "op": "POP",
      "path": "3"
    },
    "3570": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3571": {
      "fn": "TS3000.processResult",
      "offset": [
        2622,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3572": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3573": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "3"
    },
    "3574": {
      "fn": "TS3000.processResult",
      "jump": "o",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3575": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3576": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1506,
        1510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3578": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1542,
        1563
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 23
    },
    "3579": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1531,
        1538
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3580": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1531,
        1563
      ],
      "op": "GT",
      "path": "0"
    },
    "3581": {
      "branch": 35,
      "fn": "BaseClient._submitRequest",
      "offset": [
        1531,
        1563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3582": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3E"
    },
    "3585": {
      "branch": 35,
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3586": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3588": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3595": {
      "op": "SHL"
    },
    "3596": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3597": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3600": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3602": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3603": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "ADD",
      "path": "0"
    },
    "3604": {
      "op": "MSTORE"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3609": {
      "op": "DUP3"
    },
    "3610": {
      "op": "ADD"
    },
    "3611": {
      "op": "MSTORE"
    },
    "3612": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3636": {
      "op": "DUP3"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "3645": {
      "op": "JUMP"
    },
    "3646": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1523,
        1586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3647": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3649": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1628
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3650": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3652": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3653": {
      "op": "PUSH4",
      "value": "0x78F8AF25"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3662": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3663": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1597,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3665": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1597,
        1611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "op": "SUB"
    },
    "3674": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1628
      ],
      "op": "AND",
      "path": "0"
    },
    "3675": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1628
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3676": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF1F15E4A"
    },
    "3681": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3682": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1650,
        1657
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3683": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1650,
        1657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3684": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE73"
    },
    "3687": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3688": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1659,
        1664
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3689": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1659,
        1664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3690": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1666,
        1683
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3691": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1666,
        1683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3692": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3694": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ADD",
      "path": "0"
    },
    "3695": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1584"
    },
    "3698": {
      "fn": "BaseClient._submitRequest",
      "jump": "i",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3699": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3700": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3702": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3704": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3705": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3706": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3707": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "SUB",
      "path": "0"
    },
    "3708": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3709": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3710": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3711": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "GAS",
      "path": "0"
    },
    "3712": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "CALL",
      "path": "0"
    },
    "3713": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3714": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3715": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3716": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE91"
    },
    "3719": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3720": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3721": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3723": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3724": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3725": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3726": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3728": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3729": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3730": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3731": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3732": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3733": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3734": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3735": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3737": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3738": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3739": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3741": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "NOT",
      "path": "0"
    },
    "3742": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3744": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3745": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ADD",
      "path": "0"
    },
    "3746": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "AND",
      "path": "0"
    },
    "3747": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3748": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ADD",
      "path": "0"
    },
    "3749": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3750": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3752": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3753": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3754": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3755": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "ADD",
      "path": "0"
    },
    "3756": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3757": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB6"
    },
    "3760": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3761": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3762": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A6"
    },
    "3765": {
      "fn": "BaseClient._submitRequest",
      "jump": "i",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3766": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1614,
        1684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3767": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1597,
        1684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3768": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1597,
        1684
      ],
      "op": "POP",
      "path": "0"
    },
    "3769": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 24,
      "value": "0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C"
    },
    "3802": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1717,
        1726
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3803": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3805": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3806": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "3809": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3810": {
      "op": "DUP2"
    },
    "3811": {
      "op": "MSTORE"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "SWAP1"
    },
    "3816": {
      "op": "JUMP"
    },
    "3817": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3818": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3820": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3821": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3822": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3823": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "SUB",
      "path": "0"
    },
    "3824": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3825": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1700,
        1727
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3826": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "3828": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3829": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3830": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3831": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3833": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3835": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3836": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3838": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3839": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3840": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3841": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3844": {
      "op": "NOT"
    },
    "3845": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "AND",
      "path": "0"
    },
    "3846": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1768,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3848": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "OR",
      "path": "0"
    },
    "3849": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3850": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1738,
        1772
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3851": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1755,
        1764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3852": {
      "op": "POP"
    },
    "3853": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3854": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3855": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "3856": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "3857": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1406,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "3858": {
      "fn": "BaseClient._submitRequest",
      "jump": "o",
      "offset": [
        1406,
        1811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "DUP5"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "op": "SLT"
    },
    "3868": {
      "op": "ISZERO"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xF25"
    },
    "3872": {
      "op": "JUMPI"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3875": {
      "op": "DUP1"
    },
    "3876": {
      "op": "REVERT"
    },
    "3877": {
      "op": "JUMPDEST"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "CALLDATALOAD"
    },
    "3880": {
      "op": "SWAP2"
    },
    "3881": {
      "op": "SWAP1"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "jump": "o",
      "op": "JUMP"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3887": {
      "op": "JUMPDEST"
    },
    "3888": {
      "op": "DUP4"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "LT"
    },
    "3891": {
      "op": "ISZERO"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF47"
    },
    "3895": {
      "op": "JUMPI"
    },
    "3896": {
      "op": "DUP2"
    },
    "3897": {
      "op": "DUP2"
    },
    "3898": {
      "op": "ADD"
    },
    "3899": {
      "op": "MLOAD"
    },
    "3900": {
      "op": "DUP4"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3906": {
      "op": "ADD"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0xF2F"
    },
    "3910": {
      "op": "JUMP"
    },
    "3911": {
      "op": "JUMPDEST"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3916": {
      "op": "SWAP2"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "jump": "o",
      "op": "JUMP"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3923": {
      "op": "DUP2"
    },
    "3924": {
      "op": "MLOAD"
    },
    "3925": {
      "op": "DUP1"
    },
    "3926": {
      "op": "DUP5"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF68"
    },
    "3931": {
      "op": "DUP2"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3934": {
      "op": "DUP7"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3938": {
      "op": "DUP7"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3943": {
      "jump": "i",
      "op": "JUMP"
    },
    "3944": {
      "op": "JUMPDEST"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3950": {
      "op": "NOT"
    },
    "3951": {
      "op": "AND"
    },
    "3952": {
      "op": "SWAP3"
    },
    "3953": {
      "op": "SWAP1"
    },
    "3954": {
      "op": "SWAP3"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "SWAP3"
    },
    "3960": {
      "op": "SWAP2"
    },
    "3961": {
      "op": "POP"
    },
    "3962": {
      "op": "POP"
    },
    "3963": {
      "jump": "o",
      "op": "JUMP"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3971": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3976": {
      "op": "DUP4"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "op": "DUP5"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3982": {
      "jump": "i",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "SWAP4"
    },
    "3985": {
      "op": "SWAP3"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "jump": "o",
      "op": "JUMP"
    },
    "3990": {
      "op": "JUMPDEST"
    },
    "3991": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4011": {
      "op": "REVERT"
    },
    "4012": {
      "op": "JUMPDEST"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4015": {
      "op": "MLOAD"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4019": {
      "op": "DUP2"
    },
    "4020": {
      "op": "ADD"
    },
    "4021": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4030": {
      "op": "DUP2"
    },
    "4031": {
      "op": "GT"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "DUP3"
    },
    "4034": {
      "op": "LT"
    },
    "4035": {
      "op": "OR"
    },
    "4036": {
      "op": "ISZERO"
    },
    "4037": {
      "op": "PUSH2",
      "value": "0xFD0"
    },
    "4040": {
      "op": "JUMPI"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xFD0"
    },
    "4044": {
      "op": "PUSH2",
      "value": "0xF96"
    },
    "4047": {
      "jump": "i",
      "op": "JUMP"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "jump": "o",
      "op": "JUMP"
    },
    "4054": {
      "op": "JUMPDEST"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4057": {
      "op": "MLOAD"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4060": {
      "op": "DUP3"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4064": {
      "op": "NOT"
    },
    "4065": {
      "op": "AND"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "ADD"
    },
    "4068": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4077": {
      "op": "DUP2"
    },
    "4078": {
      "op": "GT"
    },
    "4079": {
      "op": "DUP3"
    },
    "4080": {
      "op": "DUP3"
    },
    "4081": {
      "op": "LT"
    },
    "4082": {
      "op": "OR"
    },
    "4083": {
      "op": "ISZERO"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFFF"
    },
    "4087": {
      "op": "JUMPI"
    },
    "4088": {
      "op": "PUSH2",
      "value": "0xFFF"
    },
    "4091": {
      "op": "PUSH2",
      "value": "0xF96"
    },
    "4094": {
      "jump": "i",
      "op": "JUMP"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4098": {
      "op": "MSTORE"
    },
    "4099": {
      "op": "SWAP2"
    },
    "4100": {
      "op": "SWAP1"
    },
    "4101": {
      "op": "POP"
    },
    "4102": {
      "jump": "o",
      "op": "JUMP"
    },
    "4103": {
      "op": "JUMPDEST"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4106": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4115": {
      "op": "DUP3"
    },
    "4116": {
      "op": "GT"
    },
    "4117": {
      "op": "ISZERO"
    },
    "4118": {
      "op": "PUSH2",
      "value": "0x1021"
    },
    "4121": {
      "op": "JUMPI"
    },
    "4122": {
      "op": "PUSH2",
      "value": "0x1021"
    },
    "4125": {
      "op": "PUSH2",
      "value": "0xF96"
    },
    "4128": {
      "jump": "i",
      "op": "JUMP"
    },
    "4129": {
      "op": "JUMPDEST"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4136": {
      "op": "NOT"
    },
    "4137": {
      "op": "AND"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "op": "SWAP1"
    },
    "4142": {
      "jump": "o",
      "op": "JUMP"
    },
    "4143": {
      "op": "JUMPDEST"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4146": {
      "op": "DUP1"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4151": {
      "op": "DUP5"
    },
    "4152": {
      "op": "DUP7"
    },
    "4153": {
      "op": "SUB"
    },
    "4154": {
      "op": "SLT"
    },
    "4155": {
      "op": "ISZERO"
    },
    "4156": {
      "op": "PUSH2",
      "value": "0x1044"
    },
    "4159": {
      "op": "JUMPI"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4162": {
      "op": "DUP1"
    },
    "4163": {
      "op": "REVERT"
    },
    "4164": {
      "op": "JUMPDEST"
    },
    "4165": {
      "op": "DUP4"
    },
    "4166": {
      "op": "CALLDATALOAD"
    },
    "4167": {
      "op": "SWAP3"
    },
    "4168": {
      "op": "POP"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4171": {
      "op": "DUP5"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "op": "CALLDATALOAD"
    },
    "4174": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4183": {
      "op": "DUP2"
    },
    "4184": {
      "op": "GT"
    },
    "4185": {
      "op": "ISZERO"
    },
    "4186": {
      "op": "PUSH2",
      "value": "0x1062"
    },
    "4189": {
      "op": "JUMPI"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4192": {
      "op": "DUP1"
    },
    "4193": {
      "op": "REVERT"
    },
    "4194": {
      "op": "JUMPDEST"
    },
    "4195": {
      "op": "DUP5"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4199": {
      "op": "DUP2"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "DUP7"
    },
    "4202": {
      "op": "SGT"
    },
    "4203": {
      "op": "PUSH2",
      "value": "0x1073"
    },
    "4206": {
      "op": "JUMPI"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4209": {
      "op": "DUP1"
    },
    "4210": {
      "op": "REVERT"
    },
    "4211": {
      "op": "JUMPDEST"
    },
    "4212": {
      "op": "DUP1"
    },
    "4213": {
      "op": "CALLDATALOAD"
    },
    "4214": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1081"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "PUSH2",
      "value": "0x1007"
    },
    "4224": {
      "jump": "i",
      "op": "JUMP"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "PUSH2",
      "value": "0xFD6"
    },
    "4229": {
      "jump": "i",
      "op": "JUMP"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "DUP2"
    },
    "4232": {
      "op": "DUP2"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "DUP8"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4237": {
      "op": "DUP4"
    },
    "4238": {
      "op": "DUP6"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "ADD"
    },
    "4241": {
      "op": "GT"
    },
    "4242": {
      "op": "ISZERO"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4246": {
      "op": "JUMPI"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "REVERT"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "DUP2"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4255": {
      "op": "DUP5"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4259": {
      "op": "DUP4"
    },
    "4260": {
      "op": "ADD"
    },
    "4261": {
      "op": "CALLDATACOPY"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4266": {
      "op": "DUP4"
    },
    "4267": {
      "op": "DUP4"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "DUP1"
    },
    "4272": {
      "op": "SWAP5"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4279": {
      "op": "DUP5"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "CALLDATALOAD"
    },
    "4282": {
      "op": "SWAP1"
    },
    "4283": {
      "op": "POP"
    },
    "4284": {
      "op": "SWAP3"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "op": "SWAP3"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "op": "SWAP3"
    },
    "4289": {
      "jump": "o",
      "op": "JUMP"
    },
    "4290": {
      "op": "JUMPDEST"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4293": {
      "op": "DUP1"
    },
    "4294": {
      "op": "DUP4"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4297": {
      "op": "DUP5"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "SLT"
    },
    "4300": {
      "op": "PUSH2",
      "value": "0x10D4"
    },
    "4303": {
      "op": "JUMPI"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "DUP1"
    },
    "4307": {
      "op": "REVERT"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "DUP2"
    },
    "4311": {
      "op": "CALLDATALOAD"
    },
    "4312": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4321": {
      "op": "DUP2"
    },
    "4322": {
      "op": "GT"
    },
    "4323": {
      "op": "ISZERO"
    },
    "4324": {
      "op": "PUSH2",
      "value": "0x10EC"
    },
    "4327": {
      "op": "JUMPI"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4330": {
      "op": "DUP1"
    },
    "4331": {
      "op": "REVERT"
    },
    "4332": {
      "op": "JUMPDEST"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4335": {
      "op": "DUP4"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "SWAP2"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "DUP4"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4342": {
      "op": "DUP3"
    },
    "4343": {
      "op": "DUP6"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "GT"
    },
    "4347": {
      "op": "ISZERO"
    },
    "4348": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4351": {
      "op": "JUMPI"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "DUP1"
    },
    "4355": {
      "op": "REVERT"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "SWAP3"
    },
    "4358": {
      "op": "POP"
    },
    "4359": {
      "op": "SWAP3"
    },
    "4360": {
      "op": "SWAP1"
    },
    "4361": {
      "op": "POP"
    },
    "4362": {
      "jump": "o",
      "op": "JUMP"
    },
    "4363": {
      "op": "JUMPDEST"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4366": {
      "op": "DUP1"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4371": {
      "op": "DUP5"
    },
    "4372": {
      "op": "DUP7"
    },
    "4373": {
      "op": "SUB"
    },
    "4374": {
      "op": "SLT"
    },
    "4375": {
      "op": "ISZERO"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x1120"
    },
    "4379": {
      "op": "JUMPI"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4382": {
      "op": "DUP1"
    },
    "4383": {
      "op": "REVERT"
    },
    "4384": {
      "op": "JUMPDEST"
    },
    "4385": {
      "op": "DUP4"
    },
    "4386": {
      "op": "CALLDATALOAD"
    },
    "4387": {
      "op": "SWAP3"
    },
    "4388": {
      "op": "POP"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4391": {
      "op": "DUP5"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "CALLDATALOAD"
    },
    "4394": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4403": {
      "op": "DUP2"
    },
    "4404": {
      "op": "GT"
    },
    "4405": {
      "op": "ISZERO"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x113E"
    },
    "4409": {
      "op": "JUMPI"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4412": {
      "op": "DUP1"
    },
    "4413": {
      "op": "REVERT"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0x114A"
    },
    "4418": {
      "op": "DUP7"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "DUP8"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "4425": {
      "jump": "i",
      "op": "JUMP"
    },
    "4426": {
      "op": "JUMPDEST"
    },
    "4427": {
      "op": "SWAP5"
    },
    "4428": {
      "op": "SWAP8"
    },
    "4429": {
      "op": "SWAP1"
    },
    "4430": {
      "op": "SWAP7"
    },
    "4431": {
      "op": "POP"
    },
    "4432": {
      "op": "SWAP4"
    },
    "4433": {
      "op": "SWAP5"
    },
    "4434": {
      "op": "POP"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "op": "POP"
    },
    "4438": {
      "jump": "o",
      "op": "JUMP"
    },
    "4439": {
      "op": "JUMPDEST"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4442": {
      "op": "DUP1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4445": {
      "op": "DUP4"
    },
    "4446": {
      "op": "DUP6"
    },
    "4447": {
      "op": "SUB"
    },
    "4448": {
      "op": "SLT"
    },
    "4449": {
      "op": "ISZERO"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4456": {
      "op": "DUP1"
    },
    "4457": {
      "op": "REVERT"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "CALLDATALOAD"
    },
    "4461": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4470": {
      "op": "DUP2"
    },
    "4471": {
      "op": "GT"
    },
    "4472": {
      "op": "ISZERO"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4476": {
      "op": "JUMPI"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4479": {
      "op": "DUP1"
    },
    "4480": {
      "op": "REVERT"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4485": {
      "op": "DUP6"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "DUP7"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "4492": {
      "jump": "i",
      "op": "JUMP"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "SWAP1"
    },
    "4495": {
      "op": "SWAP7"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "op": "SWAP6"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "SWAP4"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "jump": "o",
      "op": "JUMP"
    },
    "4505": {
      "op": "JUMPDEST"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4508": {
      "op": "DUP1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4511": {
      "op": "DUP1"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4514": {
      "op": "DUP6"
    },
    "4515": {
      "op": "DUP8"
    },
    "4516": {
      "op": "SUB"
    },
    "4517": {
      "op": "SLT"
    },
    "4518": {
      "op": "ISZERO"
    },
    "4519": {
      "op": "PUSH2",
      "value": "0x11AF"
    },
    "4522": {
      "op": "JUMPI"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4525": {
      "op": "DUP1"
    },
    "4526": {
      "op": "REVERT"
    },
    "4527": {
      "op": "JUMPDEST"
    },
    "4528": {
      "op": "DUP5"
    },
    "4529": {
      "op": "CALLDATALOAD"
    },
    "4530": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4539": {
      "op": "DUP1"
    },
    "4540": {
      "op": "DUP3"
    },
    "4541": {
      "op": "GT"
    },
    "4542": {
      "op": "ISZERO"
    },
    "4543": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4546": {
      "op": "JUMPI"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4549": {
      "op": "DUP1"
    },
    "4550": {
      "op": "REVERT"
    },
    "4551": {
      "op": "JUMPDEST"
    },
    "4552": {
      "op": "PUSH2",
      "value": "0x11D3"
    },
    "4555": {
      "op": "DUP9"
    },
    "4556": {
      "op": "DUP4"
    },
    "4557": {
      "op": "DUP10"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "4562": {
      "jump": "i",
      "op": "JUMP"
    },
    "4563": {
      "op": "JUMPDEST"
    },
    "4564": {
      "op": "SWAP1"
    },
    "4565": {
      "op": "SWAP7"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "op": "SWAP5"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4571": {
      "op": "DUP8"
    },
    "4572": {
      "op": "ADD"
    },
    "4573": {
      "op": "CALLDATALOAD"
    },
    "4574": {
      "op": "SWAP2"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "DUP3"
    },
    "4578": {
      "op": "GT"
    },
    "4579": {
      "op": "ISZERO"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0x11EC"
    },
    "4583": {
      "op": "JUMPI"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4586": {
      "op": "DUP1"
    },
    "4587": {
      "op": "REVERT"
    },
    "4588": {
      "op": "JUMPDEST"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "op": "PUSH2",
      "value": "0x11F9"
    },
    "4593": {
      "op": "DUP8"
    },
    "4594": {
      "op": "DUP3"
    },
    "4595": {
      "op": "DUP9"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x10C2"
    },
    "4600": {
      "jump": "i",
      "op": "JUMP"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "SWAP6"
    },
    "4603": {
      "op": "SWAP9"
    },
    "4604": {
      "op": "SWAP5"
    },
    "4605": {
      "op": "SWAP8"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "SWAP6"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "POP"
    },
    "4612": {
      "jump": "o",
      "op": "JUMP"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4616": {
      "op": "DUP1"
    },
    "4617": {
      "op": "DUP3"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4621": {
      "op": "SWAP1"
    },
    "4622": {
      "op": "DUP3"
    },
    "4623": {
      "op": "ADD"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4660": {
      "op": "DUP3"
    },
    "4661": {
      "op": "ADD"
    },
    "4662": {
      "op": "MSTORE"
    },
    "4663": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4671": {
      "op": "SHL"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "SWAP1"
    },
    "4681": {
      "jump": "o",
      "op": "JUMP"
    },
    "4682": {
      "op": "JUMPDEST"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "MLOAD"
    },
    "4685": {
      "op": "DUP1"
    },
    "4686": {
      "op": "ISZERO"
    },
    "4687": {
      "op": "ISZERO"
    },
    "4688": {
      "op": "DUP2"
    },
    "4689": {
      "op": "EQ"
    },
    "4690": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "4693": {
      "op": "JUMPI"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4696": {
      "op": "DUP1"
    },
    "4697": {
      "op": "REVERT"
    },
    "4698": {
      "op": "JUMPDEST"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4703": {
      "op": "DUP3"
    },
    "4704": {
      "op": "DUP5"
    },
    "4705": {
      "op": "SUB"
    },
    "4706": {
      "op": "SLT"
    },
    "4707": {
      "op": "ISZERO"
    },
    "4708": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4711": {
      "op": "JUMPI"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "REVERT"
    },
    "4716": {
      "op": "JUMPDEST"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "4720": {
      "op": "DUP3"
    },
    "4721": {
      "op": "PUSH2",
      "value": "0x124A"
    },
    "4724": {
      "jump": "i",
      "op": "JUMP"
    },
    "4725": {
      "op": "JUMPDEST"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4731": {
      "op": "DUP4"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "op": "SLT"
    },
    "4734": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4737": {
      "op": "JUMPI"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4740": {
      "op": "DUP1"
    },
    "4741": {
      "op": "REVERT"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "DUP2"
    },
    "4744": {
      "op": "MLOAD"
    },
    "4745": {
      "op": "PUSH2",
      "value": "0x1294"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0x1081"
    },
    "4751": {
      "op": "DUP3"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x1007"
    },
    "4755": {
      "jump": "i",
      "op": "JUMP"
    },
    "4756": {
      "op": "JUMPDEST"
    },
    "4757": {
      "op": "DUP2"
    },
    "4758": {
      "op": "DUP2"
    },
    "4759": {
      "op": "MSTORE"
    },
    "4760": {
      "op": "DUP5"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4763": {
      "op": "DUP4"
    },
    "4764": {
      "op": "DUP7"
    },
    "4765": {
      "op": "ADD"
    },
    "4766": {
      "op": "ADD"
    },
    "4767": {
      "op": "GT"
    },
    "4768": {
      "op": "ISZERO"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x12A9"
    },
    "4772": {
      "op": "JUMPI"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP1"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4784": {
      "op": "DUP4"
    },
    "4785": {
      "op": "ADD"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4788": {
      "op": "DUP8"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "4793": {
      "jump": "i",
      "op": "JUMP"
    },
    "4794": {
      "op": "JUMPDEST"
    },
    "4795": {
      "op": "DUP1"
    },
    "4796": {
      "op": "MLOAD"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4803": {
      "op": "SHL"
    },
    "4804": {
      "op": "SUB"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "AND"
    },
    "4807": {
      "op": "DUP2"
    },
    "4808": {
      "op": "EQ"
    },
    "4809": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "4812": {
      "op": "JUMPI"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4815": {
      "op": "DUP1"
    },
    "4816": {
      "op": "REVERT"
    },
    "4817": {
      "op": "JUMPDEST"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "DUP5"
    },
    "4824": {
      "op": "SUB"
    },
    "4825": {
      "op": "SLT"
    },
    "4826": {
      "op": "ISZERO"
    },
    "4827": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "4830": {
      "op": "JUMPI"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "op": "DUP1"
    },
    "4834": {
      "op": "REVERT"
    },
    "4835": {
      "op": "JUMPDEST"
    },
    "4836": {
      "op": "DUP2"
    },
    "4837": {
      "op": "MLOAD"
    },
    "4838": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4847": {
      "op": "DUP1"
    },
    "4848": {
      "op": "DUP3"
    },
    "4849": {
      "op": "GT"
    },
    "4850": {
      "op": "ISZERO"
    },
    "4851": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4854": {
      "op": "JUMPI"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4857": {
      "op": "DUP1"
    },
    "4858": {
      "op": "REVERT"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "SWAP1"
    },
    "4861": {
      "op": "DUP4"
    },
    "4862": {
      "op": "ADD"
    },
    "4863": {
      "op": "SWAP1"
    },
    "4864": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4867": {
      "op": "DUP3"
    },
    "4868": {
      "op": "DUP7"
    },
    "4869": {
      "op": "SUB"
    },
    "4870": {
      "op": "SLT"
    },
    "4871": {
      "op": "ISZERO"
    },
    "4872": {
      "op": "PUSH2",
      "value": "0x1310"
    },
    "4875": {
      "op": "JUMPI"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4878": {
      "op": "DUP1"
    },
    "4879": {
      "op": "REVERT"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "PUSH2",
      "value": "0x1318"
    },
    "4884": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4887": {
      "jump": "i",
      "op": "JUMP"
    },
    "4888": {
      "op": "JUMPDEST"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "MLOAD"
    },
    "4891": {
      "op": "DUP2"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4895": {
      "op": "DUP4"
    },
    "4896": {
      "op": "ADD"
    },
    "4897": {
      "op": "MLOAD"
    },
    "4898": {
      "op": "DUP3"
    },
    "4899": {
      "op": "DUP2"
    },
    "4900": {
      "op": "GT"
    },
    "4901": {
      "op": "ISZERO"
    },
    "4902": {
      "op": "PUSH2",
      "value": "0x132E"
    },
    "4905": {
      "op": "JUMPI"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4908": {
      "op": "DUP1"
    },
    "4909": {
      "op": "REVERT"
    },
    "4910": {
      "op": "JUMPDEST"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x133A"
    },
    "4914": {
      "op": "DUP8"
    },
    "4915": {
      "op": "DUP3"
    },
    "4916": {
      "op": "DUP7"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "PUSH2",
      "value": "0x1275"
    },
    "4921": {
      "jump": "i",
      "op": "JUMP"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4925": {
      "op": "DUP4"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4931": {
      "op": "DUP4"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "MLOAD"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4936": {
      "op": "DUP3"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4941": {
      "op": "DUP4"
    },
    "4942": {
      "op": "ADD"
    },
    "4943": {
      "op": "MLOAD"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4946": {
      "op": "DUP3"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "op": "MSTORE"
    },
    "4949": {
      "op": "PUSH2",
      "value": "0x1360"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4954": {
      "op": "DUP5"
    },
    "4955": {
      "op": "ADD"
    },
    "4956": {
      "op": "PUSH2",
      "value": "0x12BA"
    },
    "4959": {
      "jump": "i",
      "op": "JUMP"
    },
    "4960": {
      "op": "JUMPDEST"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "MSTORE"
    },
    "4966": {
      "op": "PUSH2",
      "value": "0x1371"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4971": {
      "op": "DUP5"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x12BA"
    },
    "4976": {
      "jump": "i",
      "op": "JUMP"
    },
    "4977": {
      "op": "JUMPDEST"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "ADD"
    },
    "4982": {
      "op": "MSTORE"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4985": {
      "op": "DUP4"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "MLOAD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4990": {
      "op": "DUP3"
    },
    "4991": {
      "op": "ADD"
    },
    "4992": {
      "op": "MSTORE"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4995": {
      "op": "DUP4"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "MLOAD"
    },
    "4998": {
      "op": "DUP3"
    },
    "4999": {
      "op": "DUP2"
    },
    "5000": {
      "op": "GT"
    },
    "5001": {
      "op": "ISZERO"
    },
    "5002": {
      "op": "PUSH2",
      "value": "0x1392"
    },
    "5005": {
      "op": "JUMPI"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5008": {
      "op": "DUP1"
    },
    "5009": {
      "op": "REVERT"
    },
    "5010": {
      "op": "JUMPDEST"
    },
    "5011": {
      "op": "PUSH2",
      "value": "0x139E"
    },
    "5014": {
      "op": "DUP8"
    },
    "5015": {
      "op": "DUP3"
    },
    "5016": {
      "op": "DUP7"
    },
    "5017": {
      "op": "ADD"
    },
    "5018": {
      "op": "PUSH2",
      "value": "0x1275"
    },
    "5021": {
      "jump": "i",
      "op": "JUMP"
    },
    "5022": {
      "op": "JUMPDEST"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5025": {
      "op": "DUP4"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "MSTORE"
    },
    "5028": {
      "op": "POP"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5032": {
      "op": "SWAP2"
    },
    "5033": {
      "op": "POP"
    },
    "5034": {
      "op": "PUSH2",
      "value": "0x13B4"
    },
    "5037": {
      "op": "DUP3"
    },
    "5038": {
      "op": "DUP5"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "op": "PUSH2",
      "value": "0x124A"
    },
    "5043": {
      "jump": "i",
      "op": "JUMP"
    },
    "5044": {
      "op": "JUMPDEST"
    },
    "5045": {
      "op": "SWAP2"
    },
    "5046": {
      "op": "DUP2"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "op": "SWAP2"
    },
    "5049": {
      "op": "SWAP1"
    },
    "5050": {
      "op": "SWAP2"
    },
    "5051": {
      "op": "MSTORE"
    },
    "5052": {
      "op": "SWAP5"
    },
    "5053": {
      "op": "SWAP4"
    },
    "5054": {
      "op": "POP"
    },
    "5055": {
      "op": "POP"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "jump": "o",
      "op": "JUMP"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "DUP2"
    },
    "5061": {
      "op": "DUP4"
    },
    "5062": {
      "op": "MSTORE"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "DUP2"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5067": {
      "op": "DUP6"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "op": "CALLDATACOPY"
    },
    "5070": {
      "op": "POP"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5073": {
      "op": "DUP3"
    },
    "5074": {
      "op": "DUP3"
    },
    "5075": {
      "op": "ADD"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5078": {
      "op": "SWAP1"
    },
    "5079": {
      "op": "DUP2"
    },
    "5080": {
      "op": "ADD"
    },
    "5081": {
      "op": "SWAP2"
    },
    "5082": {
      "op": "SWAP1"
    },
    "5083": {
      "op": "SWAP2"
    },
    "5084": {
      "op": "MSTORE"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5087": {
      "op": "SWAP1"
    },
    "5088": {
      "op": "SWAP2"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5092": {
      "op": "NOT"
    },
    "5093": {
      "op": "AND"
    },
    "5094": {
      "op": "SWAP1"
    },
    "5095": {
      "op": "SWAP2"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "ADD"
    },
    "5098": {
      "op": "SWAP1"
    },
    "5099": {
      "jump": "o",
      "op": "JUMP"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "DUP4"
    },
    "5102": {
      "op": "DUP2"
    },
    "5103": {
      "op": "MSTORE"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5108": {
      "op": "DUP3"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "MSTORE"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5113": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5118": {
      "op": "DUP4"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "DUP5"
    },
    "5121": {
      "op": "DUP7"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5125": {
      "jump": "i",
      "op": "JUMP"
    },
    "5126": {
      "op": "JUMPDEST"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5129": {
      "op": "DUP2"
    },
    "5130": {
      "op": "MSTORE"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5133": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5138": {
      "op": "DUP4"
    },
    "5139": {
      "op": "ADD"
    },
    "5140": {
      "op": "DUP5"
    },
    "5141": {
      "op": "DUP7"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5145": {
      "jump": "i",
      "op": "JUMP"
    },
    "5146": {
      "op": "JUMPDEST"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5149": {
      "op": "DUP3"
    },
    "5150": {
      "op": "MLOAD"
    },
    "5151": {
      "op": "PUSH2",
      "value": "0x142C"
    },
    "5154": {
      "op": "DUP2"
    },
    "5155": {
      "op": "DUP5"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "DUP8"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "5163": {
      "jump": "i",
      "op": "JUMP"
    },
    "5164": {
      "op": "JUMPDEST"
    },
    "5165": {
      "op": "SWAP2"
    },
    "5166": {
      "op": "SWAP1"
    },
    "5167": {
      "op": "SWAP2"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "SWAP3"
    },
    "5170": {
      "op": "SWAP2"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "jump": "o",
      "op": "JUMP"
    },
    "5174": {
      "op": "JUMPDEST"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "DUP2"
    },
    "5178": {
      "op": "DUP2"
    },
    "5179": {
      "op": "SHR"
    },
    "5180": {
      "op": "SWAP1"
    },
    "5181": {
      "op": "DUP3"
    },
    "5182": {
      "op": "AND"
    },
    "5183": {
      "op": "DUP1"
    },
    "5184": {
      "op": "PUSH2",
      "value": "0x144A"
    },
    "5187": {
      "op": "JUMPI"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "AND"
    },
    "5192": {
      "op": "SWAP2"
    },
    "5193": {
      "op": "POP"
    },
    "5194": {
      "op": "JUMPDEST"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5197": {
      "op": "DUP3"
    },
    "5198": {
      "op": "LT"
    },
    "5199": {
      "op": "DUP2"
    },
    "5200": {
      "op": "SUB"
    },
    "5201": {
      "op": "PUSH2",
      "value": "0x146A"
    },
    "5204": {
      "op": "JUMPI"
    },
    "5205": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5212": {
      "op": "SHL"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5215": {
      "op": "MSTORE"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5220": {
      "op": "MSTORE"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "REVERT"
    },
    "5226": {
      "op": "JUMPDEST"
    },
    "5227": {
      "op": "POP"
    },
    "5228": {
      "op": "SWAP2"
    },
    "5229": {
      "op": "SWAP1"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "jump": "o",
      "op": "JUMP"
    },
    "5232": {
      "op": "JUMPDEST"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5237": {
      "op": "DUP3"
    },
    "5238": {
      "op": "DUP5"
    },
    "5239": {
      "op": "SUB"
    },
    "5240": {
      "op": "SLT"
    },
    "5241": {
      "op": "ISZERO"
    },
    "5242": {
      "op": "PUSH2",
      "value": "0x1482"
    },
    "5245": {
      "op": "JUMPI"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5248": {
      "op": "DUP1"
    },
    "5249": {
      "op": "REVERT"
    },
    "5250": {
      "op": "JUMPDEST"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5253": {
      "op": "MLOAD"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "DUP2"
    },
    "5259": {
      "op": "DUP2"
    },
    "5260": {
      "op": "LT"
    },
    "5261": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "GT"
    },
    "5272": {
      "op": "OR"
    },
    "5273": {
      "op": "ISZERO"
    },
    "5274": {
      "op": "PUSH2",
      "value": "0x14A5"
    },
    "5277": {
      "op": "JUMPI"
    },
    "5278": {
      "op": "PUSH2",
      "value": "0x14A5"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0xF96"
    },
    "5284": {
      "jump": "i",
      "op": "JUMP"
    },
    "5285": {
      "op": "JUMPDEST"
    },
    "5286": {
      "op": "DUP1"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5289": {
      "op": "MSTORE"
    },
    "5290": {
      "op": "POP"
    },
    "5291": {
      "op": "DUP3"
    },
    "5292": {
      "op": "CALLDATALOAD"
    },
    "5293": {
      "op": "DUP2"
    },
    "5294": {
      "op": "MSTORE"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5297": {
      "op": "DUP4"
    },
    "5298": {
      "op": "ADD"
    },
    "5299": {
      "op": "CALLDATALOAD"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5302": {
      "op": "DUP3"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "MSTORE"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5307": {
      "op": "DUP4"
    },
    "5308": {
      "op": "ADD"
    },
    "5309": {
      "op": "CALLDATALOAD"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5312": {
      "op": "DUP3"
    },
    "5313": {
      "op": "ADD"
    },
    "5314": {
      "op": "MSTORE"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5317": {
      "op": "DUP4"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "CALLDATALOAD"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5322": {
      "op": "DUP3"
    },
    "5323": {
      "op": "ADD"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "op": "DUP1"
    },
    "5326": {
      "op": "SWAP2"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "op": "SWAP3"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "jump": "o",
      "op": "JUMP"
    },
    "5334": {
      "op": "JUMPDEST"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "DUP5"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "op": "SLT"
    },
    "5343": {
      "op": "ISZERO"
    },
    "5344": {
      "op": "PUSH2",
      "value": "0x14E8"
    },
    "5347": {
      "op": "JUMPI"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5350": {
      "op": "DUP1"
    },
    "5351": {
      "op": "REVERT"
    },
    "5352": {
      "op": "JUMPDEST"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5355": {
      "op": "MLOAD"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5358": {
      "op": "DUP2"
    },
    "5359": {
      "op": "ADD"
    },
    "5360": {
      "op": "DUP2"
    },
    "5361": {
      "op": "DUP2"
    },
    "5362": {
      "op": "LT"
    },
    "5363": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5372": {
      "op": "DUP3"
    },
    "5373": {
      "op": "GT"
    },
    "5374": {
      "op": "OR"
    },
    "5375": {
      "op": "ISZERO"
    },
    "5376": {
      "op": "PUSH2",
      "value": "0x150B"
    },
    "5379": {
      "op": "JUMPI"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x150B"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0xF96"
    },
    "5386": {
      "jump": "i",
      "op": "JUMP"
    },
    "5387": {
      "op": "JUMPDEST"
    },
    "5388": {
      "op": "DUP1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5391": {
      "op": "MSTORE"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "DUP3"
    },
    "5394": {
      "op": "CALLDATALOAD"
    },
    "5395": {
      "op": "DUP2"
    },
    "5396": {
      "op": "MSTORE"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5399": {
      "op": "DUP4"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "op": "CALLDATALOAD"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5404": {
      "op": "DUP3"
    },
    "5405": {
      "op": "ADD"
    },
    "5406": {
      "op": "MSTORE"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5409": {
      "op": "DUP4"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "op": "CALLDATALOAD"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5414": {
      "op": "DUP3"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "MSTORE"
    },
    "5417": {
      "op": "DUP1"
    },
    "5418": {
      "op": "SWAP2"
    },
    "5419": {
      "op": "POP"
    },
    "5420": {
      "op": "POP"
    },
    "5421": {
      "op": "SWAP3"
    },
    "5422": {
      "op": "SWAP2"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "jump": "o",
      "op": "JUMP"
    },
    "5426": {
      "op": "JUMPDEST"
    },
    "5427": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5434": {
      "op": "SHL"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5437": {
      "op": "MSTORE"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5442": {
      "op": "MSTORE"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5447": {
      "op": "REVERT"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5456": {
      "op": "SHL"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5464": {
      "op": "MSTORE"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5469": {
      "op": "REVERT"
    },
    "5470": {
      "op": "JUMPDEST"
    },
    "5471": {
      "op": "DUP2"
    },
    "5472": {
      "op": "DUP2"
    },
    "5473": {
      "op": "SUB"
    },
    "5474": {
      "op": "DUP2"
    },
    "5475": {
      "op": "DUP2"
    },
    "5476": {
      "op": "GT"
    },
    "5477": {
      "op": "ISZERO"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "5481": {
      "op": "JUMPI"
    },
    "5482": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5488": {
      "jump": "i",
      "op": "JUMP"
    },
    "5489": {
      "op": "JUMPDEST"
    },
    "5490": {
      "op": "DUP1"
    },
    "5491": {
      "op": "DUP3"
    },
    "5492": {
      "op": "ADD"
    },
    "5493": {
      "op": "DUP1"
    },
    "5494": {
      "op": "DUP3"
    },
    "5495": {
      "op": "GT"
    },
    "5496": {
      "op": "ISZERO"
    },
    "5497": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "5500": {
      "op": "JUMPI"
    },
    "5501": {
      "op": "PUSH2",
      "value": "0xAC9"
    },
    "5504": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5507": {
      "jump": "i",
      "op": "JUMP"
    },
    "5508": {
      "op": "JUMPDEST"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5511": {
      "op": "DUP2"
    },
    "5512": {
      "op": "MSTORE"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1597"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5520": {
      "op": "DUP4"
    },
    "5521": {
      "op": "ADD"
    },
    "5522": {
      "op": "DUP6"
    },
    "5523": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "5526": {
      "jump": "i",
      "op": "JUMP"
    },
    "5527": {
      "op": "JUMPDEST"
    },
    "5528": {
      "op": "SWAP1"
    },
    "5529": {
      "op": "POP"
    },
    "5530": {
      "op": "DUP3"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5533": {
      "op": "DUP4"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "MSTORE"
    },
    "5536": {
      "op": "SWAP4"
    },
    "5537": {
      "op": "SWAP3"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "op": "POP"
    },
    "5540": {
      "op": "POP"
    },
    "5541": {
      "jump": "o",
      "op": "JUMP"
    },
    "5542": {
      "op": "JUMPDEST"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5547": {
      "op": "DUP3"
    },
    "5548": {
      "op": "DUP5"
    },
    "5549": {
      "op": "SUB"
    },
    "5550": {
      "op": "SLT"
    },
    "5551": {
      "op": "ISZERO"
    },
    "5552": {
      "op": "PUSH2",
      "value": "0x15B8"
    },
    "5555": {
      "op": "JUMPI"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5558": {
      "op": "DUP1"
    },
    "5559": {
      "op": "REVERT"
    },
    "5560": {
      "op": "JUMPDEST"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "op": "MLOAD"
    },
    "5563": {
      "op": "SWAP2"
    },
    "5564": {
      "op": "SWAP1"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c374bd8508daee07ae923fcf042d2a8b6c27cbd9",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./BaseClient.sol\";\n\n\ncontract TS3000 is BaseClient {\n\n    struct KeyFragment {\n        bytes32 globalHash;\n        bytes32 localHash;\n        uint passcode;\n    }\n\n    struct Input {\n        uint fragmentIndex;\n        bytes32 globalHash;\n        bytes32 localHash;\n        uint minTimestamp;\n    }\n\n    struct Result {\n        uint fragmentIndex;\n        uint timestampRestriction;\n        uint passcode;\n    }\n\n    event keyFullyMined();\n\n    string public encryptedDataRefference;\n    KeyFragment[] public keyFragments;\n    bytes32 public finalKey;\n\n    uint public fragmentDifficulty;\n    uint public rewardPerFragment;\n    uint public postProcessingGas;\n    uint public minTimeFramePerFragment;\n    bool public postProcessingEnabled;\n    \n    constructor(address brokerAddress, string memory _encryptedDataRefference, bytes32 firstLocalHash, bytes32[] memory globalHashes, uint _minTimeFramePerFragment, uint _fragmentDifficulty) BaseClient(brokerAddress) payable {\n        postProcessingGas = 400000;  // calculate postprocgas //// con 300000 funciona, con 200000 no\n        postProcessingEnabled = true;\n        fragmentDifficulty = _fragmentDifficulty;\n        rewardPerFragment = msg.value / globalHashes.length; //aca tener en cuenta el postprocgas\n        encryptedDataRefference = _encryptedDataRefference;\n        minTimeFramePerFragment = _minTimeFramePerFragment;\n        for (uint i = 0; i < globalHashes.length; i++) {\n            KeyFragment memory fragment; \n            fragment.globalHash = globalHashes[i];\n            if (i == 0) {\n                fragment.localHash = firstLocalHash;\n            }\n            keyFragments.push(fragment);\n        }\n        Input memory input = Input({\n            fragmentIndex: 0,\n            globalHash: globalHashes[0],\n            localHash: firstLocalHash,\n            minTimestamp: block.timestamp\n        });\n        _submitRequest(rewardPerFragment, abi.encode(input), postProcessingGas);\n    }\n\n    function checkResult(bytes calldata inputData, bytes calldata resultData) external override view returns (bool) {\n        Input memory input = abi.decode(inputData, (Input));\n        Result memory result = abi.decode(resultData, (Result));\n        return (input.minTimestamp == result.timestampRestriction) && (block.timestamp >= result.timestampRestriction) && (input.fragmentIndex == result.fragmentIndex) && (keccak256(abi.encode(result.passcode, input.localHash)) == input.globalHash);\n    }\n\n    function processResult(bytes calldata resultData) public override onlyClient { // decidir si quiero mantener el parametro de post processing gas, o si lo dejo limitless a criterio del ejecutor. LO MANTENGO POR QUE ESTA SETEADO EL LIMITE DESDE BASE CLIENT FUERA DEL CONTROL DE CLIENTES MALICIOSOS\n        //La hago public y only client en vez de internal porque necesito el cambio de msg.sender y necesito limitar el gas\n        Result memory result = abi.decode(resultData, (Result));\n        keyFragments[result.fragmentIndex].passcode = result.passcode;\n        if (result.fragmentIndex == keyFragments.length - 1) {\n            finalKey = keccak256(abi.encode(result.passcode));\n            emit keyFullyMined();\n        } else {\n            keyFragments[result.fragmentIndex + 1].localHash = keccak256(abi.encode(result.passcode));\n            if (postProcessingEnabled) {\n                Input memory input = Input({\n                    fragmentIndex: result.fragmentIndex + 1,\n                    globalHash: keyFragments[result.fragmentIndex + 1].globalHash,\n                    localHash: keyFragments[result.fragmentIndex + 1].localHash,\n                    minTimestamp: result.timestampRestriction + minTimeFramePerFragment\n                });\n                _submitRequest(rewardPerFragment, abi.encode(input), postProcessingGas);\n            }\n        }\n    }\n\n    function togglePostProcessing() external onlyOwner returns (bool) {\n        postProcessingEnabled = postProcessingEnabled ? false : true;\n        return postProcessingEnabled;\n    }\n\n    function getInputDataStructure() external override pure returns (string memory) {\n        return \"{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}\";\n    }\n    \n    function getResultDataStructure() external override pure returns (string memory) {\n        return \"{uint fragmentIndex; uint timestampRestriction; uint passcode;}\";\n    }\n}\n",
  "sourceMap": "99:4379:3:-:0;;;826:1212;;;;;;;;;;;;;;;;;;:::i;:::-;244:6:2;:19;;253:10;-1:-1:-1;;;;;;244:19:2;;;;;;;-1:-1:-1;589:47:0;;;;::::1;-1:-1:-1::0;;;;;589:47:0;::::1;;::::0;;1077:6:3::1;1057:17;:26:::0;1159:21:::1;:28:::0;;-1:-1:-1;;1159:28:3::1;::::0;;::::1;::::0;;1197:18:::1;:40:::0;;;1279:19;;1267:31:::1;::::0;:9:::1;:31;:::i;:::-;1247:17;:51:::0;1345:23:::1;:50;1371:24:::0;1345:23;:50:::1;:::i;:::-;-1:-1:-1::0;1405:23:3::1;:50:::0;;;1470:6:::1;1465:285;1486:12;:19;1482:1;:23;1465:285;;;99:4379:::0;;;;;;;;-1:-1:-1;99:4379:3;;;;;;;;;;;;;;;;1590:12:::1;1603:1;1590:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;1568:37;;:19:::1;1623:6:::0;;;1619:80:::1;;1649:18;::::0;::::1;:35:::0;;;1619:80:::1;1712:12;:27:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;1712:27:3;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;1507:3:::1;1465:285;;;;1759:18;1780:170;;;;;;;;1815:1;1780:170;;;;1842:12;1855:1;1842:15;;;;;;;;:::i;:::-;;;;;;;1780:170;;;;1882:14;1780:170;;;;1924:15;1780:170;;::::0;1759:191:::1;;1960:71;1975:17;;2005:5;1994:17;;;;;;;5843:13:5::0;;5825:32;;5913:4;5901:17;;;5895:24;5873:20;;;5866:54;5976:4;5964:17;;;5958:24;5936:20;;;5929:54;6039:4;6027:17;;;6021:24;5999:20;;;5992:54;;;;5812:3;5797:19;;5636:416;1994:17:3::1;;::::0;;-1:-1:-1;;1994:17:3;;::::1;::::0;;;;;;2013::::1;::::0;1960:14:::1;:71::i;:::-;;1047:991;826:1212:::0;;;;;;99:4379;;1406:405:0;1506:4;1542:21;1531:7;:32;;1523:63;;;;-1:-1:-1;;;1523:63:0;;6259:2:5;1523:63:0;;;6241:21:5;6298:2;6278:18;;;6271:30;-1:-1:-1;;;6317:18:5;;;6310:48;6375:18;;1523:63:0;;;;;;;;1614:14;;:70;;-1:-1:-1;;;1614:70:0;;1597:14;;-1:-1:-1;;;;;1614:14:0;;:28;;1650:7;;1614:70;;1659:5;;1666:17;;1614:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1597:87;;1700:27;1717:9;1700:27;;;;7213:25:5;;7201:2;7186:18;;7067:177;1700:27:0;;;;;;;;1738;;;;:16;:27;;;;;:34;;-1:-1:-1;;1738:34:0;1768:4;1738:34;;;1755:9;-1:-1:-1;1406:405:0;;;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:5;247:40;;-1:-1:-1;;;;;302:34:5;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:5:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:5;650:16;;643:27;426:250::o;681:709::-;746:5;799:3;792:4;784:6;780:17;776:27;766:55;;817:1;814;807:12;766:55;840:13;;872:4;-1:-1:-1;;;;;888:26:5;;885:52;;;917:18;;:::i;:::-;963:2;960:1;956:10;986:28;1010:2;1006;1002:11;986:28;:::i;:::-;1048:15;;;1118;;;1114:24;;;1079:12;;;;1150:15;;;1147:35;;;1178:1;1175;1168:12;1147:35;1214:2;1206:6;1202:15;1191:26;;1226:135;1242:6;1237:3;1234:15;1226:135;;;1308:10;;1296:23;;1259:12;;;;1339;;;;1226:135;;;1379:5;681:709;-1:-1:-1;;;;;;;681:709:5:o;1395:1302::-;1545:6;1553;1561;1569;1577;1585;1638:3;1626:9;1617:7;1613:23;1609:33;1606:53;;;1655:1;1652;1645:12;1606:53;1681:16;;-1:-1:-1;;;;;1726:31:5;;1716:42;;1706:70;;1772:1;1769;1762:12;1706:70;1844:2;1829:18;;1823:25;1795:5;;-1:-1:-1;;;;;;1897:14:5;;;1894:34;;;1924:1;1921;1914:12;1894:34;1962:6;1951:9;1947:22;1937:32;;2007:7;2000:4;1996:2;1992:13;1988:27;1978:55;;2029:1;2026;2019:12;1978:55;2058:2;2052:9;2080:2;2076;2073:10;2070:36;;;2086:18;;:::i;:::-;2128:53;2171:2;2152:13;;-1:-1:-1;;2148:27:5;2177:2;2144:36;2128:53;:::i;:::-;2204:2;2197:5;2190:17;2244:7;2239:2;2234;2230;2226:11;2222:20;2219:33;2216:53;;;2265:1;2262;2255:12;2216:53;2278:67;2342:2;2337;2330:5;2326:14;2321:2;2317;2313:11;2278:67;:::i;:::-;2409:2;2394:18;;2388:25;2459:2;2444:18;;2438:25;2364:5;;-1:-1:-1;2388:25:5;-1:-1:-1;2438:25:5;-1:-1:-1;;2475:16:5;;;2472:36;;;2504:1;2501;2494:12;2472:36;;2527:74;2593:7;2582:8;2571:9;2567:24;2527:74;:::i;:::-;2517:84;;;2641:3;2630:9;2626:19;2620:26;2610:36;;2686:3;2675:9;2671:19;2665:26;2655:36;;1395:1302;;;;;;;;:::o;2702:217::-;2742:1;2768;2758:132;;2812:10;2807:3;2803:20;2800:1;2793:31;2847:4;2844:1;2837:15;2875:4;2872:1;2865:15;2758:132;-1:-1:-1;2904:9:5;;2702:217::o;2924:380::-;3003:1;2999:12;;;;3046;;;3067:61;;3121:4;3113:6;3109:17;3099:27;;3067:61;3174:2;3166:6;3163:14;3143:18;3140:38;3137:161;;3220:10;3215:3;3211:20;3208:1;3201:31;3255:4;3252:1;3245:15;3283:4;3280:1;3273:15;3137:161;;2924:380;;;:::o;3435:543::-;3537:2;3532:3;3529:11;3526:446;;;3573:1;3597:5;3594:1;3587:16;3641:4;3638:1;3628:18;3711:2;3699:10;3695:19;3692:1;3688:27;3682:4;3678:38;3747:4;3735:10;3732:20;3729:47;;;-1:-1:-1;3770:4:5;3729:47;3825:2;3820:3;3816:12;3813:1;3809:20;3803:4;3799:31;3789:41;;3880:82;3898:2;3891:5;3888:13;3880:82;;;3943:17;;;3924:1;3913:13;3880:82;;;3884:3;;;3526:446;3435:543;;;:::o;4154:1345::-;4274:10;;-1:-1:-1;;;;;4296:30:5;;4293:56;;;4329:18;;:::i;:::-;4358:97;4448:6;4408:38;4440:4;4434:11;4408:38;:::i;:::-;4402:4;4358:97;:::i;:::-;4510:4;;4567:2;4556:14;;4584:1;4579:663;;;;5286:1;5303:6;5300:89;;;-1:-1:-1;5355:19:5;;;5349:26;5300:89;-1:-1:-1;;4111:1:5;4107:11;;;4103:24;4099:29;4089:40;4135:1;4131:11;;;4086:57;5402:81;;4549:944;;4579:663;3382:1;3375:14;;;3419:4;3406:18;;-1:-1:-1;;4615:20:5;;;4733:236;4747:7;4744:1;4741:14;4733:236;;;4836:19;;;4830:26;4815:42;;4928:27;;;;4896:1;4884:14;;;;4763:19;;4733:236;;;4737:3;4997:6;4988:7;4985:19;4982:201;;;5058:19;;;5052:26;-1:-1:-1;;5141:1:5;5137:14;;;5153:3;5133:24;5129:37;5125:42;5110:58;5095:74;;4982:201;-1:-1:-1;;;;;5229:1:5;5213:14;;;5209:22;5196:36;;-1:-1:-1;4154:1345:5:o;5504:127::-;5565:10;5560:3;5556:20;5553:1;5546:31;5596:4;5593:1;5586:15;5620:4;5617:1;5610:15;6404:469;6579:2;6568:9;6561:21;6542:4;6611:6;6605:13;6654:6;6649:2;6638:9;6634:18;6627:34;6670:81;6744:6;6739:2;6728:9;6724:18;6717:4;6709:6;6705:17;6670:81;:::i;:::-;6853:4;6838:20;;6831:36;;;;-1:-1:-1;6812:2:5;6791:15;;;;-1:-1:-1;;6787:29:5;6772:45;6819:2;6768:54;;6404:469;-1:-1:-1;6404:469:5:o;6878:184::-;6948:6;7001:2;6989:9;6980:7;6976:23;6972:32;6969:52;;;7017:1;7014;7007:12;6969:52;-1:-1:-1;7040:16:5;;6878:184;-1:-1:-1;6878:184:5:o;7067:177::-;99:4379:3;;;;;;",
  "sourcePath": "contracts/TS3000.sol",
  "type": "contract"
}