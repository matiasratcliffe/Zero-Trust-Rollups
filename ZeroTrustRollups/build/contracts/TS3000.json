{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brokerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_encryptedDataRefference",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "firstLocalHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "globalHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_minTimeFramePerFragment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fragmentDifficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "keyFullyMined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "requestSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "resultPostProcessed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "brokerContract",
      "outputs": [
        {
          "internalType": "contract ExecutionBroker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        }
      ],
      "name": "cancelRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encryptedDataRefference",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fragmentDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResultDataStructure",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keyFragments",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "globalHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "localHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "passcode",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTimeFramePerFragment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "postProcessingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "postProcessingGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "resultData",
          "type": "bytes"
        }
      ],
      "name": "processResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "inputData",
          "type": "bytes"
        }
      ],
      "name": "resolveOnChain",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerFragment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "postProcessingGas",
          "type": "uint256"
        }
      ],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "name": "submitResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePostProcessing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/BaseClient.sol",
    "4": "contracts/Ownable.sol",
    "5": "contracts/TS3000.sol"
  },
  "ast": {
    "absolutePath": "contracts/TS3000.sol",
    "exportedSymbols": {
      "BaseClient": [
        503
      ],
      "ExecutionBroker": [
        1154
      ],
      "Ownable": [
        1953
      ],
      "Request": [
        527
      ],
      "TS3000": [
        1599
      ],
      "Transferable": [
        2037
      ]
    },
    "id": 1600,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1156,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:5"
      },
      {
        "absolutePath": "contracts/BaseClient.sol",
        "file": "./BaseClient.sol",
        "id": 1157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1600,
        "sourceUnit": 504,
        "src": "70:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1158,
              "name": "BaseClient",
              "nameLocations": [
                "118:10:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 503,
              "src": "118:10:5"
            },
            "id": 1159,
            "nodeType": "InheritanceSpecifier",
            "src": "118:10:5"
          }
        ],
        "canonicalName": "TS3000",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1599,
        "linearizedBaseContracts": [
          1599,
          503,
          1953
        ],
        "name": "TS3000",
        "nameLocation": "108:6:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TS3000.KeyFragment",
            "id": 1166,
            "members": [
              {
                "constant": false,
                "id": 1161,
                "mutability": "mutable",
                "name": "globalHash",
                "nameLocation": "173:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 1166,
                "src": "165:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1160,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1163,
                "mutability": "mutable",
                "name": "localHash",
                "nameLocation": "201:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 1166,
                "src": "193:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1162,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1165,
                "mutability": "mutable",
                "name": "passcode",
                "nameLocation": "225:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 1166,
                "src": "220:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1164,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "KeyFragment",
            "nameLocation": "143:11:5",
            "nodeType": "StructDefinition",
            "scope": 1599,
            "src": "136:104:5",
            "visibility": "public"
          },
          {
            "canonicalName": "TS3000.Input",
            "id": 1175,
            "members": [
              {
                "constant": false,
                "id": 1168,
                "mutability": "mutable",
                "name": "fragmentIndex",
                "nameLocation": "274:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 1175,
                "src": "269:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1167,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1170,
                "mutability": "mutable",
                "name": "globalHash",
                "nameLocation": "305:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 1175,
                "src": "297:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1169,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "297:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1172,
                "mutability": "mutable",
                "name": "localHash",
                "nameLocation": "333:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 1175,
                "src": "325:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1171,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1174,
                "mutability": "mutable",
                "name": "minTimestamp",
                "nameLocation": "357:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 1175,
                "src": "352:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1173,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Input",
            "nameLocation": "253:5:5",
            "nodeType": "StructDefinition",
            "scope": 1599,
            "src": "246:130:5",
            "visibility": "public"
          },
          {
            "canonicalName": "TS3000.Result",
            "id": 1182,
            "members": [
              {
                "constant": false,
                "id": 1177,
                "mutability": "mutable",
                "name": "fragmentIndex",
                "nameLocation": "411:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 1182,
                "src": "406:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1176,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "406:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1179,
                "mutability": "mutable",
                "name": "timestampRestriction",
                "nameLocation": "439:20:5",
                "nodeType": "VariableDeclaration",
                "scope": 1182,
                "src": "434:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1178,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1181,
                "mutability": "mutable",
                "name": "passcode",
                "nameLocation": "474:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 1182,
                "src": "469:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1180,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nameLocation": "389:6:5",
            "nodeType": "StructDefinition",
            "scope": 1599,
            "src": "382:107:5",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd36",
            "id": 1184,
            "name": "keyFullyMined",
            "nameLocation": "501:13:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:5"
            },
            "src": "495:22:5"
          },
          {
            "constant": false,
            "functionSelector": "552b0b83",
            "id": 1186,
            "mutability": "mutable",
            "name": "encryptedDataRefference",
            "nameLocation": "537:23:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "523:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1185,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "523:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7353d891",
            "id": 1190,
            "mutability": "mutable",
            "name": "keyFragments",
            "nameLocation": "587:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "566:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
              "typeString": "struct TS3000.KeyFragment[]"
            },
            "typeName": {
              "baseType": {
                "id": 1188,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1187,
                  "name": "KeyFragment",
                  "nameLocations": [
                    "566:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1166,
                  "src": "566:11:5"
                },
                "referencedDeclaration": 1166,
                "src": "566:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_KeyFragment_$1166_storage_ptr",
                  "typeString": "struct TS3000.KeyFragment"
                }
              },
              "id": 1189,
              "nodeType": "ArrayTypeName",
              "src": "566:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage_ptr",
                "typeString": "struct TS3000.KeyFragment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d9e78b8",
            "id": 1192,
            "mutability": "mutable",
            "name": "finalKey",
            "nameLocation": "620:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "605:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1191,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f7ef866",
            "id": 1194,
            "mutability": "mutable",
            "name": "fragmentDifficulty",
            "nameLocation": "647:18:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "635:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1193,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "635:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d997ebf5",
            "id": 1196,
            "mutability": "mutable",
            "name": "rewardPerFragment",
            "nameLocation": "683:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "671:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1195,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "671:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "22473385",
            "id": 1198,
            "mutability": "mutable",
            "name": "postProcessingGas",
            "nameLocation": "718:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "706:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1197,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "706:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ace8e462",
            "id": 1200,
            "mutability": "mutable",
            "name": "minTimeFramePerFragment",
            "nameLocation": "753:23:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "741:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1199,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "741:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "015594b8",
            "id": 1202,
            "mutability": "mutable",
            "name": "postProcessingEnabled",
            "nameLocation": "794:21:5",
            "nodeType": "VariableDeclaration",
            "scope": 1599,
            "src": "782:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1201,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "782:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "1047:991:5",
              "statements": [
                {
                  "expression": {
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1221,
                      "name": "postProcessingGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "1057:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "343030303030",
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1077:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_400000_by_1",
                        "typeString": "int_const 400000"
                      },
                      "value": "400000"
                    },
                    "src": "1057:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:26:5"
                },
                {
                  "expression": {
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1225,
                      "name": "postProcessingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "1159:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1183:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1159:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:28:5"
                },
                {
                  "expression": {
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1229,
                      "name": "fragmentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1197:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1230,
                      "name": "_fragmentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "1218:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1197:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:40:5"
                },
                {
                  "expression": {
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1233,
                      "name": "rewardPerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "1247:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1267:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1271:5:5",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1267:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 1236,
                          "name": "globalHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "1279:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1292:6:5",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1279:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1267:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1247:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:51:5"
                },
                {
                  "expression": {
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1241,
                      "name": "encryptedDataRefference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "1345:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1242,
                      "name": "_encryptedDataRefference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1206,
                      "src": "1371:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1345:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:50:5"
                },
                {
                  "expression": {
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1245,
                      "name": "minTimeFramePerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "1405:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1246,
                      "name": "_minTimeFramePerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "1431:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1405:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:50:5"
                },
                {
                  "body": {
                    "id": 1289,
                    "nodeType": "Block",
                    "src": "1512:238:5",
                    "statements": [
                      {
                        "assignments": [
                          1262
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1262,
                            "mutability": "mutable",
                            "name": "fragment",
                            "nameLocation": "1545:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1289,
                            "src": "1526:27:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_KeyFragment_$1166_memory_ptr",
                              "typeString": "struct TS3000.KeyFragment"
                            },
                            "typeName": {
                              "id": 1261,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1260,
                                "name": "KeyFragment",
                                "nameLocations": [
                                  "1526:11:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1166,
                                "src": "1526:11:5"
                              },
                              "referencedDeclaration": 1166,
                              "src": "1526:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$1166_storage_ptr",
                                "typeString": "struct TS3000.KeyFragment"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1263,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1526:27:5"
                      },
                      {
                        "expression": {
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1264,
                              "name": "fragment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "1568:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$1166_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1577:10:5",
                            "memberName": "globalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1161,
                            "src": "1568:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1267,
                              "name": "globalHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "1590:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1269,
                            "indexExpression": {
                              "id": 1268,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "1603:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1590:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1568:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1271,
                        "nodeType": "ExpressionStatement",
                        "src": "1568:37:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1272,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "1623:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1628:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1623:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1282,
                        "nodeType": "IfStatement",
                        "src": "1619:80:5",
                        "trueBody": {
                          "id": 1281,
                          "nodeType": "Block",
                          "src": "1631:68:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1275,
                                    "name": "fragment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "1649:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_KeyFragment_$1166_memory_ptr",
                                      "typeString": "struct TS3000.KeyFragment memory"
                                    }
                                  },
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "1658:9:5",
                                  "memberName": "localHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1163,
                                  "src": "1649:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1278,
                                  "name": "firstLocalHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1208,
                                  "src": "1670:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1649:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1280,
                              "nodeType": "ExpressionStatement",
                              "src": "1649:35:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1286,
                              "name": "fragment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "1730:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$1166_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_KeyFragment_$1166_memory_ptr",
                                "typeString": "struct TS3000.KeyFragment memory"
                              }
                            ],
                            "expression": {
                              "id": 1283,
                              "name": "keyFragments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "1712:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                                "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                              }
                            },
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1725:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1712:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage_ptr_$_t_struct$_KeyFragment_$1166_storage_$returns$__$attached_to$_t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TS3000.KeyFragment storage ref[] storage pointer,struct TS3000.KeyFragment storage ref)"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "1712:27:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1253,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1250,
                      "src": "1482:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1254,
                        "name": "globalHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "1486:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1499:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1486:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1482:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1290,
                  "initializationExpression": {
                    "assignments": [
                      1250
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1475:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1290,
                        "src": "1470:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1470:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1252,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1479:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1470:10:5"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1507:3:5",
                      "subExpression": {
                        "id": 1257,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "1507:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1259,
                    "nodeType": "ExpressionStatement",
                    "src": "1507:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1465:285:5"
                },
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "1772:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "1759:18:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                        "typeString": "struct TS3000.Input"
                      },
                      "typeName": {
                        "id": 1292,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1291,
                          "name": "Input",
                          "nameLocations": [
                            "1759:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1175,
                          "src": "1759:5:5"
                        },
                        "referencedDeclaration": 1175,
                        "src": "1759:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$1175_storage_ptr",
                          "typeString": "struct TS3000.Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1815:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "baseExpression": {
                          "id": 1296,
                          "name": "globalHashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "1842:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1298,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1855:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1842:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1299,
                        "name": "firstLocalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "1882:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1300,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1924:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1930:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1924:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1294,
                      "name": "Input",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1175,
                      "src": "1780:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                        "typeString": "type(struct TS3000.Input storage pointer)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1800:13:5",
                      "1830:10:5",
                      "1871:9:5",
                      "1910:12:5"
                    ],
                    "names": [
                      "fragmentIndex",
                      "globalHash",
                      "localHash",
                      "minTimestamp"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1780:170:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                      "typeString": "struct TS3000.Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1759:191:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1305,
                        "name": "rewardPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "1975:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1308,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "2005:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                              "typeString": "struct TS3000.Input memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                              "typeString": "struct TS3000.Input memory"
                            }
                          ],
                          "expression": {
                            "id": 1306,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1994:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1998:6:5",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1994:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "postProcessingGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "2013:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1304,
                      "name": "_submitRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "1960:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1312,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:71:5"
                }
              ]
            },
            "id": 1314,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1218,
                    "name": "brokerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1204,
                    "src": "1024:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1219,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1217,
                  "name": "BaseClient",
                  "nameLocations": [
                    "1013:10:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 503,
                  "src": "1013:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1013:25:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "brokerAddress",
                  "nameLocation": "846:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "838:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "_encryptedDataRefference",
                  "nameLocation": "875:24:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "861:38:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "firstLocalHash",
                  "nameLocation": "909:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "901:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "globalHashes",
                  "nameLocation": "942:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "925:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1209,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "925:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1210,
                    "nodeType": "ArrayTypeName",
                    "src": "925:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "_minTimeFramePerFragment",
                  "nameLocation": "961:24:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "956:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_fragmentDifficulty",
                  "nameLocation": "992:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "987:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:175:5"
            },
            "returnParameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:5"
            },
            "scope": 1599,
            "src": "826:1212:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              243
            ],
            "body": {
              "id": 1379,
              "nodeType": "Block",
              "src": "2156:383:5",
              "statements": [
                {
                  "assignments": [
                    1326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1326,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "2179:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1379,
                      "src": "2166:18:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                        "typeString": "struct TS3000.Input"
                      },
                      "typeName": {
                        "id": 1325,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1324,
                          "name": "Input",
                          "nameLocations": [
                            "2166:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1175,
                          "src": "2166:5:5"
                        },
                        "referencedDeclaration": 1175,
                        "src": "2166:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$1175_storage_ptr",
                          "typeString": "struct TS3000.Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1329,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "2198:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1330,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "2210:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                              "typeString": "type(struct TS3000.Input storage pointer)"
                            }
                          }
                        ],
                        "id": 1331,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2209:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1327,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2187:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2191:6:5",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2187:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                      "typeString": "struct TS3000.Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2166:51:5"
                },
                {
                  "assignments": [
                    1336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2241:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1379,
                      "src": "2227:20:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                        "typeString": "struct TS3000.Result"
                      },
                      "typeName": {
                        "id": 1335,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1334,
                          "name": "Result",
                          "nameLocations": [
                            "2227:6:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1182,
                          "src": "2227:6:5"
                        },
                        "referencedDeclaration": 1182,
                        "src": "2227:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_storage_ptr",
                          "typeString": "struct TS3000.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1339,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1318,
                        "src": "2261:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1340,
                            "name": "Result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1182,
                            "src": "2274:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                              "typeString": "type(struct TS3000.Result storage pointer)"
                            }
                          }
                        ],
                        "id": 1341,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2273:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1337,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2250:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2254:6:5",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2250:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                      "typeString": "struct TS3000.Result memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:55:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1344,
                                  "name": "input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1326,
                                  "src": "2300:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                    "typeString": "struct TS3000.Input memory"
                                  }
                                },
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2306:12:5",
                                "memberName": "minTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1174,
                                "src": "2300:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1346,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "2322:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                    "typeString": "struct TS3000.Result memory"
                                  }
                                },
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2329:20:5",
                                "memberName": "timestampRestriction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1179,
                                "src": "2322:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2300:49:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1349,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2299:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1350,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2355:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2361:9:5",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2355:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1352,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "2374:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                    "typeString": "struct TS3000.Result memory"
                                  }
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2381:20:5",
                                "memberName": "timestampRestriction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1179,
                                "src": "2374:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2355:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1355,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2354:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2299:103:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1357,
                                "name": "input",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "2407:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                  "typeString": "struct TS3000.Input memory"
                                }
                              },
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2413:13:5",
                              "memberName": "fragmentIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1168,
                              "src": "2407:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1359,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1336,
                                "src": "2430:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                  "typeString": "struct TS3000.Result memory"
                                }
                              },
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2437:13:5",
                              "memberName": "fragmentIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1177,
                              "src": "2430:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2407:43:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1362,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2406:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2299:152:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1367,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1336,
                                      "src": "2477:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 1368,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2484:8:5",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1181,
                                    "src": "2477:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1369,
                                      "name": "input",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1326,
                                      "src": "2494:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                        "typeString": "struct TS3000.Input memory"
                                      }
                                    },
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2500:9:5",
                                    "memberName": "localHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1172,
                                    "src": "2494:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1365,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2466:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2470:6:5",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2466:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2466:44:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1364,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2456:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2456:55:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1373,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1326,
                              "src": "2515:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                "typeString": "struct TS3000.Input memory"
                              }
                            },
                            "id": 1374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2521:10:5",
                            "memberName": "globalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1170,
                            "src": "2515:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2456:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1376,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2455:77:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2299:233:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1323,
                  "id": 1378,
                  "nodeType": "Return",
                  "src": "2292:240:5"
                }
              ]
            },
            "functionSelector": "c91c7b37",
            "id": 1380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkResult",
            "nameLocation": "2053:11:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1320,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2127:8:5"
            },
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "2080:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "2065:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "2106:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "2091:25:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:53:5"
            },
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "2150:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2149:6:5"
            },
            "scope": 1599,
            "src": "2044:495:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              261
            ],
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "2622:1296:5",
              "statements": [
                {
                  "assignments": [
                    1390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1390,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2987:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1486,
                      "src": "2973:20:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                        "typeString": "struct TS3000.Result"
                      },
                      "typeName": {
                        "id": 1389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1388,
                          "name": "Result",
                          "nameLocations": [
                            "2973:6:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1182,
                          "src": "2973:6:5"
                        },
                        "referencedDeclaration": 1182,
                        "src": "2973:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_storage_ptr",
                          "typeString": "struct TS3000.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1397,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1393,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1382,
                        "src": "3007:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1394,
                            "name": "Result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1182,
                            "src": "3020:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                              "typeString": "type(struct TS3000.Result storage pointer)"
                            }
                          }
                        ],
                        "id": 1395,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3019:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Result_$1182_storage_ptr_$",
                          "typeString": "type(struct TS3000.Result storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1391,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2996:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3000:6:5",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2996:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                      "typeString": "struct TS3000.Result memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2973:55:5"
                },
                {
                  "expression": {
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1398,
                          "name": "keyFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "3038:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                            "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                          }
                        },
                        "id": 1401,
                        "indexExpression": {
                          "expression": {
                            "id": 1399,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1390,
                            "src": "3051:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                              "typeString": "struct TS3000.Result memory"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3058:13:5",
                          "memberName": "fragmentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1177,
                          "src": "3051:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3038:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_KeyFragment_$1166_storage",
                          "typeString": "struct TS3000.KeyFragment storage ref"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3073:8:5",
                      "memberName": "passcode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1165,
                      "src": "3038:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1403,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "3084:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 1404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3091:8:5",
                      "memberName": "passcode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "3084:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3038:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:61:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1407,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "3113:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3120:13:5",
                      "memberName": "fragmentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1177,
                      "src": "3113:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1409,
                          "name": "keyFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "3137:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                            "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                          }
                        },
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3150:6:5",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3137:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3159:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3137:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3113:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1484,
                    "nodeType": "Block",
                    "src": "3276:636:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1428,
                                "name": "keyFragments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "3290:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                                  "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                }
                              },
                              "id": 1433,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1429,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1390,
                                    "src": "3303:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                      "typeString": "struct TS3000.Result memory"
                                    }
                                  },
                                  "id": 1430,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3310:13:5",
                                  "memberName": "fragmentIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1177,
                                  "src": "3303:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3326:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3303:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3290:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_KeyFragment_$1166_storage",
                                "typeString": "struct TS3000.KeyFragment storage ref"
                              }
                            },
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3329:9:5",
                            "memberName": "localHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1163,
                            "src": "3290:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1438,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1390,
                                      "src": "3362:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 1439,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3369:8:5",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1181,
                                    "src": "3362:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1436,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3351:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3355:6:5",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3351:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3351:27:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1435,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3341:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3341:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3290:89:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "3290:89:5"
                      },
                      {
                        "condition": {
                          "id": 1444,
                          "name": "postProcessingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "3397:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1483,
                        "nodeType": "IfStatement",
                        "src": "3393:509:5",
                        "trueBody": {
                          "id": 1482,
                          "nodeType": "Block",
                          "src": "3420:482:5",
                          "statements": [
                            {
                              "assignments": [
                                1447
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1447,
                                  "mutability": "mutable",
                                  "name": "input",
                                  "nameLocation": "3451:5:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1482,
                                  "src": "3438:18:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                    "typeString": "struct TS3000.Input"
                                  },
                                  "typeName": {
                                    "id": 1446,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1445,
                                      "name": "Input",
                                      "nameLocations": [
                                        "3438:5:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1175,
                                      "src": "3438:5:5"
                                    },
                                    "referencedDeclaration": 1175,
                                    "src": "3438:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Input_$1175_storage_ptr",
                                      "typeString": "struct TS3000.Input"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1472,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1452,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1449,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1390,
                                        "src": "3502:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                          "typeString": "struct TS3000.Result memory"
                                        }
                                      },
                                      "id": 1450,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3509:13:5",
                                      "memberName": "fragmentIndex",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1177,
                                      "src": "3502:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1451,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3525:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3502:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1453,
                                        "name": "keyFragments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1190,
                                        "src": "3560:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                                          "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1458,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1454,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1390,
                                            "src": "3573:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                              "typeString": "struct TS3000.Result memory"
                                            }
                                          },
                                          "id": 1455,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3580:13:5",
                                          "memberName": "fragmentIndex",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1177,
                                          "src": "3573:20:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1456,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3596:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3573:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3560:38:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_KeyFragment_$1166_storage",
                                        "typeString": "struct TS3000.KeyFragment storage ref"
                                      }
                                    },
                                    "id": 1459,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3599:10:5",
                                    "memberName": "globalHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1161,
                                    "src": "3560:49:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1460,
                                        "name": "keyFragments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1190,
                                        "src": "3642:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_KeyFragment_$1166_storage_$dyn_storage",
                                          "typeString": "struct TS3000.KeyFragment storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1465,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1464,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 1461,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1390,
                                            "src": "3655:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                              "typeString": "struct TS3000.Result memory"
                                            }
                                          },
                                          "id": 1462,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3662:13:5",
                                          "memberName": "fragmentIndex",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1177,
                                          "src": "3655:20:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1463,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3678:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3655:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3642:38:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_KeyFragment_$1166_storage",
                                        "typeString": "struct TS3000.KeyFragment storage ref"
                                      }
                                    },
                                    "id": 1466,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3681:9:5",
                                    "memberName": "localHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1163,
                                    "src": "3642:48:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1467,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1390,
                                        "src": "3726:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                          "typeString": "struct TS3000.Result memory"
                                        }
                                      },
                                      "id": 1468,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3733:20:5",
                                      "memberName": "timestampRestriction",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1179,
                                      "src": "3726:27:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 1469,
                                      "name": "minTimeFramePerFragment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1200,
                                      "src": "3756:23:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3726:53:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1448,
                                  "name": "Input",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "3459:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                                    "typeString": "type(struct TS3000.Input storage pointer)"
                                  }
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "3487:13:5",
                                  "3548:10:5",
                                  "3631:9:5",
                                  "3712:12:5"
                                ],
                                "names": [
                                  "fragmentIndex",
                                  "globalHash",
                                  "localHash",
                                  "minTimestamp"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "3459:339:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                  "typeString": "struct TS3000.Input memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3438:360:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1474,
                                    "name": "rewardPerFragment",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1196,
                                    "src": "3831:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1477,
                                        "name": "input",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1447,
                                        "src": "3861:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                          "typeString": "struct TS3000.Input memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                          "typeString": "struct TS3000.Input memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1475,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3850:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1476,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3854:6:5",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "3850:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3850:17:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 1479,
                                    "name": "postProcessingGas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1198,
                                    "src": "3869:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1473,
                                  "name": "_submitRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "3816:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,bytes memory,uint256) returns (uint256)"
                                  }
                                },
                                "id": 1480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3816:71:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1481,
                              "nodeType": "ExpressionStatement",
                              "src": "3816:71:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1485,
                  "nodeType": "IfStatement",
                  "src": "3109:803:5",
                  "trueBody": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "3162:108:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1414,
                            "name": "finalKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3176:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1418,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1390,
                                      "src": "3208:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                        "typeString": "struct TS3000.Result memory"
                                      }
                                    },
                                    "id": 1419,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3215:8:5",
                                    "memberName": "passcode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1181,
                                    "src": "3208:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1416,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3197:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3201:6:5",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3197:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3197:27:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1415,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3187:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3187:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3176:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "3176:49:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1424,
                            "name": "keyFullyMined",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1184,
                            "src": "3244:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3244:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "EmitStatement",
                        "src": "3239:20:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cb392747",
            "id": 1487,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1385,
                  "name": "onlyClient",
                  "nameLocations": [
                    "2611:10:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "2611:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2611:10:5"
              }
            ],
            "name": "processResult",
            "nameLocation": "2554:13:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2602:8:5"
            },
            "parameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "resultData",
                  "nameLocation": "2583:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "2568:25:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2567:27:5"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2622:0:5"
            },
            "scope": 1599,
            "src": "2545:1373:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1503,
              "nodeType": "Block",
              "src": "3990:115:5",
              "statements": [
                {
                  "expression": {
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1494,
                      "name": "postProcessingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "4000:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 1495,
                        "name": "postProcessingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "4024:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "74727565",
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4056:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "id": 1498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4024:36:5",
                      "trueExpression": {
                        "hexValue": "66616c7365",
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4000:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:60:5"
                },
                {
                  "expression": {
                    "id": 1501,
                    "name": "postProcessingEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1202,
                    "src": "4077:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1493,
                  "id": 1502,
                  "nodeType": "Return",
                  "src": "4070:28:5"
                }
              ]
            },
            "functionSelector": "2d16d25b",
            "id": 1504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1489,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3965:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1922,
                  "src": "3965:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3965:9:5"
              }
            ],
            "name": "togglePostProcessing",
            "nameLocation": "3933:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3953:2:5"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
                  "src": "3984:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3983:6:5"
            },
            "scope": 1599,
            "src": "3924:181:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              248
            ],
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "4191:105:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7d",
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4208:81:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8f855c4f947b0889320f8fcdeae85458b7c5ed762c0cd1d5f61cbf3b3c0bb25f",
                      "typeString": "literal_string \"{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}\""
                    },
                    "value": "{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}"
                  },
                  "functionReturnParameters": 1509,
                  "id": 1511,
                  "nodeType": "Return",
                  "src": "4201:88:5"
                }
              ]
            },
            "functionSelector": "2896de13",
            "id": 1513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputDataStructure",
            "nameLocation": "4120:21:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4153:8:5"
            },
            "parameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4141:2:5"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "4176:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:15:5"
            },
            "scope": 1599,
            "src": "4111:185:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              253
            ],
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "4387:89:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d",
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4404:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5bea9a5fc31ff70cddbbc1ea1cfb92be0eb52fefd16b266931ddf7cca810872e",
                      "typeString": "literal_string \"{uint fragmentIndex; uint timestampRestriction; uint passcode;}\""
                    },
                    "value": "{uint fragmentIndex; uint timestampRestriction; uint passcode;}"
                  },
                  "functionReturnParameters": 1518,
                  "id": 1520,
                  "nodeType": "Return",
                  "src": "4397:72:5"
                }
              ]
            },
            "functionSelector": "8244741c",
            "id": 1522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultDataStructure",
            "nameLocation": "4315:22:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4349:8:5"
            },
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4337:2:5"
            },
            "returnParameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "4372:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:15:5"
            },
            "scope": 1599,
            "src": "4306:170:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              271
            ],
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "4576:504:5",
              "statements": [
                {
                  "assignments": [
                    1532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1532,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4601:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1597,
                      "src": "4587:20:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                        "typeString": "struct TS3000.Result"
                      },
                      "typeName": {
                        "id": 1531,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1530,
                          "name": "Result",
                          "nameLocations": [
                            "4587:6:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1182,
                          "src": "4587:6:5"
                        },
                        "referencedDeclaration": 1182,
                        "src": "4587:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_storage_ptr",
                          "typeString": "struct TS3000.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1533,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4587:20:5"
                },
                {
                  "assignments": [
                    1536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1536,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "4630:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1597,
                      "src": "4617:18:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                        "typeString": "struct TS3000.Input"
                      },
                      "typeName": {
                        "id": 1535,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1534,
                          "name": "Input",
                          "nameLocations": [
                            "4617:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1175,
                          "src": "4617:5:5"
                        },
                        "referencedDeclaration": 1175,
                        "src": "4617:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$1175_storage_ptr",
                          "typeString": "struct TS3000.Input"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1543,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1539,
                        "name": "inputData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "4649:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1540,
                            "name": "Input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "4661:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                              "typeString": "type(struct TS3000.Input storage pointer)"
                            }
                          }
                        ],
                        "id": 1541,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4660:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Input_$1175_storage_ptr_$",
                          "typeString": "type(struct TS3000.Input storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1537,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4638:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4642:6:5",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4638:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4638:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                      "typeString": "struct TS3000.Input memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4617:51:5"
                },
                {
                  "expression": {
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1544,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "4678:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 1546,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4685:13:5",
                      "memberName": "fragmentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1177,
                      "src": "4678:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1547,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1536,
                        "src": "4701:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                          "typeString": "struct TS3000.Input memory"
                        }
                      },
                      "id": 1548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4707:13:5",
                      "memberName": "fragmentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1168,
                      "src": "4701:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4678:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:42:5"
                },
                {
                  "expression": {
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1551,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "4730:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4737:20:5",
                      "memberName": "timestampRestriction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1179,
                      "src": "4730:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1554,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1536,
                        "src": "4760:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                          "typeString": "struct TS3000.Input memory"
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4766:12:5",
                      "memberName": "minTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1174,
                      "src": "4760:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4730:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:48:5"
                },
                {
                  "body": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "4859:180:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1573,
                                    "name": "passcode",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1559,
                                    "src": "4898:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1574,
                                      "name": "input",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1536,
                                      "src": "4908:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                        "typeString": "struct TS3000.Input memory"
                                      }
                                    },
                                    "id": 1575,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4914:9:5",
                                    "memberName": "localHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1172,
                                    "src": "4908:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1571,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4887:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4891:6:5",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "4887:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4887:37:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1570,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4877:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4877:48:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1578,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "4929:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Input_$1175_memory_ptr",
                                "typeString": "struct TS3000.Input memory"
                              }
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4935:10:5",
                            "memberName": "globalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1170,
                            "src": "4929:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4877:68:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1589,
                        "nodeType": "IfStatement",
                        "src": "4873:156:5",
                        "trueBody": {
                          "id": 1588,
                          "nodeType": "Block",
                          "src": "4947:82:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1581,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "4965:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                                      "typeString": "struct TS3000.Result memory"
                                    }
                                  },
                                  "id": 1583,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4972:8:5",
                                  "memberName": "passcode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1181,
                                  "src": "4965:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1584,
                                  "name": "passcode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1559,
                                  "src": "4983:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4965:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1586,
                              "nodeType": "ExpressionStatement",
                              "src": "4965:26:5"
                            },
                            {
                              "id": 1587,
                              "nodeType": "Break",
                              "src": "5009:5:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1562,
                      "name": "passcode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "4812:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4823:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 1564,
                        "name": "fragmentDifficulty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "4827:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4823:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4812:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1591,
                  "initializationExpression": {
                    "assignments": [
                      1559
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "passcode",
                        "nameLocation": "4798:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1591,
                        "src": "4793:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1558,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1561,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4809:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4793:17:5"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4847:10:5",
                      "subExpression": {
                        "id": 1567,
                        "name": "passcode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1559,
                        "src": "4847:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1569,
                    "nodeType": "ExpressionStatement",
                    "src": "4847:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4788:251:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1594,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "5066:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Result_$1182_memory_ptr",
                          "typeString": "struct TS3000.Result memory"
                        }
                      ],
                      "expression": {
                        "id": 1592,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5055:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5059:6:5",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "5055:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5055:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1529,
                  "id": 1596,
                  "nodeType": "Return",
                  "src": "5048:25:5"
                }
              ]
            },
            "functionSelector": "a0a7ccff",
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveOnChain",
            "nameLocation": "4491:14:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4539:8:5"
            },
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "4521:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "4506:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4505:26:5"
            },
            "returnParameters": {
              "id": 1529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "4562:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4562:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4561:14:5"
            },
            "scope": 1599,
            "src": "4482:598:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1600,
        "src": "99:4983:5",
        "usedErrors": [],
        "usedEvents": [
          199,
          205,
          1184
        ]
      }
    ],
    "src": "37:5046:5"
  },
  "bytecode": "608060405260405162001f6238038062001f6283398101604081905262000026916200044e565b60008054336001600160a01b031991821617909155600180549091166001600160a01b03881617815562061a80600855600a805460ff191690911790556006819055825162000076903462000550565b600755600362000087868262000604565b50600982905560005b835181101562000186576040805160608101825260008082526020820181905291810191909152848281518110620000cc57620000cc620006d0565b602090810291909101015181526000829003620000eb57602081018690525b600480546001808201835560009290925282517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60039092029182015560208301517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8201556040909201517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909201919091550162000090565b50600060405180608001604052806000815260200185600081518110620001b157620001b1620006d0565b6020026020010151815260200186815260200142815250905062000222600754826040516020016200020991908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60408051601f1981840301815291905260085462000230565b50505050505050506200073d565b6000478411156200027c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640160405180910390fd5b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790620002b39088908890600401620006e6565b60206040518083038185885af1158015620002d2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620002f9919062000723565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c816040516200032d91815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000398576200039862000357565b604052919050565b60005b83811015620003bd578181015183820152602001620003a3565b50506000910152565b600082601f830112620003d857600080fd5b815160206001600160401b03821115620003f657620003f662000357565b8160051b620004078282016200036d565b92835284810182019282810190878511156200042257600080fd5b83870192505b84831015620004435782518252918301919083019062000428565b979650505050505050565b60008060008060008060c087890312156200046857600080fd5b86516001600160a01b03811681146200048057600080fd5b60208801519096506001600160401b03808211156200049e57600080fd5b818901915089601f830112620004b357600080fd5b815181811115620004c857620004c862000357565b620004dd601f8201601f19166020016200036d565b8181528b6020838601011115620004f357600080fd5b62000506826020830160208701620003a0565b60408b015160608c01519199509750925050808211156200052657600080fd5b506200053589828a01620003c6565b9350506080870151915060a087015190509295509295509295565b6000826200056e57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200058857607f821691505b602082108103620005a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005ff576000816000526020600020601f850160051c81016020861015620005da5750805b601f850160051c820191505b81811015620005fb57828155600101620005e6565b5050505b505050565b81516001600160401b0381111562000620576200062062000357565b620006388162000631845462000573565b84620005af565b602080601f831160018114620006705760008415620006575750858301515b600019600386901b1c1916600185901b178555620005fb565b600085815260208120601f198616915b82811015620006a15788860151825594840194600190910190840162000680565b5085821015620006c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b604081526000835180604084015262000707816060850160208801620003a0565b602083019390935250601f91909101601f191601606001919050565b6000602082840312156200073657600080fd5b5051919050565b611815806200074d6000396000f3fe6080604052600436106101395760003560e01c80637353d891116100ab578063a0a7ccff1161006f578063a0a7ccff14610327578063ace8e46214610347578063c2c562451461035d578063c91c7b371461037d578063cb3927471461039d578063d997ebf5146103bd57600080fd5b80637353d891146102855780638244741c146102c05780638d68cf59146102255780638da5cb5b146102d55780638f32d59b1461030757600080fd5b80632d9e78b8116100fd5780632d9e78b8146101ef5780633015394c1461020557806343bb58de1461022757806349875db21461023a5780634f7ef8661461025a578063552b0b831461027057600080fd5b8063015594b814610145578063155dd5ee1461017457806322473385146101945780632896de13146101b85780632d16d25b146101da57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50600a5461015f9060ff1681565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b5061015f61018f366004610fb5565b6103d3565b3480156101a057600080fd5b506101aa60085481565b60405190815260200161016b565b3480156101c457600080fd5b506101cd6104a2565b60405161016b919061101e565b3480156101e657600080fd5b5061015f6104c2565b3480156101fb57600080fd5b506101aa60055481565b34801561021157600080fd5b50610225610220366004610fb5565b610519565b005b6101aa6102353660046110d1565b6105b6565b34801561024657600080fd5b5061015f6102553660046111ad565b6105f4565b34801561026657600080fd5b506101aa60065481565b34801561027c57600080fd5b506101cd6109ac565b34801561029157600080fd5b506102a56102a0366004610fb5565b610a3a565b6040805193845260208401929092529082015260600161016b565b3480156102cc57600080fd5b506101cd610a6d565b3480156102e157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016b565b34801561031357600080fd5b506000546001600160a01b0316331461015f565b34801561033357600080fd5b506101cd6103423660046111f9565b610a8d565b34801561035357600080fd5b506101aa60095481565b34801561036957600080fd5b506001546102ef906001600160a01b031681565b34801561038957600080fd5b5061015f61039836600461123b565b610b71565b3480156103a957600080fd5b506102256103b83660046111f9565b610c0d565b3480156103c957600080fd5b506101aa60075481565b600080546001600160a01b031633146104075760405162461bcd60e51b81526004016103fe906112a7565b60405180910390fd5b8147101561044c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6040513390600090829085908381818185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b509093505050505b919050565b60606040518060800160405280604f8152602001611791604f9139905090565b600080546001600160a01b031633146104ed5760405162461bcd60e51b81526004016103fe906112a7565b600a5460ff166104fe576001610501565b60005b600a805460ff1916911515918217905560ff16919050565b6000546001600160a01b031633146105435760405162461bcd60e51b81526004016103fe906112a7565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b291906112fc565b5050565b600080546001600160a01b031633146105e15760405162461bcd60e51b81526004016103fe906112a7565b6105ec848484610e99565b949350505050565b60008381526002602052604081205460ff16151560011461067d5760405162461bcd60e51b815260206004820152603f60248201527f5468697320494420646f6573206e6f742062656c6f6e6720746f20616e20616360448201527f7469766520726571756573742077697468696e207468697320636c69656e740060648201526084016103fe565b60015460405163c58343ef60e01b8152600481018690526000916001600160a01b03169063c58343ef90602401600060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ef9190810190611373565b60a08101519091506001600160a01b03166107585760405162461bcd60e51b8152602060048201526024808201527f596f75206e65656420746f2061636365707420746865207265717565737420666044820152631a5c9cdd60e21b60648201526084016103fe565b610100810151156107ab5760405162461bcd60e51b815260206004820152601d60248201527f546865207265717565737420697320616c726561647920636c6f73656400000060448201526064016103fe565b60a08101516001600160a01b031633146108155760405162461bcd60e51b815260206004820152602560248201527f536f6d656f6e6520656c736520686173206163636570746564207468652052656044820152641c5d595cdd60da1b60648201526084016103fe565b6001546040516324c3aed960e11b81526000916001600160a01b0316906349875db29061084a9089908990899060040161148e565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906112fc565b905080156109a357600086815260026020526040808220805460ff191690555163cb39274760e01b906108c690889088906024016114a8565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600083608001516001600160a01b031684606001518360405161091e91906114bc565b60006040518083038160008787f1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5050604080518a815282151560208201529192507fa531c8f4bbf2a18049d85528bb5aaae66874af94bcb325738ee729a2b6cf8428910160405180910390a150505b95945050505050565b600380546109b9906114d8565b80601f01602080910402602001604051908101604052809291908181526020018280546109e5906114d8565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b505050505081565b60048181548110610a4a57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60606040518060600160405280603f8152602001611752603f9139905090565b6060610ab360405180606001604052806000815260200160008152602001600081525090565b6000610ac184860186611512565b8051835260608101516020840152905060005b600654610ae290600a611672565b811015610b3457602080830151604080850151815193840185905290830152906060016040516020818303038152906040528051906020012003610b2c5760408301819052610b34565b600101610ad4565b5060408051835160208083019190915284015181830152908301516060820152608001604051602081830303815290604052925050505b92915050565b600080610b8085870187611512565b90506000610b908486018661167e565b905080602001518260600151148015610bad575080602001514210155b8015610bba575080518251145b8015610c025750816020015181604001518360400151604051602001610bea929190918252602082015260400190565b60405160208183030381529060405280519060200120145b979650505050505050565b333014610c745760405162461bcd60e51b815260206004820152602f60248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526e31b7b73a3930b1ba1034ba39b2b63360891b60648201526084016103fe565b6000610c828284018461167e565b905080604001516004826000015181548110610ca057610ca06116da565b6000918252602090912060026003909202010155600454610cc3906001906116f0565b815103610d28578060400151604051602001610ce191815260200190565b60408051601f198184030181529082905280516020909101206005557f3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd3690600090a1505050565b8060400151604051602001610d3f91815260200190565b60405160208183030381529060405280519060200120600482600001516001610d689190611703565b81548110610d7857610d786116da565b6000918252602090912060016003909202010155600a5460ff1615610e94576000604051806080016040528083600001516001610db59190611703565b8152602001600484600001516001610dcd9190611703565b81548110610ddd57610ddd6116da565b9060005260206000209060030201600001548152602001600484600001516001610e079190611703565b81548110610e1757610e176116da565b90600052602060002090600302016001015481526020016009548460200151610e409190611703565b905260075460408051835160208083019190915284015181830152908301516060808301919091528301516080820152919250610e919160a001604051602081830303815290604052600854610e99565b50505b505050565b600047841115610ee05760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790610f159088908890600401611716565b60206040518083038185885af1158015610f33573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f589190611738565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c81604051610f8b91815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b600060208284031215610fc757600080fd5b5035919050565b60005b83811015610fe9578181015183820152602001610fd1565b50506000910152565b6000815180845261100a816020860160208601610fce565b601f01601f19169290920160200192915050565b6020815260006110316020830184610ff2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561107257611072611038565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156110a1576110a1611038565b604052919050565b600067ffffffffffffffff8211156110c3576110c3611038565b50601f01601f191660200190565b6000806000606084860312156110e657600080fd5b83359250602084013567ffffffffffffffff81111561110457600080fd5b8401601f8101861361111557600080fd5b8035611128611123826110a9565b611078565b81815287602083850101111561113d57600080fd5b81602084016020830137600060208383010152809450505050604084013590509250925092565b60008083601f84011261117657600080fd5b50813567ffffffffffffffff81111561118e57600080fd5b6020830191508360208285010111156111a657600080fd5b9250929050565b6000806000604084860312156111c257600080fd5b83359250602084013567ffffffffffffffff8111156111e057600080fd5b6111ec86828701611164565b9497909650939450505050565b6000806020838503121561120c57600080fd5b823567ffffffffffffffff81111561122357600080fd5b61122f85828601611164565b90969095509350505050565b6000806000806040858703121561125157600080fd5b843567ffffffffffffffff8082111561126957600080fd5b61127588838901611164565b9096509450602087013591508082111561128e57600080fd5b5061129b87828801611164565b95989497509550505050565b60208082526025908201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060408201526437bbb732b960d91b606082015260800190565b8051801515811461049d57600080fd5b60006020828403121561130e57600080fd5b611031826112ec565b600082601f83011261132857600080fd5b8151611336611123826110a9565b81815284602083860101111561134b57600080fd5b6105ec826020830160208701610fce565b80516001600160a01b038116811461049d57600080fd5b60006020828403121561138557600080fd5b815167ffffffffffffffff8082111561139d57600080fd5b9083019061012082860312156113b257600080fd5b6113ba61104e565b825181526020830151828111156113d057600080fd5b6113dc87828601611317565b60208301525060408301516040820152606083015160608201526114026080840161135c565b608082015261141360a0840161135c565b60a082015260c083015160c082015260e08301518281111561143457600080fd5b61144087828601611317565b60e08301525061010091506114568284016112ec565b91810191909152949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109a3604083018486611465565b6020815260006105ec602083018486611465565b600082516114ce818460208701610fce565b9190910192915050565b600181811c908216806114ec57607f821691505b60208210810361150c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006080828403121561152457600080fd5b6040516080810181811067ffffffffffffffff8211171561154757611547611038565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115c95781600019048211156115af576115af611578565b808516156115bc57918102915b93841c9390800290611593565b509250929050565b6000826115e057506001610b6b565b816115ed57506000610b6b565b8160018114611603576002811461160d57611629565b6001915050610b6b565b60ff84111561161e5761161e611578565b50506001821b610b6b565b5060208310610133831016604e8410600b841016171561164c575081810a610b6b565b611656838361158e565b806000190482111561166a5761166a611578565b029392505050565b600061103183836115d1565b60006060828403121561169057600080fd5b6040516060810181811067ffffffffffffffff821117156116b3576116b3611038565b80604052508235815260208301356020820152604083013560408201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610b6b57610b6b611578565b80820180821115610b6b57610b6b611578565b6040815260006117296040830185610ff2565b90508260208301529392505050565b60006020828403121561174a57600080fd5b505191905056fe7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7da2646970667358221220399722e358a3b7631ce9db42bf224e38c0852dc5b3f161714cb219b85ce77e2f64736f6c63430008170033",
  "bytecodeSha1": "430b86a001319bb3ff3f1c1443851b754dc0ea70",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.23+commit.f704f362"
  },
  "contractName": "TS3000",
  "coverageMap": {
    "branches": {
      "2": {
        "BaseClient._submitRequest": {
          "41": [
            1495,
            1527,
            true
          ]
        },
        "BaseClient.submitResult": {
          "36": [
            2332,
            2367,
            true
          ],
          "37": [
            2524,
            2556,
            true
          ],
          "38": [
            2615,
            2638,
            true
          ],
          "39": [
            2690,
            2720,
            true
          ],
          "40": [
            2856,
            2863,
            false
          ]
        },
        "BaseClient.withdrawFunds": {
          "35": [
            2029,
            2059,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "TS3000.processResult": {
          "33": [
            3113,
            3160,
            false
          ],
          "34": [
            3397,
            3418,
            false
          ]
        },
        "TS3000.resolveOnChain": {
          "32": [
            4877,
            4945,
            false
          ]
        },
        "TS3000.togglePostProcessing": {
          "31": [
            4024,
            4045,
            true
          ]
        }
      }
    },
    "statements": {
      "2": {
        "BaseClient._submitRequest": {
          "28": [
            1487,
            1550
          ],
          "29": [
            1657,
            1689
          ],
          "30": [
            1699,
            1733
          ]
        },
        "BaseClient.cancelRequest": {
          "6": [
            1844,
            1883
          ]
        },
        "BaseClient.submitRequest": {
          "7": [
            1302,
            1358
          ]
        },
        "BaseClient.submitResult": {
          "8": [
            2324,
            2435
          ],
          "9": [
            2516,
            2597
          ],
          "10": [
            2607,
            2672
          ],
          "11": [
            2682,
            2762
          ],
          "12": [
            2879,
            2914
          ],
          "13": [
            3244,
            3292
          ],
          "14": [
            3312,
            3326
          ]
        },
        "BaseClient.withdrawFunds": {
          "2": [
            2021,
            2082
          ]
        }
      },
      "4": {
        "Ownable.isOwner": {
          "1": [
            387,
            414
          ]
        },
        "Ownable.owner": {
          "0": [
            318,
            331
          ]
        }
      },
      "5": {
        "TS3000.checkResult": {
          "22": [
            2292,
            2532
          ]
        },
        "TS3000.getInputDataStructure": {
          "3": [
            4201,
            4289
          ]
        },
        "TS3000.getResultDataStructure": {
          "15": [
            4397,
            4469
          ]
        },
        "TS3000.processResult": {
          "23": [
            3038,
            3099
          ],
          "24": [
            3176,
            3225
          ],
          "25": [
            3239,
            3259
          ],
          "26": [
            3290,
            3379
          ],
          "27": [
            3816,
            3887
          ]
        },
        "TS3000.resolveOnChain": {
          "16": [
            4678,
            4720
          ],
          "17": [
            4730,
            4778
          ],
          "18": [
            4965,
            4991
          ],
          "19": [
            5009,
            5014
          ],
          "20": [
            4847,
            4857
          ],
          "21": [
            5048,
            5073
          ]
        },
        "TS3000.togglePostProcessing": {
          "4": [
            4000,
            4060
          ],
          "5": [
            4070,
            4098
          ]
        }
      }
    }
  },
  "dependencies": [
    "BaseClient",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106101395760003560e01c80637353d891116100ab578063a0a7ccff1161006f578063a0a7ccff14610327578063ace8e46214610347578063c2c562451461035d578063c91c7b371461037d578063cb3927471461039d578063d997ebf5146103bd57600080fd5b80637353d891146102855780638244741c146102c05780638d68cf59146102255780638da5cb5b146102d55780638f32d59b1461030757600080fd5b80632d9e78b8116100fd5780632d9e78b8146101ef5780633015394c1461020557806343bb58de1461022757806349875db21461023a5780634f7ef8661461025a578063552b0b831461027057600080fd5b8063015594b814610145578063155dd5ee1461017457806322473385146101945780632896de13146101b85780632d16d25b146101da57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50600a5461015f9060ff1681565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b5061015f61018f366004610fb5565b6103d3565b3480156101a057600080fd5b506101aa60085481565b60405190815260200161016b565b3480156101c457600080fd5b506101cd6104a2565b60405161016b919061101e565b3480156101e657600080fd5b5061015f6104c2565b3480156101fb57600080fd5b506101aa60055481565b34801561021157600080fd5b50610225610220366004610fb5565b610519565b005b6101aa6102353660046110d1565b6105b6565b34801561024657600080fd5b5061015f6102553660046111ad565b6105f4565b34801561026657600080fd5b506101aa60065481565b34801561027c57600080fd5b506101cd6109ac565b34801561029157600080fd5b506102a56102a0366004610fb5565b610a3a565b6040805193845260208401929092529082015260600161016b565b3480156102cc57600080fd5b506101cd610a6d565b3480156102e157600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016b565b34801561031357600080fd5b506000546001600160a01b0316331461015f565b34801561033357600080fd5b506101cd6103423660046111f9565b610a8d565b34801561035357600080fd5b506101aa60095481565b34801561036957600080fd5b506001546102ef906001600160a01b031681565b34801561038957600080fd5b5061015f61039836600461123b565b610b71565b3480156103a957600080fd5b506102256103b83660046111f9565b610c0d565b3480156103c957600080fd5b506101aa60075481565b600080546001600160a01b031633146104075760405162461bcd60e51b81526004016103fe906112a7565b60405180910390fd5b8147101561044c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6040513390600090829085908381818185875af1925050503d8060008114610490576040519150601f19603f3d011682016040523d82523d6000602084013e610495565b606091505b509093505050505b919050565b60606040518060800160405280604f8152602001611791604f9139905090565b600080546001600160a01b031633146104ed5760405162461bcd60e51b81526004016103fe906112a7565b600a5460ff166104fe576001610501565b60005b600a805460ff1916911515918217905560ff16919050565b6000546001600160a01b031633146105435760405162461bcd60e51b81526004016103fe906112a7565b600154604051630c054e5360e21b8152600481018390526001600160a01b0390911690633015394c906024016020604051808303816000875af115801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b291906112fc565b5050565b600080546001600160a01b031633146105e15760405162461bcd60e51b81526004016103fe906112a7565b6105ec848484610e99565b949350505050565b60008381526002602052604081205460ff16151560011461067d5760405162461bcd60e51b815260206004820152603f60248201527f5468697320494420646f6573206e6f742062656c6f6e6720746f20616e20616360448201527f7469766520726571756573742077697468696e207468697320636c69656e740060648201526084016103fe565b60015460405163c58343ef60e01b8152600481018690526000916001600160a01b03169063c58343ef90602401600060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ef9190810190611373565b60a08101519091506001600160a01b03166107585760405162461bcd60e51b8152602060048201526024808201527f596f75206e65656420746f2061636365707420746865207265717565737420666044820152631a5c9cdd60e21b60648201526084016103fe565b610100810151156107ab5760405162461bcd60e51b815260206004820152601d60248201527f546865207265717565737420697320616c726561647920636c6f73656400000060448201526064016103fe565b60a08101516001600160a01b031633146108155760405162461bcd60e51b815260206004820152602560248201527f536f6d656f6e6520656c736520686173206163636570746564207468652052656044820152641c5d595cdd60da1b60648201526084016103fe565b6001546040516324c3aed960e11b81526000916001600160a01b0316906349875db29061084a9089908990899060040161148e565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906112fc565b905080156109a357600086815260026020526040808220805460ff191690555163cb39274760e01b906108c690889088906024016114a8565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600083608001516001600160a01b031684606001518360405161091e91906114bc565b60006040518083038160008787f1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5050604080518a815282151560208201529192507fa531c8f4bbf2a18049d85528bb5aaae66874af94bcb325738ee729a2b6cf8428910160405180910390a150505b95945050505050565b600380546109b9906114d8565b80601f01602080910402602001604051908101604052809291908181526020018280546109e5906114d8565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b505050505081565b60048181548110610a4a57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60606040518060600160405280603f8152602001611752603f9139905090565b6060610ab360405180606001604052806000815260200160008152602001600081525090565b6000610ac184860186611512565b8051835260608101516020840152905060005b600654610ae290600a611672565b811015610b3457602080830151604080850151815193840185905290830152906060016040516020818303038152906040528051906020012003610b2c5760408301819052610b34565b600101610ad4565b5060408051835160208083019190915284015181830152908301516060820152608001604051602081830303815290604052925050505b92915050565b600080610b8085870187611512565b90506000610b908486018661167e565b905080602001518260600151148015610bad575080602001514210155b8015610bba575080518251145b8015610c025750816020015181604001518360400151604051602001610bea929190918252602082015260400190565b60405160208183030381529060405280519060200120145b979650505050505050565b333014610c745760405162461bcd60e51b815260206004820152602f60248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526e31b7b73a3930b1ba1034ba39b2b63360891b60648201526084016103fe565b6000610c828284018461167e565b905080604001516004826000015181548110610ca057610ca06116da565b6000918252602090912060026003909202010155600454610cc3906001906116f0565b815103610d28578060400151604051602001610ce191815260200190565b60408051601f198184030181529082905280516020909101206005557f3523c39eb1a9c40e6a7c7504001ca3d223a7675dc8634b5aa1b056124b87cd3690600090a1505050565b8060400151604051602001610d3f91815260200190565b60405160208183030381529060405280519060200120600482600001516001610d689190611703565b81548110610d7857610d786116da565b6000918252602090912060016003909202010155600a5460ff1615610e94576000604051806080016040528083600001516001610db59190611703565b8152602001600484600001516001610dcd9190611703565b81548110610ddd57610ddd6116da565b9060005260206000209060030201600001548152602001600484600001516001610e079190611703565b81548110610e1757610e176116da565b90600052602060002090600302016001015481526020016009548460200151610e409190611703565b905260075460408051835160208083019190915284015181830152908301516060808301919091528301516080820152919250610e919160a001604051602081830303815290604052600854610e99565b50505b505050565b600047841115610ee05760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016103fe565b6001546040516378f8af2560e11b81526000916001600160a01b03169063f1f15e4a908790610f159088908890600401611716565b60206040518083038185885af1158015610f33573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f589190611738565b90507fd3b0b0209035a5613265e8fb1f38873ea24c7c6189b128eebe3689c03d13905c81604051610f8b91815260200190565b60405180910390a16000818152600260205260409020805460ff1916600117905590509392505050565b600060208284031215610fc757600080fd5b5035919050565b60005b83811015610fe9578181015183820152602001610fd1565b50506000910152565b6000815180845261100a816020860160208601610fce565b601f01601f19169290920160200192915050565b6020815260006110316020830184610ff2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561107257611072611038565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156110a1576110a1611038565b604052919050565b600067ffffffffffffffff8211156110c3576110c3611038565b50601f01601f191660200190565b6000806000606084860312156110e657600080fd5b83359250602084013567ffffffffffffffff81111561110457600080fd5b8401601f8101861361111557600080fd5b8035611128611123826110a9565b611078565b81815287602083850101111561113d57600080fd5b81602084016020830137600060208383010152809450505050604084013590509250925092565b60008083601f84011261117657600080fd5b50813567ffffffffffffffff81111561118e57600080fd5b6020830191508360208285010111156111a657600080fd5b9250929050565b6000806000604084860312156111c257600080fd5b83359250602084013567ffffffffffffffff8111156111e057600080fd5b6111ec86828701611164565b9497909650939450505050565b6000806020838503121561120c57600080fd5b823567ffffffffffffffff81111561122357600080fd5b61122f85828601611164565b90969095509350505050565b6000806000806040858703121561125157600080fd5b843567ffffffffffffffff8082111561126957600080fd5b61127588838901611164565b9096509450602087013591508082111561128e57600080fd5b5061129b87828801611164565b95989497509550505050565b60208082526025908201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060408201526437bbb732b960d91b606082015260800190565b8051801515811461049d57600080fd5b60006020828403121561130e57600080fd5b611031826112ec565b600082601f83011261132857600080fd5b8151611336611123826110a9565b81815284602083860101111561134b57600080fd5b6105ec826020830160208701610fce565b80516001600160a01b038116811461049d57600080fd5b60006020828403121561138557600080fd5b815167ffffffffffffffff8082111561139d57600080fd5b9083019061012082860312156113b257600080fd5b6113ba61104e565b825181526020830151828111156113d057600080fd5b6113dc87828601611317565b60208301525060408301516040820152606083015160608201526114026080840161135c565b608082015261141360a0840161135c565b60a082015260c083015160c082015260e08301518281111561143457600080fd5b61144087828601611317565b60e08301525061010091506114568284016112ec565b91810191909152949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109a3604083018486611465565b6020815260006105ec602083018486611465565b600082516114ce818460208701610fce565b9190910192915050565b600181811c908216806114ec57607f821691505b60208210810361150c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006080828403121561152457600080fd5b6040516080810181811067ffffffffffffffff8211171561154757611547611038565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156115c95781600019048211156115af576115af611578565b808516156115bc57918102915b93841c9390800290611593565b509250929050565b6000826115e057506001610b6b565b816115ed57506000610b6b565b8160018114611603576002811461160d57611629565b6001915050610b6b565b60ff84111561161e5761161e611578565b50506001821b610b6b565b5060208310610133831016604e8410600b841016171561164c575081810a610b6b565b611656838361158e565b806000190482111561166a5761166a611578565b029392505050565b600061103183836115d1565b60006060828403121561169057600080fd5b6040516060810181811067ffffffffffffffff821117156116b3576116b3611038565b80604052508235815260208301356020820152604083013560408201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610b6b57610b6b611578565b80820180821115610b6b57610b6b611578565b6040815260006117296040830185610ff2565b90508260208301529392505050565b60006020828403121561174a57600080fd5b505191905056fe7b75696e7420667261676d656e74496e6465783b2075696e742074696d657374616d705265737472696374696f6e3b2075696e742070617373636f64653b7d7b75696e7420667261676d656e74496e6465783b206279746573333220676c6f62616c486173683b2062797465733332206c6f63616c486173683b2075696e74206d696e54696d657374616d703b7da2646970667358221220399722e358a3b7631ce9db42bf224e38c0852dc5b3f161714cb219b85ce77e2f64736f6c63430008170033",
  "deployedSourceMap": "99:4983:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:33;;;;;;;;;;-1:-1:-1;782:33:5;;;;;;;;;;;179:14:10;;172:22;154:41;;142:2;127:18;782:33:5;;;;;;;;1944:279:2;;;;;;;;;;-1:-1:-1;1944:279:2;;;;;:::i;:::-;;:::i;706:29:5:-;;;;;;;;;;;;;;;;;;;537:25:10;;;525:2;510:18;706:29:5;391:177:10;4111:185:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3924:181::-;;;;;;;;;;;;;:::i;605:23::-;;;;;;;;;;;;;;;;1776:114:2;;;;;;;;;;-1:-1:-1;1776:114:2;;;;;:::i;:::-;;:::i;:::-;;1171:194;;;;;;:::i;:::-;;:::i;2229:1104::-;;;;;;;;;;-1:-1:-1;2229:1104:2;;;;;:::i;:::-;;:::i;635:30:5:-;;;;;;;;;;;;;;;;523:37;;;;;;;;;;;;;:::i;566:33::-;;;;;;;;;;-1:-1:-1;566:33:5;;;;;:::i;:::-;;:::i;:::-;;;;4222:25:10;;;4278:2;4263:18;;4256:34;;;;4306:18;;;4299:34;4210:2;4195:18;566:33:5;4020:319:10;4306:170:5;;;;;;;;;;;;;:::i;270:64:4:-;;;;;;;;;;-1:-1:-1;307:7:4;325:6;-1:-1:-1;;;;;325:6:4;270:64;;;-1:-1:-1;;;;;4508:32:10;;;4490:51;;4478:2;4463:18;270:64:4;4344:203:10;340:77:4;;;;;;;;;;-1:-1:-1;379:4:4;408:6;-1:-1:-1;;;;;408:6:4;394:10;:20;340:77;;4482:598:5;;;;;;;;;;-1:-1:-1;4482:598:5;;;;;:::i;:::-;;:::i;741:35::-;;;;;;;;;;;;;;;;175:37:2;;;;;;;;;;-1:-1:-1;175:37:2;;;;-1:-1:-1;;;;;175:37:2;;;2044:495:5;;;;;;;;;;-1:-1:-1;2044:495:5;;;;;:::i;:::-;;:::i;2545:1373::-;;;;;;;;;;-1:-1:-1;2545:1373:5;;;;;:::i;:::-;;:::i;671:29::-;;;;;;;;;;;;;;;;1944:279:2;2005:4;408:6:4;;-1:-1:-1;;;;;408:6:4;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:4;;;;;;;:::i;:::-;;;;;;;;;2054:5:2::1;2029:21;:30;;2021:61;;;::::0;-1:-1:-1;;;2021:61:2;;6751:2:10;2021:61:2::1;::::0;::::1;6733:21:10::0;6790:2;6770:18;;;6763:30;-1:-1:-1;;;6809:18:10;;;6802:48;6867:18;;2021:61:2::1;6549:342:10::0;2021:61:2::1;2164:28;::::0;2124:10:::1;::::0;2092:21:::1;::::0;2124:10;;2182:5;;2092:21;2164:28;2092:21;2164:28;2182:5;2124:10;2164:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2145:47:2;;-1:-1:-1;;;;190:1:4::1;1944:279:2::0;;;:::o;4111:185:5:-;4176:13;4201:88;;;;;;;;;;;;;;;;;;;4111:185;:::o;3924:181::-;3984:4;408:6:4;;-1:-1:-1;;;;;408:6:4;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:4;;;;;;;:::i;:::-;4024:21:5::1;::::0;::::1;;:36;;4056:4;4024:36;;;4048:5;4024:36;4000:21;:60:::0;;-1:-1:-1;;4000:60:5::1;::::0;::::1;;::::0;;::::1;::::0;;::::1;4077:21:::0;;3924:181;-1:-1:-1;3924:181:5:o;1776:114:2:-;379:4:4;408:6;-1:-1:-1;;;;;408:6:4;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:4;;;;;;;:::i;:::-;1844:14:2::1;::::0;:39:::1;::::0;-1:-1:-1;;;1844:39:2;;::::1;::::0;::::1;537:25:10::0;;;-1:-1:-1;;;;;1844:14:2;;::::1;::::0;:28:::1;::::0;510:18:10;;1844:39:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1776:114:::0;:::o;1171:194::-;1286:4;408:6:4;;-1:-1:-1;;;;;408:6:4;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:4;;;;;;;:::i;:::-;1309:49:2::1;1324:7;1333:5;1340:17;1309:14;:49::i;:::-;1302:56:::0;1171:194;-1:-1:-1;;;;1171:194:2:o;2229:1104::-;2308:4;2332:27;;;:16;:27;;;;;;;;:35;;:27;:35;2324:111;;;;-1:-1:-1;;;2324:111:2;;7684:2:10;2324:111:2;;;7666:21:10;7723:2;7703:18;;;7696:30;7762:34;7742:18;;;7735:62;7833:33;7813:18;;;7806:61;7884:19;;2324:111:2;7482:427:10;2324:111:2;2470:14;;:36;;-1:-1:-1;;;2470:36:2;;;;;537:25:10;;;2445:22:2;;-1:-1:-1;;;;;2470:14:2;;:25;;510:18:10;;2470:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2470:36:2;;;;;;;;;;;;:::i;:::-;2524:16;;;;2445:61;;-1:-1:-1;;;;;;2524:32:2;2516:81;;;;-1:-1:-1;;;2516:81:2;;10034:2:10;2516:81:2;;;10016:21:10;10073:2;10053:18;;;10046:30;10112:34;10092:18;;;10085:62;-1:-1:-1;;;10163:18:10;;;10156:34;10207:19;;2516:81:2;9832:400:10;2516:81:2;2615:14;;;;:23;2607:65;;;;-1:-1:-1;;;2607:65:2;;10439:2:10;2607:65:2;;;10421:21:10;10478:2;10458:18;;;10451:30;10517:31;10497:18;;;10490:59;10566:18;;2607:65:2;10237:353:10;2607:65:2;2690:16;;;;-1:-1:-1;;;;;2690:30:2;2710:10;2690:30;2682:80;;;;-1:-1:-1;;;2682:80:2;;10797:2:10;2682:80:2;;;10779:21:10;10836:2;10816:18;;;10809:30;10875:34;10855:18;;;10848:62;-1:-1:-1;;;10926:18:10;;;10919:35;10971:19;;2682:80:2;10595:401:10;2682:80:2;2796:14;;:46;;-1:-1:-1;;;2796:46:2;;2781:12;;-1:-1:-1;;;;;2796:14:2;;:27;;:46;;2824:9;;2835:6;;;;2796:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2781:61;;2856:7;2852:451;;;2909:5;2879:27;;;:16;:27;;;;;;:35;;-1:-1:-1;;2879:35:2;;;2948:69;-1:-1:-1;;;2971:37:2;2948:69;;3010:6;;;;2948:69;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2948:69:2;;;;;;;-1:-1:-1;;;;;2948:69:2;;;;;;;;;;;2928:89;;3032:16;3062:7;:14;;;-1:-1:-1;;;;;3054:28:2;3088:7;:25;;;3115:4;3054:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3249:43:2;;;12301:25:10;;;12369:14;;12362:22;12357:2;12342:18;;12335:50;3031:89:2;;-1:-1:-1;3249:43:2;;12274:18:10;3249:43:2;;;;;;;2865:438;;2852:451;3319:7;2229:1104;-1:-1:-1;;;;;2229:1104:2:o;523:37:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;566:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;566:33:5;:::o;4306:170::-;4372:13;4397:72;;;;;;;;;;;;;;;;;;;4306:170;:::o;4482:598::-;4562:12;4587:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;4587:20:5;4617:18;4638:30;;;;4649:9;4638:30;:::i;:::-;4701:19;;4678:42;;4760:18;;;;4730:27;;;:48;4617:51;-1:-1:-1;4701:19:5;4788:251;4827:18;;4823:22;;:2;:22;:::i;:::-;4812:8;:33;4788:251;;;4929:16;;;;;4908:15;;;;;4887:37;;;;;15096:25:10;;;15137:18;;;15130:34;4929:16:5;15069:18:10;;4887:37:5;;;;;;;;;;;;4877:48;;;;;;:68;4873:156;;4965:15;;;:26;;;5009:5;;4873:156;4847:10;;4788:251;;;-1:-1:-1;5055:18:5;;;15387:13:10;;5055:18:5;;;;15369:32:10;;;;15445:17;;15439:24;15417:20;;;15410:54;15508:17;;;15502:24;15480:20;;;15473:54;15342:18;;5055::5;;;;;;;;;;;;5048:25;;;;4482:598;;;;;:::o;2044:495::-;2150:4;;2187:30;;;;2198:9;2187:30;:::i;:::-;2166:51;-1:-1:-1;2227:20:5;2250:32;;;;2261:10;2250:32;:::i;:::-;2227:55;;2322:6;:27;;;2300:5;:18;;;:49;2299:103;;;;;2374:6;:27;;;2355:15;:46;;2299:103;:152;;;;-1:-1:-1;2430:20:5;;2407:19;;:43;2299:152;:233;;;;;2515:5;:16;;;2477:6;:15;;;2494:5;:15;;;2466:44;;;;;;;;15096:25:10;;;15152:2;15137:18;;15130:34;15084:2;15069:18;;14922:248;2466:44:5;;;;;;;;;;;;;2456:55;;;;;;:75;2299:233;2292:240;2044:495;-1:-1:-1;;;;;;;2044:495:5:o;2545:1373::-;409:10:2;431:4;409:27;401:87;;;;-1:-1:-1;;;401:87:2;;16314:2:10;401:87:2;;;16296:21:10;16353:2;16333:18;;;16326:30;16392:34;16372:18;;;16365:62;-1:-1:-1;;;16443:18:10;;;16436:45;16498:19;;401:87:2;16112:411:10;401:87:2;2973:20:5::1;2996:32;::::0;;::::1;3007:10:::0;2996:32:::1;:::i;:::-;2973:55;;3084:6;:15;;;3038:12;3051:6;:20;;;3038:34;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:43:::1;:34;::::0;;::::1;;:43;:61:::0;3137:12:::1;:19:::0;:23:::1;::::0;3159:1:::1;::::0;3137:23:::1;:::i;:::-;3113:20:::0;;:47;3109:803:::1;;3208:6;:15;;;3197:27;;;;;;537:25:10::0;;525:2;510:18;;391:177;3197:27:5::1;;::::0;;-1:-1:-1;;3197:27:5;;::::1;::::0;;;;;;;3187:38;;3197:27:::1;3187:38:::0;;::::1;::::0;3176:8:::1;:49:::0;3244:15:::1;::::0;;;::::1;2622:1296;2545:1373:::0;;:::o;3109:803::-:1;3362:6;:15;;;3351:27;;;;;;537:25:10::0;;525:2;510:18;;391:177;3351:27:5::1;;;;;;;;;;;;;3341:38;;;;;;3290:12;3303:6;:20;;;3326:1;3303:24;;;;:::i;:::-;3290:38;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:48:::1;:38;::::0;;::::1;;:48;:89:::0;3397:21:::1;::::0;::::1;;3393:509;;;3438:18;3459:339;;;;;;;;3502:6;:20;;;3525:1;3502:24;;;;:::i;:::-;3459:339;;;;3560:12;3573:6;:20;;;3596:1;3573:24;;;;:::i;:::-;3560:38;;;;;;;;:::i;:::-;;;;;;;;;;;:49;;;3459:339;;;;3642:12;3655:6;:20;;;3678:1;3655:24;;;;:::i;:::-;3642:38;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;3459:339;;;;3756:23;;3726:6;:27;;;:53;;;;:::i;:::-;3459:339:::0;;3831:17:::1;::::0;3850::::1;::::0;;17134:13:10;;3850:17:5::1;::::0;;::::1;17116:32:10::0;;;;17192:17;;17186:24;17164:20;;;17157:54;17255:17;;;17249:24;17227:20;;;;17220:54;;;;17318:17;;17312:24;17290:20;;;17283:54;3438:360:5;;-1:-1:-1;3816:71:5::1;::::0;17088:19:10;;3850:17:5::1;;;;;;;;;;;;3869;;3816:14;:71::i;:::-;;3420:482;3393:509;2622:1296;2545:1373:::0;;:::o;1371:399:2:-;1471:4;1506:21;1495:7;:32;;1487:63;;;;-1:-1:-1;;;1487:63:2;;6751:2:10;1487:63:2;;;6733:21:10;6790:2;6770:18;;;6763:30;-1:-1:-1;;;6809:18:10;;;6802:48;6867:18;;1487:63:2;6549:342:10;1487:63:2;1577:14;;:70;;-1:-1:-1;;;1577:70:2;;1560:14;;-1:-1:-1;;;;;1577:14:2;;:28;;1613:7;;1577:70;;1622:5;;1629:17;;1577:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1560:87;;1662:27;1679:9;1662:27;;;;537:25:10;;525:2;510:18;;391:177;1662:27:2;;;;;;;;1699;;;;:16;:27;;;;;:34;;-1:-1:-1;;1699:34:2;1729:4;1699:34;;;1716:9;-1:-1:-1;1371:399:2;;;;;:::o;206:180:10:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:10;;206:180;-1:-1:-1;206:180:10:o;573:250::-;658:1;668:113;682:6;679:1;676:13;668:113;;;758:11;;;752:18;739:11;;;732:39;704:2;697:10;668:113;;;-1:-1:-1;;815:1:10;797:16;;790:27;573:250::o;828:271::-;870:3;908:5;902:12;935:6;930:3;923:19;951:76;1020:6;1013:4;1008:3;1004:14;997:4;990:5;986:16;951:76;:::i;:::-;1081:2;1060:15;-1:-1:-1;;1056:29:10;1047:39;;;;1088:4;1043:50;;828:271;-1:-1:-1;;828:271:10:o;1104:220::-;1253:2;1242:9;1235:21;1216:4;1273:45;1314:2;1303:9;1299:18;1291:6;1273:45;:::i;:::-;1265:53;1104:220;-1:-1:-1;;;1104:220:10:o;1511:127::-;1572:10;1567:3;1563:20;1560:1;1553:31;1603:4;1600:1;1593:15;1627:4;1624:1;1617:15;1643:255;1715:2;1709:9;1757:6;1745:19;;1794:18;1779:34;;1815:22;;;1776:62;1773:88;;;1841:18;;:::i;:::-;1877:2;1870:22;1643:255;:::o;1903:275::-;1974:2;1968:9;2039:2;2020:13;;-1:-1:-1;;2016:27:10;2004:40;;2074:18;2059:34;;2095:22;;;2056:62;2053:88;;;2121:18;;:::i;:::-;2157:2;2150:22;1903:275;;-1:-1:-1;1903:275:10:o;2183:186::-;2231:4;2264:18;2256:6;2253:30;2250:56;;;2286:18;;:::i;:::-;-1:-1:-1;2352:2:10;2331:15;-1:-1:-1;;2327:29:10;2358:4;2323:40;;2183:186::o;2374:807::-;2460:6;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2581:9;2568:23;2558:33;;2642:2;2631:9;2627:18;2614:32;2669:18;2661:6;2658:30;2655:50;;;2701:1;2698;2691:12;2655:50;2724:22;;2777:4;2769:13;;2765:27;-1:-1:-1;2755:55:10;;2806:1;2803;2796:12;2755:55;2842:2;2829:16;2867:48;2883:31;2911:2;2883:31;:::i;:::-;2867:48;:::i;:::-;2938:2;2931:5;2924:17;2978:7;2973:2;2968;2964;2960:11;2956:20;2953:33;2950:53;;;2999:1;2996;2989:12;2950:53;3054:2;3049;3045;3041:11;3036:2;3029:5;3025:14;3012:45;3098:1;3093:2;3088;3081:5;3077:14;3073:23;3066:34;3119:5;3109:15;;;;;3171:2;3160:9;3156:18;3143:32;3133:42;;2374:807;;;;;:::o;3186:347::-;3237:8;3247:6;3301:3;3294:4;3286:6;3282:17;3278:27;3268:55;;3319:1;3316;3309:12;3268:55;-1:-1:-1;3342:20:10;;3385:18;3374:30;;3371:50;;;3417:1;3414;3407:12;3371:50;3454:4;3446:6;3442:17;3430:29;;3506:3;3499:4;3490:6;3482;3478:19;3474:30;3471:39;3468:59;;;3523:1;3520;3513:12;3468:59;3186:347;;;;;:::o;3538:477::-;3617:6;3625;3633;3686:2;3674:9;3665:7;3661:23;3657:32;3654:52;;;3702:1;3699;3692:12;3654:52;3738:9;3725:23;3715:33;;3799:2;3788:9;3784:18;3771:32;3826:18;3818:6;3815:30;3812:50;;;3858:1;3855;3848:12;3812:50;3897:58;3947:7;3938:6;3927:9;3923:22;3897:58;:::i;:::-;3538:477;;3974:8;;-1:-1:-1;3871:84:10;;-1:-1:-1;;;;3538:477:10:o;4552:409::-;4622:6;4630;4683:2;4671:9;4662:7;4658:23;4654:32;4651:52;;;4699:1;4696;4689:12;4651:52;4739:9;4726:23;4772:18;4764:6;4761:30;4758:50;;;4804:1;4801;4794:12;4758:50;4843:58;4893:7;4884:6;4873:9;4869:22;4843:58;:::i;:::-;4920:8;;4817:84;;-1:-1:-1;4552:409:10;-1:-1:-1;;;;4552:409:10:o;5421:717::-;5511:6;5519;5527;5535;5588:2;5576:9;5567:7;5563:23;5559:32;5556:52;;;5604:1;5601;5594:12;5556:52;5644:9;5631:23;5673:18;5714:2;5706:6;5703:14;5700:34;;;5730:1;5727;5720:12;5700:34;5769:58;5819:7;5810:6;5799:9;5795:22;5769:58;:::i;:::-;5846:8;;-1:-1:-1;5743:84:10;-1:-1:-1;5934:2:10;5919:18;;5906:32;;-1:-1:-1;5950:16:10;;;5947:36;;;5979:1;5976;5969:12;5947:36;;6018:60;6070:7;6059:8;6048:9;6044:24;6018:60;:::i;:::-;5421:717;;;;-1:-1:-1;6097:8:10;-1:-1:-1;;;;5421:717:10:o;6143:401::-;6345:2;6327:21;;;6384:2;6364:18;;;6357:30;6423:34;6418:2;6403:18;;6396:62;-1:-1:-1;;;6489:2:10;6474:18;;6467:35;6534:3;6519:19;;6143:401::o;7106:164::-;7182:13;;7231;;7224:21;7214:32;;7204:60;;7260:1;7257;7250:12;7275:202;7342:6;7395:2;7383:9;7374:7;7370:23;7366:32;7363:52;;;7411:1;7408;7401:12;7363:52;7434:37;7461:9;7434:37;:::i;7914:441::-;7967:5;8020:3;8013:4;8005:6;8001:17;7997:27;7987:55;;8038:1;8035;8028:12;7987:55;8067:6;8061:13;8098:48;8114:31;8142:2;8114:31;:::i;8098:48::-;8171:2;8162:7;8155:19;8217:3;8210:4;8205:2;8197:6;8193:15;8189:26;8186:35;8183:55;;;8234:1;8231;8224:12;8183:55;8247:77;8321:2;8314:4;8305:7;8301:18;8294:4;8286:6;8282:17;8247:77;:::i;8360:189::-;8451:13;;-1:-1:-1;;;;;8493:31:10;;8483:42;;8473:70;;8539:1;8536;8529:12;8554:1273;8648:6;8701:2;8689:9;8680:7;8676:23;8672:32;8669:52;;;8717:1;8714;8707:12;8669:52;8750:9;8744:16;8779:18;8820:2;8812:6;8809:14;8806:34;;;8836:1;8833;8826:12;8806:34;8859:22;;;;8915:6;8897:16;;;8893:29;8890:49;;;8935:1;8932;8925:12;8890:49;8961:22;;:::i;:::-;9012:2;9006:9;8999:5;8992:24;9055:2;9051;9047:11;9041:18;9084:2;9074:8;9071:16;9068:36;;;9100:1;9097;9090:12;9068:36;9136:55;9183:7;9172:8;9168:2;9164:17;9136:55;:::i;:::-;9131:2;9124:5;9120:14;9113:79;;9238:2;9234;9230:11;9224:18;9219:2;9212:5;9208:14;9201:42;9289:2;9285;9281:11;9275:18;9270:2;9263:5;9259:14;9252:42;9327:55;9377:3;9373:2;9369:12;9327:55;:::i;:::-;9321:3;9314:5;9310:15;9303:80;9416:55;9466:3;9462:2;9458:12;9416:55;:::i;:::-;9410:3;9403:5;9399:15;9392:80;9519:3;9515:2;9511:12;9505:19;9499:3;9492:5;9488:15;9481:44;9564:3;9560:2;9556:12;9550:19;9594:2;9584:8;9581:16;9578:36;;;9610:1;9607;9600:12;9578:36;9647:55;9694:7;9683:8;9679:2;9675:17;9647:55;:::i;:::-;9641:3;9634:5;9630:15;9623:80;;9722:3;9712:13;;9757:39;9792:2;9788;9784:11;9757:39;:::i;:::-;9741:14;;;9734:63;;;;9745:5;8554:1273;-1:-1:-1;;;;8554:1273:10:o;11001:266::-;11089:6;11084:3;11077:19;11141:6;11134:5;11127:4;11122:3;11118:14;11105:43;-1:-1:-1;11193:1:10;11168:16;;;11186:4;11164:27;;;11157:38;;;;11249:2;11228:15;;;-1:-1:-1;;11224:29:10;11215:39;;;11211:50;;11001:266::o;11272:315::-;11457:6;11446:9;11439:25;11500:2;11495;11484:9;11480:18;11473:30;11420:4;11520:61;11577:2;11566:9;11562:18;11554:6;11546;11520:61;:::i;11592:244::-;11749:2;11738:9;11731:21;11712:4;11769:61;11826:2;11815:9;11811:18;11803:6;11795;11769:61;:::i;11841:287::-;11970:3;12008:6;12002:13;12024:66;12083:6;12078:3;12071:4;12063:6;12059:17;12024:66;:::i;:::-;12106:16;;;;;11841:287;-1:-1:-1;;11841:287:10:o;12396:380::-;12475:1;12471:12;;;;12518;;;12539:61;;12593:4;12585:6;12581:17;12571:27;;12539:61;12646:2;12638:6;12635:14;12615:18;12612:38;12609:161;;12692:10;12687:3;12683:20;12680:1;12673:31;12727:4;12724:1;12717:15;12755:4;12752:1;12745:15;12609:161;;12396:380;;;:::o;12781:636::-;12863:6;12916:3;12904:9;12895:7;12891:23;12887:33;12884:53;;;12933:1;12930;12923:12;12884:53;12966:2;12960:9;13008:3;13000:6;12996:16;13078:6;13066:10;13063:22;13042:18;13030:10;13027:34;13024:62;13021:88;;;13089:18;;:::i;:::-;13129:10;13125:2;13118:22;;13177:9;13164:23;13156:6;13149:39;13249:2;13238:9;13234:18;13221:32;13216:2;13208:6;13204:15;13197:57;13315:2;13304:9;13300:18;13287:32;13282:2;13274:6;13270:15;13263:57;13381:2;13370:9;13366:18;13353:32;13348:2;13340:6;13336:15;13329:57;13405:6;13395:16;;;12781:636;;;;:::o;13422:127::-;13483:10;13478:3;13474:20;13471:1;13464:31;13514:4;13511:1;13504:15;13538:4;13535:1;13528:15;13554:416;13643:1;13680:5;13643:1;13694:270;13715:7;13705:8;13702:21;13694:270;;;13774:4;13770:1;13766:6;13762:17;13756:4;13753:27;13750:53;;;13783:18;;:::i;:::-;13833:7;13823:8;13819:22;13816:55;;;13853:16;;;;13816:55;13932:22;;;;13892:15;;;;13694:270;;;13698:3;13554:416;;;;;:::o;13975:806::-;14024:5;14054:8;14044:80;;-1:-1:-1;14095:1:10;14109:5;;14044:80;14143:4;14133:76;;-1:-1:-1;14180:1:10;14194:5;;14133:76;14225:4;14243:1;14238:59;;;;14311:1;14306:130;;;;14218:218;;14238:59;14268:1;14259:10;;14282:5;;;14306:130;14343:3;14333:8;14330:17;14327:43;;;14350:18;;:::i;:::-;-1:-1:-1;;14406:1:10;14392:16;;14421:5;;14218:218;;14520:2;14510:8;14507:16;14501:3;14495:4;14492:13;14488:36;14482:2;14472:8;14469:16;14464:2;14458:4;14455:12;14451:35;14448:77;14445:159;;;-1:-1:-1;14557:19:10;;;14589:5;;14445:159;14636:34;14661:8;14655:4;14636:34;:::i;:::-;14706:6;14702:1;14698:6;14694:19;14685:7;14682:32;14679:58;;;14717:18;;:::i;:::-;14755:20;;13975:806;-1:-1:-1;;;13975:806:10:o;14786:131::-;14846:5;14875:36;14902:8;14896:4;14875:36;:::i;15538:569::-;15621:6;15674:2;15662:9;15653:7;15649:23;15645:32;15642:52;;;15690:1;15687;15680:12;15642:52;15723:2;15717:9;15765:2;15757:6;15753:15;15834:6;15822:10;15819:22;15798:18;15786:10;15783:34;15780:62;15777:88;;;15845:18;;:::i;:::-;15885:10;15881:2;15874:22;;15933:9;15920:23;15912:6;15905:39;16005:2;15994:9;15990:18;15977:32;15972:2;15964:6;15960:15;15953:57;16071:2;16060:9;16056:18;16043:32;16038:2;16030:6;16026:15;16019:57;16095:6;16085:16;;;15538:569;;;;:::o;16528:127::-;16589:10;16584:3;16580:20;16577:1;16570:31;16620:4;16617:1;16610:15;16644:4;16641:1;16634:15;16660:128;16727:9;;;16748:11;;;16745:37;;;16762:18;;:::i;16793:125::-;16858:9;;;16879:10;;;16876:36;;;16892:18;;:::i;17348:289::-;17523:2;17512:9;17505:21;17486:4;17543:45;17584:2;17573:9;17569:18;17561:6;17543:45;:::i;:::-;17535:53;;17624:6;17619:2;17608:9;17604:18;17597:34;17348:289;;;;;:::o;17642:184::-;17712:6;17765:2;17753:9;17744:7;17740:23;17736:32;17733:52;;;17781:1;17778;17771:12;17733:52;-1:-1:-1;17804:16:10;;17642:184;-1:-1:-1;17642:184:10:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    99,
    5082
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7353D891 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA0A7CCFF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA0A7CCFF EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xACE8E462 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC2C56245 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC91C7B37 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xCB392747 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xD997EBF5 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7353D891 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8244741C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x8D68CF59 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D9E78B8 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2D9E78B8 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x43BB58DE EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x49875DB2 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x4F7EF866 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x552B0B83 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15594B8 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x22473385 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2896DE13 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2D16D25B EQ PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x4C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x9AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0xA6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x123B JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x495 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1791 PUSH1 0x4F SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x4FE JUMPI PUSH1 0x1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC054E53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3015394C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FE SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x5EC DUP5 DUP5 DUP5 PUSH2 0xE99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320494420646F6573206E6F742062656C6F6E6720746F20616E206163 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7469766520726571756573742077697468696E207468697320636C69656E7400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC58343EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC58343EF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6EF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F206163636570742074686520726571756573742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5C9CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207265717565737420697320616C726561647920636C6F736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F6D656F6E6520656C73652068617320616363657074656420746865205265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1C5D595CDD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24C3AED9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49875DB2 SWAP1 PUSH2 0x84A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x148E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH4 0xCB392747 PUSH1 0xE0 SHL SWAP1 PUSH2 0x8C6 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x961 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0xA531C8F4BBF2A18049D85528BB5AAAE66874AF94BCB325738EE729A2B6CF8428 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x9B9 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9E5 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1752 PUSH1 0x3F SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAB3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC1 DUP5 DUP7 ADD DUP7 PUSH2 0x1512 JUMP JUMPDEST DUP1 MLOAD DUP4 MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xAE2 SWAP1 PUSH1 0xA PUSH2 0x1672 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP2 MLOAD SWAP4 DUP5 ADD DUP6 SWAP1 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xB2C JUMPI PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAD4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB80 DUP6 DUP8 ADD DUP8 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB90 DUP5 DUP7 ADD DUP7 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD EQ DUP1 ISZERO PUSH2 0xBAD JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xBBA JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xC02 JUMPI POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBEA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xC74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x31B7B73A3930B1BA1034BA39B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC82 DUP3 DUP5 ADD DUP5 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x4 DUP3 PUSH1 0x0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x4 SLOAD PUSH2 0xCC3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST DUP2 MLOAD SUB PUSH2 0xD28 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x5 SSTORE PUSH32 0x3523C39EB1A9C40E6A7C7504001CA3D223A7675DC8634B5AA1B056124B87CD36 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD78 JUMPI PUSH2 0xD78 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xDCD SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDD PUSH2 0x16DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE17 JUMPI PUSH2 0xE17 PUSH2 0x16DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xE40 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0xE91 SWAP2 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x8 SLOAD PUSH2 0xE99 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE DUP5 GT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x78F8AF25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF1F15E4A SWAP1 DUP8 SWAP1 PUSH2 0xF15 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF58 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH32 0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C DUP2 PUSH1 0x40 MLOAD PUSH2 0xF8B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x100A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1031 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x10A1 JUMPI PUSH2 0x10A1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10C3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1128 PUSH2 0x1123 DUP3 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x1078 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EC DUP7 DUP3 DUP8 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122F DUP6 DUP3 DUP7 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1275 DUP9 DUP4 DUP10 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129B DUP8 DUP3 DUP9 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1031 DUP3 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1336 PUSH2 0x1123 DUP3 PUSH2 0x10A9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EC DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xFCE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x139D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x120 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BA PUSH2 0x104E JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DC DUP8 DUP3 DUP7 ADD PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1402 PUSH1 0x80 DUP5 ADD PUSH2 0x135C JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1413 PUSH1 0xA0 DUP5 ADD PUSH2 0x135C JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1440 DUP8 DUP3 DUP7 ADD PUSH2 0x1317 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 SWAP2 POP PUSH2 0x1456 DUP3 DUP5 ADD PUSH2 0x12EC JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9A3 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5EC PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14CE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x150C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1547 JUMPI PUSH2 0x1547 PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x15C9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AF PUSH2 0x1578 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x15BC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1593 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15E0 JUMPI POP PUSH1 0x1 PUSH2 0xB6B JUMP JUMPDEST DUP2 PUSH2 0x15ED JUMPI POP PUSH1 0x0 PUSH2 0xB6B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1603 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x160D JUMPI PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB6B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x161E JUMPI PUSH2 0x161E PUSH2 0x1578 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x164C JUMPI POP DUP2 DUP2 EXP PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x1656 DUP4 DUP4 PUSH2 0x158E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x166A JUMPI PUSH2 0x166A PUSH2 0x1578 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1031 DUP4 DUP4 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH2 0x1578 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1729 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID PUSH28 0x75696E7420667261676D656E74496E6465783B2075696E742074696D PUSH6 0x7374616D7052 PUSH6 0x737472696374 PUSH10 0x6F6E3B2075696E742070 PUSH2 0x7373 PUSH4 0x6F64653B PUSH30 0x7B75696E7420667261676D656E74496E6465783B20627974657333322067 PUSH13 0x6F62616C486173683B20627974 PUSH6 0x733332206C6F PUSH4 0x616C4861 PUSH20 0x683B2075696E74206D696E54696D657374616D70 EXTCODESIZE PUSH30 0xA2646970667358221220399722E358A3B7631CE9DB42BF224E38C0852DC5 0xB3 CALL PUSH2 0x714C 0xB2 NOT 0xB8 0x5C 0xE7 PUSH31 0x2F64736F6C6343000817003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7353D891"
    },
    "25": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA0A7CCFF"
    },
    "36": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA0A7CCFF"
    },
    "47": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x327"
    },
    "51": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xACE8E462"
    },
    "58": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "62": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC2C56245"
    },
    "69": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35D"
    },
    "73": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC91C7B37"
    },
    "80": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37D"
    },
    "84": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCB392747"
    },
    "91": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39D"
    },
    "95": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "97": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD997EBF5"
    },
    "102": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "106": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "107": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "REVERT",
      "path": "5"
    },
    "111": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7353D891"
    },
    "118": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x285"
    },
    "122": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8244741C"
    },
    "129": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C0"
    },
    "133": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8D68CF59"
    },
    "140": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225"
    },
    "144": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D5"
    },
    "155": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8F32D59B"
    },
    "162": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x307"
    },
    "166": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "167": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "REVERT",
      "path": "5"
    },
    "171": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2D9E78B8"
    },
    "178": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "GT",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2D9E78B8"
    },
    "189": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EF"
    },
    "193": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3015394C"
    },
    "200": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x205"
    },
    "204": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x43BB58DE"
    },
    "211": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x227"
    },
    "215": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x49875DB2"
    },
    "222": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23A"
    },
    "226": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "228": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4F7EF866"
    },
    "233": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25A"
    },
    "237": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "238": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x552B0B83"
    },
    "244": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x270"
    },
    "248": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "249": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "REVERT",
      "path": "5"
    },
    "253": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x15594B8"
    },
    "260": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x145"
    },
    "264": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x155DD5EE"
    },
    "271": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x174"
    },
    "275": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "276": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "277": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x22473385"
    },
    "282": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "283": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x194"
    },
    "286": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "287": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "288": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2896DE13"
    },
    "293": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "294": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8"
    },
    "297": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "298": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "299": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2D16D25B"
    },
    "304": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "EQ",
      "path": "5"
    },
    "305": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DA"
    },
    "308": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "309": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "312": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "REVERT",
      "path": "5"
    },
    "313": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "314": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "315": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x140"
    },
    "318": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "319": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "STOP",
      "path": "5"
    },
    "320": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "321": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "DUP1",
      "path": "5"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        99,
        5082
      ],
      "op": "REVERT",
      "path": "5"
    },
    "325": {
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "326": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "327": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "5"
    },
    "328": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "329": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151"
    },
    "332": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "333": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "5"
    },
    "336": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "REVERT",
      "path": "5"
    },
    "337": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "341": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "342": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F"
    },
    "345": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "346": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "348": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "AND",
      "path": "5"
    },
    "349": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP2",
      "path": "5"
    },
    "350": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMP",
      "path": "5"
    },
    "351": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "352": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "354": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "ISZERO"
    },
    "357": {
      "op": "ISZERO"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "offset": [
        782,
        815
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "364": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "366": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "367": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "DUP1",
      "path": "5"
    },
    "368": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "369": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SUB",
      "path": "5"
    },
    "370": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "371": {
      "fn": null,
      "offset": [
        782,
        815
      ],
      "op": "RETURN",
      "path": "5"
    },
    "372": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "373": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "374": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "375": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "376": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180"
    },
    "379": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "380": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "382": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "383": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "REVERT",
      "path": "2"
    },
    "384": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "389": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F"
    },
    "392": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "393": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "395": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB5"
    },
    "398": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "399": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "400": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3"
    },
    "403": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "i",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "404": {
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "405": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "406": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP1",
      "path": "5"
    },
    "407": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "408": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A0"
    },
    "411": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "412": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "414": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP1",
      "path": "5"
    },
    "415": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "REVERT",
      "path": "5"
    },
    "416": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "417": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "POP",
      "path": "5"
    },
    "418": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "421": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "423": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "424": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "DUP2",
      "path": "5"
    },
    "425": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMP",
      "path": "5"
    },
    "426": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "427": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "429": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        706,
        735
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "430": {
      "op": "SWAP1"
    },
    "431": {
      "op": "DUP2"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "offset": [
        706,
        735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16B"
    },
    "439": {
      "op": "JUMP"
    },
    "440": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "441": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "442": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "DUP1",
      "path": "5"
    },
    "443": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "444": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C4"
    },
    "447": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "448": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "450": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "DUP1",
      "path": "5"
    },
    "451": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "REVERT",
      "path": "5"
    },
    "452": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "453": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "POP",
      "path": "5"
    },
    "454": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD"
    },
    "457": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A2"
    },
    "460": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "i",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "5"
    },
    "461": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "462": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "464": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "465": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16B"
    },
    "468": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "469": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "470": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x101E"
    },
    "473": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "i",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "5"
    },
    "474": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "475": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "476": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "DUP1",
      "path": "5"
    },
    "477": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "478": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E6"
    },
    "481": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "482": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "484": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "DUP1",
      "path": "5"
    },
    "485": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "REVERT",
      "path": "5"
    },
    "486": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "487": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "POP",
      "path": "5"
    },
    "488": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F"
    },
    "491": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C2"
    },
    "494": {
      "fn": "TS3000.togglePostProcessing",
      "jump": "i",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMP",
      "path": "5"
    },
    "495": {
      "offset": [
        605,
        628
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "496": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "497": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP1",
      "path": "5"
    },
    "498": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "499": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FB"
    },
    "502": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "503": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "505": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP1",
      "path": "5"
    },
    "506": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "REVERT",
      "path": "5"
    },
    "507": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "508": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "POP",
      "path": "5"
    },
    "509": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "512": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "514": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "515": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "DUP2",
      "path": "5"
    },
    "516": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        605,
        628
      ],
      "op": "JUMP",
      "path": "5"
    },
    "517": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "518": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "519": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "520": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "521": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x211"
    },
    "524": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "525": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "527": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "528": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "REVERT",
      "path": "2"
    },
    "529": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225"
    },
    "534": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220"
    },
    "537": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "538": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "540": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB5"
    },
    "543": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "544": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "545": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x519"
    },
    "548": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "549": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "550": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "STOP",
      "path": "2"
    },
    "551": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "552": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "555": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235"
    },
    "558": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "559": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "561": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D1"
    },
    "564": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "565": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "566": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B6"
    },
    "569": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "570": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "571": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "572": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "573": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "574": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x246"
    },
    "577": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "578": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "580": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "581": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "REVERT",
      "path": "2"
    },
    "582": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "587": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255"
    },
    "590": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "591": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "593": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11AD"
    },
    "596": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "597": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "598": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F4"
    },
    "601": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "602": {
      "offset": [
        635,
        665
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "603": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "604": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP1",
      "path": "5"
    },
    "605": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "606": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x266"
    },
    "609": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "610": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "612": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP1",
      "path": "5"
    },
    "613": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "REVERT",
      "path": "5"
    },
    "614": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "615": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "POP",
      "path": "5"
    },
    "616": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "619": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "621": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "622": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "DUP2",
      "path": "5"
    },
    "623": {
      "fn": "BaseClient.submitResult",
      "offset": [
        635,
        665
      ],
      "op": "JUMP",
      "path": "5"
    },
    "624": {
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "625": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "626": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "627": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "628": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27C"
    },
    "631": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "632": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "634": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "635": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "REVERT",
      "path": "5"
    },
    "636": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "637": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "638": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD"
    },
    "641": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "644": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "645": {
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "646": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "647": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "5"
    },
    "648": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "649": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291"
    },
    "652": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "653": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "655": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "5"
    },
    "656": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "REVERT",
      "path": "5"
    },
    "657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A5"
    },
    "662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A0"
    },
    "665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "666": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "668": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB5"
    },
    "671": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "672": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "673": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3A"
    },
    "676": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "677": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "678": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "680": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "5"
    },
    "681": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "682": {
      "op": "SWAP4"
    },
    "683": {
      "op": "DUP5"
    },
    "684": {
      "op": "MSTORE"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "687": {
      "op": "DUP5"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "SWAP3"
    },
    "690": {
      "op": "SWAP1"
    },
    "691": {
      "op": "SWAP3"
    },
    "692": {
      "op": "MSTORE"
    },
    "693": {
      "op": "SWAP1"
    },
    "694": {
      "op": "DUP3"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "op": "MSTORE"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16B"
    },
    "703": {
      "op": "JUMP"
    },
    "704": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "705": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "706": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "DUP1",
      "path": "5"
    },
    "707": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "708": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CC"
    },
    "711": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "712": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "714": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "DUP1",
      "path": "5"
    },
    "715": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "REVERT",
      "path": "5"
    },
    "716": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "717": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "POP",
      "path": "5"
    },
    "718": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD"
    },
    "721": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA6D"
    },
    "724": {
      "fn": "TS3000.getResultDataStructure",
      "jump": "i",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMP",
      "path": "5"
    },
    "725": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "726": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "727": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "DUP1",
      "path": "4"
    },
    "728": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "729": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E1"
    },
    "732": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "733": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "735": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "DUP1",
      "path": "4"
    },
    "736": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "REVERT",
      "path": "4"
    },
    "737": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "Ownable.owner",
      "offset": [
        307,
        314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "741": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 0
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "AND",
      "path": "4"
    },
    "751": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "752": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "754": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "SWAP1"
    },
    "764": {
      "op": "SWAP2"
    },
    "765": {
      "op": "AND"
    },
    "766": {
      "op": "DUP2"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16B"
    },
    "774": {
      "op": "JUMP"
    },
    "775": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "776": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "777": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "DUP1",
      "path": "4"
    },
    "778": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "779": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x313"
    },
    "782": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "783": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "785": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "DUP1",
      "path": "4"
    },
    "786": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "REVERT",
      "path": "4"
    },
    "787": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "791": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 1
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "op": "SUB"
    },
    "800": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "801": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "802": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "803": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F"
    },
    "806": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMP",
      "path": "4"
    },
    "807": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "809": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "810": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "811": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x333"
    },
    "814": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "815": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "817": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "818": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "REVERT",
      "path": "5"
    },
    "819": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD"
    },
    "824": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342"
    },
    "827": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "828": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "830": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F9"
    },
    "833": {
      "fn": "TS3000.resolveOnChain",
      "jump": "i",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "834": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "835": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8D"
    },
    "838": {
      "fn": "TS3000.resolveOnChain",
      "jump": "i",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "839": {
      "offset": [
        741,
        776
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "840": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "841": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP1",
      "path": "5"
    },
    "842": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "843": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x353"
    },
    "846": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "847": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "849": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP1",
      "path": "5"
    },
    "850": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "REVERT",
      "path": "5"
    },
    "851": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "852": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "POP",
      "path": "5"
    },
    "853": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "856": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "858": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "859": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "DUP2",
      "path": "5"
    },
    "860": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        741,
        776
      ],
      "op": "JUMP",
      "path": "5"
    },
    "861": {
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "862": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "863": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "864": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "865": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x369"
    },
    "868": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "869": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "871": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "872": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "REVERT",
      "path": "2"
    },
    "873": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "offset": [
        175,
        212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "877": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "878": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF"
    },
    "881": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "offset": [
        175,
        212
      ],
      "op": "AND",
      "path": "2"
    },
    "891": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "892": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        175,
        212
      ],
      "op": "JUMP",
      "path": "2"
    },
    "893": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "894": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "895": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "DUP1",
      "path": "5"
    },
    "896": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "897": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x389"
    },
    "900": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "901": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "903": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "DUP1",
      "path": "5"
    },
    "904": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "REVERT",
      "path": "5"
    },
    "905": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F"
    },
    "910": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x398"
    },
    "913": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "914": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "916": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x123B"
    },
    "919": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "5"
    },
    "920": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "921": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB71"
    },
    "924": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "5"
    },
    "925": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "926": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "927": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "DUP1",
      "path": "5"
    },
    "928": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "929": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A9"
    },
    "932": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "933": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "935": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "DUP1",
      "path": "5"
    },
    "936": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "REVERT",
      "path": "5"
    },
    "937": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225"
    },
    "942": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B8"
    },
    "945": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "946": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "948": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F9"
    },
    "951": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "952": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "953": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0D"
    },
    "956": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "957": {
      "offset": [
        671,
        700
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "958": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "959": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP1",
      "path": "5"
    },
    "960": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "961": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C9"
    },
    "964": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "965": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "967": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP1",
      "path": "5"
    },
    "968": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "REVERT",
      "path": "5"
    },
    "969": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "970": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "POP",
      "path": "5"
    },
    "971": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "974": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "976": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "977": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "DUP2",
      "path": "5"
    },
    "978": {
      "fn": "TS3000.processResult",
      "offset": [
        671,
        700
      ],
      "op": "JUMP",
      "path": "5"
    },
    "979": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "980": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2005,
        2009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "982": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "4"
    },
    "983": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "993": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "994": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "995": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x407"
    },
    "998": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "999": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1001": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1010": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1011": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1013": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "4"
    },
    "1014": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "1017": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1018": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A7"
    },
    "1021": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1022": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1023": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1025": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1026": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1027": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1028": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SUB",
      "path": "4"
    },
    "1029": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1030": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1031": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1032": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 2
    },
    "1033": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2029,
        2050
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "1034": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2029,
        2059
      ],
      "op": "LT",
      "path": "2"
    },
    "1035": {
      "branch": 35,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2029,
        2059
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1036": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44C"
    },
    "1039": {
      "branch": 35,
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1040": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1042": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1051": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1054": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1056": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1057": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "ADD",
      "path": "2"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1090": {
      "op": "DUP3"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "op": "MSTORE"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1099": {
      "op": "JUMP"
    },
    "1100": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2021,
        2082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1101": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1103": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1104": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2124,
        2134
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1105": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2124,
        2134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1106": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2092,
        2113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1108": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2092,
        2113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1109": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2124,
        2134
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1110": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2124,
        2134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1111": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2182,
        2187
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1112": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2182,
        2187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1113": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2092,
        2113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1114": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1115": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2092,
        2113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1116": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1117": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2182,
        2187
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1118": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2124,
        2134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1119": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "GAS",
      "path": "2"
    },
    "1120": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "CALL",
      "path": "2"
    },
    "1121": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1122": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "POP",
      "path": "2"
    },
    "1123": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "POP",
      "path": "2"
    },
    "1124": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "POP",
      "path": "2"
    },
    "1125": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1126": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1127": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1129": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1130": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "EQ",
      "path": "2"
    },
    "1131": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x490"
    },
    "1134": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1135": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1137": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1138": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1139": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "POP",
      "path": "2"
    },
    "1140": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1142": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "NOT",
      "path": "2"
    },
    "1143": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "1145": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1146": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1147": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "AND",
      "path": "2"
    },
    "1148": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1149": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1150": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1152": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1153": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1154": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1155": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1156": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1157": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1159": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1161": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1162": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1163": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1164": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x495"
    },
    "1167": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1168": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1169": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1171": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1172": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "POP",
      "path": "2"
    },
    "1173": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2164,
        2192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2145,
        2192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1176": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        2145,
        2192
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "offset": [
        190,
        191
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1182": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1183": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1184": {
      "fn": "BaseClient.withdrawFunds",
      "offset": [
        1944,
        2223
      ],
      "op": "POP",
      "path": "2"
    },
    "1185": {
      "fn": "BaseClient.withdrawFunds",
      "jump": "o",
      "offset": [
        1944,
        2223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1186": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1187": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4176,
        4189
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1189": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "1191": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1192": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1193": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1195": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "1196": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1198": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1199": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1200": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4F"
    },
    "1202": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1203": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1204": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1206": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "ADD",
      "path": "5"
    },
    "1207": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1791"
    },
    "1210": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4F"
    },
    "1212": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1213": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1214": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1215": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4201,
        4289
      ],
      "op": "POP",
      "path": "5"
    },
    "1216": {
      "fn": "TS3000.getInputDataStructure",
      "offset": [
        4111,
        4296
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1217": {
      "fn": "TS3000.getInputDataStructure",
      "jump": "o",
      "offset": [
        4111,
        4296
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1218": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1219": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3984,
        3988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1221": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1222": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "1232": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1233": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "1234": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4ED"
    },
    "1237": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1238": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1240": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1249": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1250": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1252": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "4"
    },
    "1253": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "1256": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1257": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A7"
    },
    "1260": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1261": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1262": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0xA"
    },
    "1264": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1265": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1267": {
      "branch": 31,
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4045
      ],
      "op": "AND",
      "path": "5"
    },
    "1268": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FE"
    },
    "1271": {
      "branch": 31,
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1272": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4056,
        4060
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1274": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x501"
    },
    "1277": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1278": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1279": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4048,
        4053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1281": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4024,
        4060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1282": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4021
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "1284": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1285": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1288": {
      "op": "NOT"
    },
    "1289": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "AND",
      "path": "5"
    },
    "1290": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1291": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1292": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1293": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1294": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1295": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "OR",
      "path": "5"
    },
    "1296": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1297": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1298": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4000,
        4060
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1300": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4077,
        4098
      ],
      "op": "AND",
      "path": "5",
      "statement": 5
    },
    "1301": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        4077,
        4098
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1302": {
      "fn": "TS3000.togglePostProcessing",
      "offset": [
        3924,
        4105
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "fn": "TS3000.togglePostProcessing",
      "jump": "o",
      "offset": [
        3924,
        4105
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1305": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1306": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1308": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "1318": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1319": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "1320": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x543"
    },
    "1323": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1324": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1326": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1335": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1336": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1338": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "4"
    },
    "1339": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "1342": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1343": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A7"
    },
    "1346": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1347": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1348": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "1350": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1351": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1353": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1354": {
      "op": "PUSH4",
      "value": "0xC054E53"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1363": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1364": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1366": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1367": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ADD",
      "path": "2"
    },
    "1368": {
      "op": "DUP4"
    },
    "1369": {
      "op": "SWAP1"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1380": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1381": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "AND",
      "path": "2"
    },
    "1382": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1383": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1872
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3015394C"
    },
    "1388": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1872
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1394": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1396": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1397": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1398": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1399": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "SUB",
      "path": "2"
    },
    "1400": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1401": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1403": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1404": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "GAS",
      "path": "2"
    },
    "1405": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "CALL",
      "path": "2"
    },
    "1406": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1407": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1408": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1409": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58E"
    },
    "1412": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1413": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1414": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1416": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1417": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1418": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1419": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1421": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1422": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1423": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1424": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1425": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1426": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1427": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1429": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1430": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1431": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1433": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "NOT",
      "path": "2"
    },
    "1434": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1436": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1437": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ADD",
      "path": "2"
    },
    "1438": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "AND",
      "path": "2"
    },
    "1439": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1440": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ADD",
      "path": "2"
    },
    "1441": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1442": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1444": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1445": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1446": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1447": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "ADD",
      "path": "2"
    },
    "1448": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1449": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1453": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1454": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12FC"
    },
    "1457": {
      "fn": "BaseClient.cancelRequest",
      "jump": "i",
      "offset": [
        1844,
        1883
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1458": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1844,
        1883
      ],
      "op": "POP",
      "path": "2"
    },
    "1460": {
      "fn": "BaseClient.cancelRequest",
      "offset": [
        1776,
        1890
      ],
      "op": "POP",
      "path": "2"
    },
    "1461": {
      "fn": "BaseClient.cancelRequest",
      "jump": "o",
      "offset": [
        1776,
        1890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1462": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1463": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1286,
        1290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1465": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1466": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "1476": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1477": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "1478": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E1"
    },
    "1481": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1482": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1484": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1493": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1494": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1496": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "4"
    },
    "1497": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FE"
    },
    "1500": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1501": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A7"
    },
    "1504": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        124,
        183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1505": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1506": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1309,
        1358
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x5EC"
    },
    "1509": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1324,
        1331
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1510": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1333,
        1338
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1511": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1340,
        1357
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1512": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1309,
        1323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE99"
    },
    "1515": {
      "fn": "BaseClient.submitRequest",
      "jump": "i",
      "offset": [
        1309,
        1358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1516": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1309,
        1358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1517": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1302,
        1358
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1518": {
      "fn": "BaseClient.submitRequest",
      "offset": [
        1171,
        1365
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "fn": "BaseClient.submitRequest",
      "jump": "o",
      "offset": [
        1171,
        1365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1524": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1525": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2308,
        2312
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1527": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 8
    },
    "1528": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1529": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1530": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1532": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1534": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1535": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1537": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1538": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1539": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1540": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1542": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "AND",
      "path": "2"
    },
    "1543": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2367
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1544": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2367
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1545": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1547": {
      "branch": 36,
      "fn": "BaseClient.submitResult",
      "offset": [
        2332,
        2367
      ],
      "op": "EQ",
      "path": "2"
    },
    "1548": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67D"
    },
    "1551": {
      "branch": 36,
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1552": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1554": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1563": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1566": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1568": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1569": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "ADD",
      "path": "2"
    },
    "1570": {
      "op": "MSTORE"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1575": {
      "op": "DUP3"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "MSTORE"
    },
    "1578": {
      "op": "PUSH32",
      "value": "0x5468697320494420646F6573206E6F742062656C6F6E6720746F20616E206163"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1613": {
      "op": "DUP3"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "MSTORE"
    },
    "1616": {
      "op": "PUSH32",
      "value": "0x7469766520726571756573742077697468696E207468697320636C69656E7400"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1660": {
      "op": "JUMP"
    },
    "1661": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2324,
        2435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1664": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2484
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1667": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1668": {
      "op": "PUSH4",
      "value": "0xC58343EF"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1677": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1678": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1680": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1681": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ADD",
      "path": "2"
    },
    "1682": {
      "op": "DUP7"
    },
    "1683": {
      "op": "SWAP1"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2445,
        2467
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1687": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2445,
        2467
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2484
      ],
      "op": "AND",
      "path": "2"
    },
    "1697": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1698": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2495
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC58343EF"
    },
    "1703": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1706": {
      "op": "ADD"
    },
    "1707": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1709": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1711": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1712": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1713": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1714": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "SUB",
      "path": "2"
    },
    "1715": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1716": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1717": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "GAS",
      "path": "2"
    },
    "1718": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1719": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1720": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1721": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1722": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C7"
    },
    "1725": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1726": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1727": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1729": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1730": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1731": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1732": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1734": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1735": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1736": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "POP",
      "path": "2"
    },
    "1737": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "POP",
      "path": "2"
    },
    "1738": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "POP",
      "path": "2"
    },
    "1739": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "POP",
      "path": "2"
    },
    "1740": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1742": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1743": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1744": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1746": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1747": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1748": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1750": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1751": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1752": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1753": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ADD",
      "path": "2"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1756": {
      "op": "NOT"
    },
    "1757": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "AND",
      "path": "2"
    },
    "1758": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1759": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ADD",
      "path": "2"
    },
    "1760": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1762": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1763": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6EF"
    },
    "1766": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1767": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1768": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1769": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "ADD",
      "path": "2"
    },
    "1770": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1771": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1373"
    },
    "1774": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2470,
        2506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1775": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2470,
        2506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1776": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2524,
        2540
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0xA0"
    },
    "1778": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2524,
        2540
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1779": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2524,
        2540
      ],
      "op": "ADD",
      "path": "2"
    },
    "1780": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2524,
        2540
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1781": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2445,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1782": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2445,
        2506
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "op": "SUB"
    },
    "1792": {
      "branch": 37,
      "fn": "BaseClient.submitResult",
      "offset": [
        2524,
        2556
      ],
      "op": "AND",
      "path": "2"
    },
    "1793": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x758"
    },
    "1796": {
      "branch": 37,
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1797": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1799": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1806": {
      "op": "SHL"
    },
    "1807": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1808": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1813": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1814": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "ADD",
      "path": "2"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "op": "DUP3"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "MSTORE"
    },
    "1822": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F206163636570742074686520726571756573742066"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1857": {
      "op": "DUP3"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "MSTORE"
    },
    "1860": {
      "op": "PUSH4",
      "value": "0x1A5C9CDD"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1870": {
      "op": "DUP3"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1879": {
      "op": "JUMP"
    },
    "1880": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2516,
        2597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1881": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2615,
        2629
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x100"
    },
    "1884": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2615,
        2629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1885": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2615,
        2629
      ],
      "op": "ADD",
      "path": "2"
    },
    "1886": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2615,
        2629
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1887": {
      "branch": 38,
      "fn": "BaseClient.submitResult",
      "offset": [
        2615,
        2638
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1888": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AB"
    },
    "1891": {
      "branch": 38,
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1892": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1894": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1903": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1908": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1909": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "ADD",
      "path": "2"
    },
    "1910": {
      "op": "MSTORE"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1915": {
      "op": "DUP3"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "op": "MSTORE"
    },
    "1918": {
      "op": "PUSH32",
      "value": "0x546865207265717565737420697320616C726561647920636C6F736564000000"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1953": {
      "op": "DUP3"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "1962": {
      "op": "JUMP"
    },
    "1963": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2607,
        2672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1964": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2706
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0xA0"
    },
    "1966": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1967": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2706
      ],
      "op": "ADD",
      "path": "2"
    },
    "1968": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2706
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "op": "SUB"
    },
    "1977": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2720
      ],
      "op": "AND",
      "path": "2"
    },
    "1978": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2710,
        2720
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1979": {
      "branch": 39,
      "fn": "BaseClient.submitResult",
      "offset": [
        2690,
        2720
      ],
      "op": "EQ",
      "path": "2"
    },
    "1980": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x815"
    },
    "1983": {
      "branch": 39,
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1984": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1986": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1995": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2000": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2001": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "ADD",
      "path": "2"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "MSTORE"
    },
    "2010": {
      "op": "PUSH32",
      "value": "0x536F6D656F6E6520656C73652068617320616363657074656420746865205265"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2045": {
      "op": "DUP3"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "op": "PUSH5",
      "value": "0x1C5D595CDD"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "2068": {
      "op": "JUMP"
    },
    "2069": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2682,
        2762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2070": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2072": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2073": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2075": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2076": {
      "op": "PUSH4",
      "value": "0x24C3AED9"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2085": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2086": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2781,
        2793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2088": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2781,
        2793
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2810
      ],
      "op": "AND",
      "path": "2"
    },
    "2098": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2099": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2823
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x49875DB2"
    },
    "2104": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2105": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84A"
    },
    "2108": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2109": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2824,
        2833
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2110": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2824,
        2833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2111": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2835,
        2841
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2112": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2835,
        2841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2113": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2835,
        2841
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2114": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2835,
        2841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2115": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2117": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ADD",
      "path": "2"
    },
    "2118": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148E"
    },
    "2121": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2122": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2123": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2125": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2127": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2128": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2129": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2130": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "SUB",
      "path": "2"
    },
    "2131": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2132": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2134": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2135": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "GAS",
      "path": "2"
    },
    "2136": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "CALL",
      "path": "2"
    },
    "2137": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2138": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2139": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2140": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x869"
    },
    "2143": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2144": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2145": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2147": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2148": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2149": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2150": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2152": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2153": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2154": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2155": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2156": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2157": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2158": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2160": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2161": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2162": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2164": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "NOT",
      "path": "2"
    },
    "2165": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2167": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2168": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ADD",
      "path": "2"
    },
    "2169": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "AND",
      "path": "2"
    },
    "2170": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2171": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ADD",
      "path": "2"
    },
    "2172": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2173": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2175": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2176": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2177": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2178": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "ADD",
      "path": "2"
    },
    "2179": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2180": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88D"
    },
    "2183": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2184": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2185": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12FC"
    },
    "2188": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2189": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2796,
        2842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2190": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2781,
        2842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2191": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2781,
        2842
      ],
      "op": "POP",
      "path": "2"
    },
    "2192": {
      "branch": 40,
      "fn": "BaseClient.submitResult",
      "offset": [
        2856,
        2863
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2193": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2852,
        3303
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2194": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2852,
        3303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A3"
    },
    "2197": {
      "branch": 40,
      "fn": "BaseClient.submitResult",
      "offset": [
        2852,
        3303
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2198": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2909,
        2914
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x0"
    },
    "2200": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2201": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2202": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2203": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2205": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2207": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2208": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2210": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2211": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2212": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2906
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2213": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2214": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2914
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2217": {
      "op": "NOT"
    },
    "2218": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2914
      ],
      "op": "AND",
      "path": "2"
    },
    "2219": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2220": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2879,
        2914
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2221": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2222": {
      "op": "PUSH4",
      "value": "0xCB392747"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2971,
        3008
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2231": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C6"
    },
    "2234": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2235": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3010,
        3016
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2236": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3010,
        3016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2237": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3010,
        3016
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2238": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3010,
        3016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2239": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2241": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "ADD",
      "path": "2"
    },
    "2242": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A8"
    },
    "2245": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        2948,
        3017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2246": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2247": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2249": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2250": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2252": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2253": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2254": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "SUB",
      "path": "2"
    },
    "2255": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "SUB",
      "path": "2"
    },
    "2256": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2257": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2258": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2259": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2261": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2262": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "NOT",
      "path": "2"
    },
    "2272": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "AND",
      "path": "2"
    },
    "2273": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2275": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2276": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "ADD",
      "path": "2"
    },
    "2277": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2278": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2288": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2289": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2290": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "AND",
      "path": "2"
    },
    "2291": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "OR",
      "path": "2"
    },
    "2292": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2293": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2294": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "POP",
      "path": "2"
    },
    "2295": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "POP",
      "path": "2"
    },
    "2296": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "POP",
      "path": "2"
    },
    "2297": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2948,
        3017
      ],
      "op": "POP",
      "path": "2"
    },
    "2298": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2928,
        3017
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2299": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2928,
        3017
      ],
      "op": "POP",
      "path": "2"
    },
    "2300": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3032,
        3048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2302": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3062,
        3069
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2303": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3062,
        3076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2305": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3062,
        3076
      ],
      "op": "ADD",
      "path": "2"
    },
    "2306": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3062,
        3076
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3082
      ],
      "op": "AND",
      "path": "2"
    },
    "2316": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3088,
        3095
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2317": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3088,
        3113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2319": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3088,
        3113
      ],
      "op": "ADD",
      "path": "2"
    },
    "2320": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3088,
        3113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2321": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3115,
        3119
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2322": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2324": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2325": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91E"
    },
    "2328": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2329": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2330": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14BC"
    },
    "2333": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2334": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2335": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2337": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2339": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2340": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2341": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2342": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SUB",
      "path": "2"
    },
    "2343": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2344": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2346": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2347": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2348": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "CALL",
      "path": "2"
    },
    "2349": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2350": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "POP",
      "path": "2"
    },
    "2351": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "POP",
      "path": "2"
    },
    "2352": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "POP",
      "path": "2"
    },
    "2353": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2354": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2355": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2357": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2358": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "EQ",
      "path": "2"
    },
    "2359": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95C"
    },
    "2362": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2363": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2365": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2366": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2367": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "POP",
      "path": "2"
    },
    "2368": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2370": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "NOT",
      "path": "2"
    },
    "2371": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "2373": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2374": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "ADD",
      "path": "2"
    },
    "2375": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "AND",
      "path": "2"
    },
    "2376": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2377": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "ADD",
      "path": "2"
    },
    "2378": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2380": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2381": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2382": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2383": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2384": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2385": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2387": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2389": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2390": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "ADD",
      "path": "2"
    },
    "2391": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2392": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x961"
    },
    "2395": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2396": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2397": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2399": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2400": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "POP",
      "path": "2"
    },
    "2401": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3054,
        3120
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x40"
    },
    "2406": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2407": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2408": {
      "op": "DUP11"
    },
    "2409": {
      "op": "DUP2"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "DUP3"
    },
    "2412": {
      "op": "ISZERO"
    },
    "2413": {
      "op": "ISZERO"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2416": {
      "op": "DUP3"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3031,
        3120
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2420": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3031,
        3120
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xA531C8F4BBF2A18049D85528BB5AAAE66874AF94BCB325738EE729A2B6CF8428"
    },
    "2455": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2459": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2460": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2461": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2462": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "SUB",
      "path": "2"
    },
    "2463": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2464": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3249,
        3292
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2465": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2865,
        3303
      ],
      "op": "POP",
      "path": "2"
    },
    "2466": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2865,
        3303
      ],
      "op": "POP",
      "path": "2"
    },
    "2467": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2852,
        3303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2468": {
      "fn": "BaseClient.submitResult",
      "offset": [
        3319,
        3326
      ],
      "op": "SWAP6",
      "path": "2",
      "statement": 14
    },
    "2469": {
      "fn": "BaseClient.submitResult",
      "offset": [
        2229,
        3333
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        2229,
        3333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2476": {
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2477": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2479": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2480": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2481": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B9"
    },
    "2484": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2485": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D8"
    },
    "2488": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2489": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2490": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2491": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2493": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2494": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2496": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2497": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2498": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DIV",
      "path": "5"
    },
    "2499": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MUL",
      "path": "5"
    },
    "2500": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2502": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2503": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2505": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2506": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2507": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2508": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2509": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2511": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2512": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2513": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2514": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2515": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2516": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2517": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2518": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2519": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2521": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2522": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2523": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2524": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2525": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E5"
    },
    "2528": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2529": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D8"
    },
    "2532": {
      "fn": "BaseClient.submitResult",
      "jump": "i",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2533": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2534": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2535": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2536": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA32"
    },
    "2539": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2540": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2541": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2543": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "LT",
      "path": "5"
    },
    "2544": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA07"
    },
    "2547": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2548": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2551": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2552": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2553": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2554": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DIV",
      "path": "5"
    },
    "2555": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MUL",
      "path": "5"
    },
    "2556": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2557": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2558": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2559": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2561": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2562": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2563": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA32"
    },
    "2566": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2567": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2568": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2569": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2570": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2571": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2572": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2574": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2575": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2577": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2579": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2580": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2581": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2582": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2583": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2584": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2585": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2586": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2587": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2589": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2590": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2591": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2593": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2594": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2595": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2596": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "GT",
      "path": "5"
    },
    "2597": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA15"
    },
    "2600": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2601": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2602": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2603": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SUB",
      "path": "5"
    },
    "2604": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2606": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "AND",
      "path": "5"
    },
    "2607": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2608": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "ADD",
      "path": "5"
    },
    "2609": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2610": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2611": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "2612": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "2613": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "2614": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "2615": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "POP",
      "path": "5"
    },
    "2616": {
      "fn": "BaseClient.submitResult",
      "offset": [
        523,
        560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2617": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        523,
        560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2618": {
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2619": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2621": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2622": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2623": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2624": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2625": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "LT",
      "path": "5"
    },
    "2626": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA4A"
    },
    "2629": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2630": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2632": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2633": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2634": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2635": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2637": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2638": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2639": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2640": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2642": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2643": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2644": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2645": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2647": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2648": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2649": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "MUL",
      "path": "5"
    },
    "2650": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "5"
    },
    "2651": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2652": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2653": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2655": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2656": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "5"
    },
    "2657": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2658": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2660": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2661": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2662": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "ADD",
      "path": "5"
    },
    "2663": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2664": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2665": {
      "fn": "BaseClient.submitResult",
      "offset": [
        566,
        599
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "offset": [
        566,
        599
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2668": {
      "fn": "BaseClient.submitResult",
      "jump": "o",
      "offset": [
        566,
        599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2669": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2670": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4372,
        4385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2672": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x40"
    },
    "2674": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2675": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2676": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2678": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "ADD",
      "path": "5"
    },
    "2679": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2681": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2682": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2683": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2685": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2686": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2687": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2689": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "ADD",
      "path": "5"
    },
    "2690": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1752"
    },
    "2693": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2695": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2696": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2697": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2698": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4397,
        4469
      ],
      "op": "POP",
      "path": "5"
    },
    "2699": {
      "fn": "TS3000.getResultDataStructure",
      "offset": [
        4306,
        4476
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2700": {
      "fn": "TS3000.getResultDataStructure",
      "jump": "o",
      "offset": [
        4306,
        4476
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2701": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2702": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4562,
        4574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2704": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4587,
        4607
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB3"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2709": {
      "op": "MLOAD"
    },
    "2710": {
      "op": "DUP1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2713": {
      "op": "ADD"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "DUP1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2720": {
      "op": "DUP2"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2727": {
      "op": "DUP2"
    },
    "2728": {
      "op": "MSTORE"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2731": {
      "op": "ADD"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2734": {
      "op": "DUP2"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "op": "SWAP1"
    },
    "2738": {
      "op": "JUMP"
    },
    "2739": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4587,
        4607
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2740": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4617,
        4635
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2742": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC1"
    },
    "2745": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2746": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2747": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "ADD",
      "path": "5"
    },
    "2748": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4649,
        4658
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2749": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1512"
    },
    "2752": {
      "fn": "TS3000.resolveOnChain",
      "jump": "i",
      "offset": [
        4638,
        4668
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2753": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4638,
        4668
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2754": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4701,
        4720
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 16
    },
    "2755": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4701,
        4720
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2756": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4678,
        4720
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2757": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4678,
        4720
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2758": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4760,
        4778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0x60"
    },
    "2760": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4760,
        4778
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2761": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4760,
        4778
      ],
      "op": "ADD",
      "path": "5"
    },
    "2762": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4760,
        4778
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2763": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4730,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2765": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4730,
        4757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2766": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4730,
        4757
      ],
      "op": "ADD",
      "path": "5"
    },
    "2767": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4730,
        4778
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2768": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4617,
        4668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4701,
        4720
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2772": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2773": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4827,
        4845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2775": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4827,
        4845
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2776": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4823,
        4845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE2"
    },
    "2779": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4823,
        4845
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2780": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4823,
        4825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2782": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4823,
        4845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1672"
    },
    "2785": {
      "fn": "TS3000.resolveOnChain",
      "jump": "i",
      "offset": [
        4823,
        4845
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2786": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4823,
        4845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2787": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4812,
        4820
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2788": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4812,
        4845
      ],
      "op": "LT",
      "path": "5"
    },
    "2789": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2790": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB34"
    },
    "2793": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2794": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2796": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2797": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2798": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "ADD",
      "path": "5"
    },
    "2799": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2800": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4908,
        4923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2802": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4908,
        4923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2803": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4908,
        4923
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2804": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4908,
        4923
      ],
      "op": "ADD",
      "path": "5"
    },
    "2805": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4908,
        4923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2806": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2807": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2808": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2809": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2810": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "ADD",
      "path": "5"
    },
    "2811": {
      "op": "DUP6"
    },
    "2812": {
      "op": "SWAP1"
    },
    "2813": {
      "op": "MSTORE"
    },
    "2814": {
      "op": "SWAP1"
    },
    "2815": {
      "op": "DUP4"
    },
    "2816": {
      "op": "ADD"
    },
    "2817": {
      "op": "MSTORE"
    },
    "2818": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4929,
        4945
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2824": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2825": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2827": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2828": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2829": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "SUB",
      "path": "5"
    },
    "2830": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "SUB",
      "path": "5"
    },
    "2831": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2832": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2833": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2834": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2836": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4887,
        4924
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2837": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2838": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2839": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2840": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2842": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "ADD",
      "path": "5"
    },
    "2843": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4925
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2844": {
      "branch": 32,
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4877,
        4945
      ],
      "op": "SUB",
      "path": "5"
    },
    "2845": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4873,
        5029
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2C"
    },
    "2848": {
      "branch": 32,
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4873,
        5029
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2849": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4980
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x40"
    },
    "2851": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4980
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2852": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4980
      ],
      "op": "ADD",
      "path": "5"
    },
    "2853": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2854": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4991
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2855": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4965,
        4991
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2856": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5009,
        5014
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0xB34"
    },
    "2859": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5009,
        5014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2860": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4873,
        5029
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2861": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4847,
        4857
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 20,
      "value": "0x1"
    },
    "2863": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4847,
        4857
      ],
      "op": "ADD",
      "path": "5"
    },
    "2864": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD4"
    },
    "2867": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2868": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4788,
        5039
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x40"
    },
    "2872": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2873": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2874": {
      "op": "DUP4"
    },
    "2875": {
      "op": "MLOAD"
    },
    "2876": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2878": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2879": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2880": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "ADD",
      "path": "5"
    },
    "2881": {
      "op": "SWAP2"
    },
    "2882": {
      "op": "SWAP1"
    },
    "2883": {
      "op": "SWAP2"
    },
    "2884": {
      "op": "MSTORE"
    },
    "2885": {
      "op": "DUP5"
    },
    "2886": {
      "op": "ADD"
    },
    "2887": {
      "op": "MLOAD"
    },
    "2888": {
      "op": "DUP2"
    },
    "2889": {
      "op": "DUP4"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "SWAP1"
    },
    "2893": {
      "op": "DUP4"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "MLOAD"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2898": {
      "op": "DUP3"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2903": {
      "op": "ADD"
    },
    "2904": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2906": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2907": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2909": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2910": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2911": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "SUB",
      "path": "5"
    },
    "2912": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "SUB",
      "path": "5"
    },
    "2913": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2914": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2915": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2916": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2918": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5055,
        5073
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2919": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5048,
        5073
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2920": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5048,
        5073
      ],
      "op": "POP",
      "path": "5"
    },
    "2921": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5048,
        5073
      ],
      "op": "POP",
      "path": "5"
    },
    "2922": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        5048,
        5073
      ],
      "op": "POP",
      "path": "5"
    },
    "2923": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2924": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2925": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2926": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "POP",
      "path": "5"
    },
    "2927": {
      "fn": "TS3000.resolveOnChain",
      "offset": [
        4482,
        5080
      ],
      "op": "POP",
      "path": "5"
    },
    "2928": {
      "fn": "TS3000.resolveOnChain",
      "jump": "o",
      "offset": [
        4482,
        5080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2929": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2930": {
      "fn": "TS3000.checkResult",
      "offset": [
        2150,
        2154
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2932": {
      "fn": "TS3000.checkResult",
      "offset": [
        2150,
        2154
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2933": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB80"
    },
    "2936": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2937": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2938": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "ADD",
      "path": "5"
    },
    "2939": {
      "fn": "TS3000.checkResult",
      "offset": [
        2198,
        2207
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2940": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1512"
    },
    "2943": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2187,
        2217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2944": {
      "fn": "TS3000.checkResult",
      "offset": [
        2187,
        2217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2945": {
      "fn": "TS3000.checkResult",
      "offset": [
        2166,
        2217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2949": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB90"
    },
    "2952": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2953": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2954": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "ADD",
      "path": "5"
    },
    "2955": {
      "fn": "TS3000.checkResult",
      "offset": [
        2261,
        2271
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2956": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x167E"
    },
    "2959": {
      "fn": "TS3000.checkResult",
      "jump": "i",
      "offset": [
        2250,
        2282
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2960": {
      "fn": "TS3000.checkResult",
      "offset": [
        2250,
        2282
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2961": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2962": {
      "fn": "TS3000.checkResult",
      "offset": [
        2227,
        2282
      ],
      "op": "POP",
      "path": "5"
    },
    "2963": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2328
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 22
    },
    "2964": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2966": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "ADD",
      "path": "5"
    },
    "2967": {
      "fn": "TS3000.checkResult",
      "offset": [
        2322,
        2349
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2968": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2305
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2969": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2971": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "ADD",
      "path": "5"
    },
    "2972": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2318
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2973": {
      "fn": "TS3000.checkResult",
      "offset": [
        2300,
        2349
      ],
      "op": "EQ",
      "path": "5"
    },
    "2974": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2975": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2976": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBAD"
    },
    "2979": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2980": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "POP",
      "path": "5"
    },
    "2981": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2380
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2982": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2984": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "ADD",
      "path": "5"
    },
    "2985": {
      "fn": "TS3000.checkResult",
      "offset": [
        2374,
        2401
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2986": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2370
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2987": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2401
      ],
      "op": "LT",
      "path": "5"
    },
    "2988": {
      "fn": "TS3000.checkResult",
      "offset": [
        2355,
        2401
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2989": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2402
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2990": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2991": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2992": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBBA"
    },
    "2995": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "fn": "TS3000.checkResult",
      "offset": [
        2430,
        2450
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2998": {
      "fn": "TS3000.checkResult",
      "offset": [
        2430,
        2450
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2999": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3000": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2426
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3001": {
      "fn": "TS3000.checkResult",
      "offset": [
        2407,
        2450
      ],
      "op": "EQ",
      "path": "5"
    },
    "3002": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3003": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3004": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3005": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC02"
    },
    "3008": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3009": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "POP",
      "path": "5"
    },
    "3010": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2520
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3011": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3013": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "ADD",
      "path": "5"
    },
    "3014": {
      "fn": "TS3000.checkResult",
      "offset": [
        2515,
        2531
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3015": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3016": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3018": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "ADD",
      "path": "5"
    },
    "3019": {
      "fn": "TS3000.checkResult",
      "offset": [
        2477,
        2492
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3020": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2499
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3021": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3023": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "ADD",
      "path": "5"
    },
    "3024": {
      "fn": "TS3000.checkResult",
      "offset": [
        2494,
        2509
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3025": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3027": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3028": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3030": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "ADD",
      "path": "5"
    },
    "3031": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEA"
    },
    "3034": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3035": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3036": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3037": {
      "op": "SWAP2"
    },
    "3038": {
      "op": "DUP3"
    },
    "3039": {
      "op": "MSTORE"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3042": {
      "op": "DUP3"
    },
    "3043": {
      "op": "ADD"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "SWAP1"
    },
    "3049": {
      "op": "JUMP"
    },
    "3050": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3051": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3053": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3054": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3056": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3057": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3058": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SUB",
      "path": "5"
    },
    "3059": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SUB",
      "path": "5"
    },
    "3060": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3061": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3062": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3063": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3065": {
      "fn": "TS3000.checkResult",
      "offset": [
        2466,
        2510
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3066": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3067": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3068": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3069": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3071": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "ADD",
      "path": "5"
    },
    "3072": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2511
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3073": {
      "fn": "TS3000.checkResult",
      "offset": [
        2456,
        2531
      ],
      "op": "EQ",
      "path": "5"
    },
    "3074": {
      "fn": "TS3000.checkResult",
      "offset": [
        2299,
        2532
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3075": {
      "fn": "TS3000.checkResult",
      "offset": [
        2292,
        2532
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "3076": {
      "fn": "TS3000.checkResult",
      "offset": [
        2044,
        2539
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "3077": {
      "op": "POP"
    },
    "3078": {
      "op": "POP"
    },
    "3079": {
      "op": "POP"
    },
    "3080": {
      "op": "POP"
    },
    "3081": {
      "op": "POP"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "fn": "TS3000.checkResult",
      "jump": "o",
      "offset": [
        2044,
        2539
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3085": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3086": {
      "offset": [
        409,
        419
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3087": {
      "offset": [
        431,
        435
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3088": {
      "offset": [
        409,
        436
      ],
      "op": "EQ",
      "path": "2"
    },
    "3089": {
      "offset": [
        401,
        488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC74"
    },
    "3092": {
      "offset": [
        401,
        488
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3093": {
      "fn": "TS3000.processResult",
      "offset": [
        401,
        488
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3095": {
      "fn": "TS3000.processResult",
      "offset": [
        401,
        488
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "offset": [
        401,
        488
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3104": {
      "fn": "TS3000.processResult",
      "offset": [
        401,
        488
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "offset": [
        401,
        488
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3109": {
      "fn": "TS3000.processResult",
      "offset": [
        401,
        488
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3110": {
      "fn": "TS3000.processResult",
      "offset": [
        401,
        488
      ],
      "op": "ADD",
      "path": "2"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3116": {
      "op": "DUP3"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3154": {
      "op": "DUP3"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "MSTORE"
    },
    "3157": {
      "op": "PUSH15",
      "value": "0x31B7B73A3930B1BA1034BA39B2B633"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3178": {
      "op": "DUP3"
    },
    "3179": {
      "op": "ADD"
    },
    "3180": {
      "op": "MSTORE"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "offset": [
        401,
        488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "3187": {
      "op": "JUMP"
    },
    "3188": {
      "offset": [
        401,
        488
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3189": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        2993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3191": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC82"
    },
    "3194": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3195": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3196": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "ADD",
      "path": "5"
    },
    "3197": {
      "fn": "TS3000.processResult",
      "offset": [
        3007,
        3017
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3198": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x167E"
    },
    "3201": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        2996,
        3028
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3202": {
      "fn": "TS3000.processResult",
      "offset": [
        2996,
        3028
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3203": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        3028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3204": {
      "fn": "TS3000.processResult",
      "offset": [
        2973,
        3028
      ],
      "op": "POP",
      "path": "5"
    },
    "3205": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3090
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 23
    },
    "3206": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3208": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "ADD",
      "path": "5"
    },
    "3209": {
      "fn": "TS3000.processResult",
      "offset": [
        3084,
        3099
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3210": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3050
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3212": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3057
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3213": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3215": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "ADD",
      "path": "5"
    },
    "3216": {
      "fn": "TS3000.processResult",
      "offset": [
        3051,
        3071
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3217": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3218": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3219": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3220": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "LT",
      "path": "5"
    },
    "3221": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA0"
    },
    "3224": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3225": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA0"
    },
    "3228": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16DA"
    },
    "3231": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3232": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3233": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3235": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3236": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3237": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3238": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3240": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3241": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3242": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3243": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3081
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3245": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3247": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3248": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3249": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "MUL",
      "path": "5"
    },
    "3250": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3072
      ],
      "op": "ADD",
      "path": "5"
    },
    "3251": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3081
      ],
      "op": "ADD",
      "path": "5"
    },
    "3252": {
      "fn": "TS3000.processResult",
      "offset": [
        3038,
        3099
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3253": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3255": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3156
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3256": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC3"
    },
    "3259": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3260": {
      "fn": "TS3000.processResult",
      "offset": [
        3159,
        3160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3262": {
      "fn": "TS3000.processResult",
      "offset": [
        3159,
        3160
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3263": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16F0"
    },
    "3266": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3137,
        3160
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3267": {
      "fn": "TS3000.processResult",
      "offset": [
        3137,
        3160
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3268": {
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3133
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3269": {
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3133
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3270": {
      "branch": 33,
      "fn": "TS3000.processResult",
      "offset": [
        3113,
        3160
      ],
      "op": "SUB",
      "path": "5"
    },
    "3271": {
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD28"
    },
    "3274": {
      "branch": 33,
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3275": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3214
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 24
    },
    "3276": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3278": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "ADD",
      "path": "5"
    },
    "3279": {
      "fn": "TS3000.processResult",
      "offset": [
        3208,
        3223
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3280": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3282": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3283": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3285": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "ADD",
      "path": "5"
    },
    "3286": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE1"
    },
    "3289": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3290": {
      "op": "DUP2"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3294": {
      "op": "ADD"
    },
    "3295": {
      "op": "SWAP1"
    },
    "3296": {
      "op": "JUMP"
    },
    "3297": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3298": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3300": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3301": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3304": {
      "op": "NOT"
    },
    "3305": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3306": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3307": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SUB",
      "path": "5"
    },
    "3308": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "ADD",
      "path": "5"
    },
    "3309": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3310": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3311": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3312": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3313": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3314": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3315": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3316": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3317": {
      "fn": "TS3000.processResult",
      "offset": [
        3197,
        3224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3319": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3320": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3321": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "ADD",
      "path": "5"
    },
    "3322": {
      "fn": "TS3000.processResult",
      "offset": [
        3187,
        3225
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3323": {
      "fn": "TS3000.processResult",
      "offset": [
        3176,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3325": {
      "fn": "TS3000.processResult",
      "offset": [
        3176,
        3225
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3326": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 25,
      "value": "0x3523C39EB1A9C40E6A7C7504001CA3D223A7675DC8634B5AA1B056124B87CD36"
    },
    "3359": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3360": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3362": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3363": {
      "fn": "TS3000.processResult",
      "offset": [
        3244,
        3259
      ],
      "op": "LOG1",
      "path": "5"
    },
    "3364": {
      "fn": "TS3000.processResult",
      "offset": [
        2622,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3365": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3366": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3367": {
      "fn": "TS3000.processResult",
      "jump": "o",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3368": {
      "fn": "TS3000.processResult",
      "offset": [
        3109,
        3912
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3369": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3368
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 26
    },
    "3370": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3372": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "ADD",
      "path": "5"
    },
    "3373": {
      "fn": "TS3000.processResult",
      "offset": [
        3362,
        3377
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3374": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3376": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3377": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3379": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "ADD",
      "path": "5"
    },
    "3380": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3F"
    },
    "3383": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3384": {
      "op": "DUP2"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3388": {
      "op": "ADD"
    },
    "3389": {
      "op": "SWAP1"
    },
    "3390": {
      "op": "JUMP"
    },
    "3391": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3392": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3394": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3395": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3397": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3398": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3399": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SUB",
      "path": "5"
    },
    "3400": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SUB",
      "path": "5"
    },
    "3401": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3402": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3403": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3404": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3406": {
      "fn": "TS3000.processResult",
      "offset": [
        3351,
        3378
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3407": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3408": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3409": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3410": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3412": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "ADD",
      "path": "5"
    },
    "3413": {
      "fn": "TS3000.processResult",
      "offset": [
        3341,
        3379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3414": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3302
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3416": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3309
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3417": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3419": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "ADD",
      "path": "5"
    },
    "3420": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3323
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3421": {
      "fn": "TS3000.processResult",
      "offset": [
        3326,
        3327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3423": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD68"
    },
    "3426": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3427": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3428": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1703"
    },
    "3431": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3432": {
      "fn": "TS3000.processResult",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3433": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3434": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3435": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3436": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "LT",
      "path": "5"
    },
    "3437": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD78"
    },
    "3440": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3441": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD78"
    },
    "3444": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16DA"
    },
    "3447": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3448": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3449": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3451": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3452": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3453": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3454": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3456": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3457": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3458": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3459": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3461": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3463": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3464": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3465": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "MUL",
      "path": "5"
    },
    "3466": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3328
      ],
      "op": "ADD",
      "path": "5"
    },
    "3467": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3338
      ],
      "op": "ADD",
      "path": "5"
    },
    "3468": {
      "fn": "TS3000.processResult",
      "offset": [
        3290,
        3379
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3469": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "3471": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3472": {
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3474": {
      "branch": 34,
      "fn": "TS3000.processResult",
      "offset": [
        3397,
        3418
      ],
      "op": "AND",
      "path": "5"
    },
    "3475": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3476": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE94"
    },
    "3479": {
      "branch": 34,
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3480": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3456
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3482": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3484": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3485": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3486": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "3488": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "5"
    },
    "3489": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3491": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3492": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3493": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3508
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3494": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3496": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "ADD",
      "path": "5"
    },
    "3497": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3498": {
      "fn": "TS3000.processResult",
      "offset": [
        3525,
        3526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3500": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB5"
    },
    "3503": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3504": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3505": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1703"
    },
    "3508": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3502,
        3526
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3509": {
      "fn": "TS3000.processResult",
      "offset": [
        3502,
        3526
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3510": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3511": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3512": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3514": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "5"
    },
    "3515": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3572
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3517": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3579
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3518": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3520": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "ADD",
      "path": "5"
    },
    "3521": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3593
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3522": {
      "fn": "TS3000.processResult",
      "offset": [
        3596,
        3597
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3524": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCD"
    },
    "3527": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3528": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3529": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1703"
    },
    "3532": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3573,
        3597
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3533": {
      "fn": "TS3000.processResult",
      "offset": [
        3573,
        3597
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3534": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3535": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3536": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3537": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "LT",
      "path": "5"
    },
    "3538": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDDD"
    },
    "3541": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3542": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDDD"
    },
    "3545": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16DA"
    },
    "3548": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3549": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3550": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3551": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3553": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3554": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3556": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3558": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3559": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3560": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3562": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "MUL",
      "path": "5"
    },
    "3563": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3598
      ],
      "op": "ADD",
      "path": "5"
    },
    "3564": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3566": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "ADD",
      "path": "5"
    },
    "3567": {
      "fn": "TS3000.processResult",
      "offset": [
        3560,
        3609
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3568": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3569": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3570": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3572": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "5"
    },
    "3573": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3575": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3661
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3576": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3578": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "ADD",
      "path": "5"
    },
    "3579": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3675
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3580": {
      "fn": "TS3000.processResult",
      "offset": [
        3678,
        3679
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3582": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE07"
    },
    "3585": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3586": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3587": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1703"
    },
    "3590": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3655,
        3679
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3591": {
      "fn": "TS3000.processResult",
      "offset": [
        3655,
        3679
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3592": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3593": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3594": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3595": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "LT",
      "path": "5"
    },
    "3596": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE17"
    },
    "3599": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3600": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE17"
    },
    "3603": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16DA"
    },
    "3606": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3607": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3608": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3609": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3611": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3612": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3614": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3616": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3617": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3618": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3620": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "MUL",
      "path": "5"
    },
    "3621": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3680
      ],
      "op": "ADD",
      "path": "5"
    },
    "3622": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3624": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "ADD",
      "path": "5"
    },
    "3625": {
      "fn": "TS3000.processResult",
      "offset": [
        3642,
        3690
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3626": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3627": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3628": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3630": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "ADD",
      "path": "5"
    },
    "3631": {
      "fn": "TS3000.processResult",
      "offset": [
        3756,
        3779
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3633": {
      "fn": "TS3000.processResult",
      "offset": [
        3756,
        3779
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3634": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3732
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3635": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3637": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "ADD",
      "path": "5"
    },
    "3638": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3753
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3639": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE40"
    },
    "3642": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3643": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3644": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1703"
    },
    "3647": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3726,
        3779
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3648": {
      "fn": "TS3000.processResult",
      "offset": [
        3726,
        3779
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3649": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3650": {
      "fn": "TS3000.processResult",
      "offset": [
        3459,
        3798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3651": {
      "fn": "TS3000.processResult",
      "offset": [
        3831,
        3848
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0x7"
    },
    "3653": {
      "fn": "TS3000.processResult",
      "offset": [
        3831,
        3848
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3654": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3656": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3657": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3658": {
      "op": "DUP4"
    },
    "3659": {
      "op": "MLOAD"
    },
    "3660": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3662": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3663": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3664": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "ADD",
      "path": "5"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "SWAP1"
    },
    "3667": {
      "op": "SWAP2"
    },
    "3668": {
      "op": "MSTORE"
    },
    "3669": {
      "op": "DUP5"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "MLOAD"
    },
    "3672": {
      "op": "DUP2"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "MSTORE"
    },
    "3676": {
      "op": "SWAP1"
    },
    "3677": {
      "op": "DUP4"
    },
    "3678": {
      "op": "ADD"
    },
    "3679": {
      "op": "MLOAD"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3682": {
      "op": "DUP1"
    },
    "3683": {
      "op": "DUP4"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "SWAP2"
    },
    "3686": {
      "op": "SWAP1"
    },
    "3687": {
      "op": "SWAP2"
    },
    "3688": {
      "op": "MSTORE"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "MLOAD"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3798
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3698": {
      "fn": "TS3000.processResult",
      "offset": [
        3438,
        3798
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE91"
    },
    "3703": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3709": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3710": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3712": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3713": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3714": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SUB",
      "path": "5"
    },
    "3715": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SUB",
      "path": "5"
    },
    "3716": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3717": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3718": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3719": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3721": {
      "fn": "TS3000.processResult",
      "offset": [
        3850,
        3867
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3722": {
      "fn": "TS3000.processResult",
      "offset": [
        3869,
        3886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3724": {
      "fn": "TS3000.processResult",
      "offset": [
        3869,
        3886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3725": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE99"
    },
    "3728": {
      "fn": "TS3000.processResult",
      "jump": "i",
      "offset": [
        3816,
        3887
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3729": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3730": {
      "fn": "TS3000.processResult",
      "offset": [
        3816,
        3887
      ],
      "op": "POP",
      "path": "5"
    },
    "3731": {
      "fn": "TS3000.processResult",
      "offset": [
        3420,
        3902
      ],
      "op": "POP",
      "path": "5"
    },
    "3732": {
      "fn": "TS3000.processResult",
      "offset": [
        3393,
        3902
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3733": {
      "fn": "TS3000.processResult",
      "offset": [
        2622,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3734": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3735": {
      "fn": "TS3000.processResult",
      "offset": [
        2545,
        3918
      ],
      "op": "POP",
      "path": "5"
    },
    "3736": {
      "fn": "TS3000.processResult",
      "jump": "o",
      "offset": [
        2545,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3737": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3738": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1471,
        1475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3740": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1506,
        1527
      ],
      "op": "SELFBALANCE",
      "path": "2",
      "statement": 28
    },
    "3741": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1495,
        1502
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3742": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1495,
        1527
      ],
      "op": "GT",
      "path": "2"
    },
    "3743": {
      "branch": 41,
      "fn": "BaseClient._submitRequest",
      "offset": [
        1495,
        1527
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3744": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE0"
    },
    "3747": {
      "branch": 41,
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3748": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3750": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3757": {
      "op": "SHL"
    },
    "3758": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3759": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3762": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3764": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3765": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "ADD",
      "path": "2"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3798": {
      "op": "DUP3"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "3807": {
      "op": "JUMP"
    },
    "3808": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1487,
        1550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3809": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3811": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1591
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3812": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3814": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3815": {
      "op": "PUSH4",
      "value": "0x78F8AF25"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3822": {
      "op": "SHL"
    },
    "3823": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3824": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3825": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1560,
        1574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3827": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1560,
        1574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1591
      ],
      "op": "AND",
      "path": "2"
    },
    "3837": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3838": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1605
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF1F15E4A"
    },
    "3843": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3844": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1613,
        1620
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3845": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1613,
        1620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3846": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF15"
    },
    "3849": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3850": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1622,
        1627
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3851": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1622,
        1627
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3852": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1629,
        1646
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3853": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1629,
        1646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3854": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3856": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ADD",
      "path": "2"
    },
    "3857": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1716"
    },
    "3860": {
      "fn": "BaseClient._submitRequest",
      "jump": "i",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3861": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3862": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3864": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3866": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3867": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3868": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3869": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "SUB",
      "path": "2"
    },
    "3870": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3871": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3872": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3873": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "GAS",
      "path": "2"
    },
    "3874": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "CALL",
      "path": "2"
    },
    "3875": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3876": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3877": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3878": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "3881": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3882": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3883": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3885": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3886": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3887": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3888": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3890": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3891": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3892": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3893": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3894": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3895": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3896": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3897": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3899": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3900": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3901": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3903": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "NOT",
      "path": "2"
    },
    "3904": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3906": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3907": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ADD",
      "path": "2"
    },
    "3908": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "AND",
      "path": "2"
    },
    "3909": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3910": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ADD",
      "path": "2"
    },
    "3911": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3912": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3914": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3915": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3916": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3917": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "ADD",
      "path": "2"
    },
    "3918": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3919": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF58"
    },
    "3922": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3923": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3924": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1738"
    },
    "3927": {
      "fn": "BaseClient._submitRequest",
      "jump": "i",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3928": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1577,
        1647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3929": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1560,
        1647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3930": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1560,
        1647
      ],
      "op": "POP",
      "path": "2"
    },
    "3931": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 29,
      "value": "0xD3B0B0209035A5613265E8FB1F38873EA24C7C6189B128EEBE3689C03D13905C"
    },
    "3964": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1679,
        1688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3965": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3967": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3968": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8B"
    },
    "3971": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3972": {
      "op": "DUP2"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "op": "JUMP"
    },
    "3979": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3980": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3982": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3983": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3984": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3985": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "SUB",
      "path": "2"
    },
    "3986": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3987": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1662,
        1689
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3988": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x0"
    },
    "3990": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3991": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3992": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3993": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3995": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3997": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3998": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4000": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4001": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1726
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4002": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4003": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4006": {
      "op": "NOT"
    },
    "4007": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "AND",
      "path": "2"
    },
    "4008": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1729,
        1733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4010": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "OR",
      "path": "2"
    },
    "4011": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4012": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1699,
        1733
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4013": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1716,
        1725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4016": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4017": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "POP",
      "path": "2"
    },
    "4018": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "POP",
      "path": "2"
    },
    "4019": {
      "fn": "BaseClient._submitRequest",
      "offset": [
        1371,
        1770
      ],
      "op": "POP",
      "path": "2"
    },
    "4020": {
      "fn": "BaseClient._submitRequest",
      "jump": "o",
      "offset": [
        1371,
        1770
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4021": {
      "op": "JUMPDEST"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4026": {
      "op": "DUP3"
    },
    "4027": {
      "op": "DUP5"
    },
    "4028": {
      "op": "SUB"
    },
    "4029": {
      "op": "SLT"
    },
    "4030": {
      "op": "ISZERO"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4034": {
      "op": "JUMPI"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "REVERT"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "CALLDATALOAD"
    },
    "4042": {
      "op": "SWAP2"
    },
    "4043": {
      "op": "SWAP1"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "jump": "o",
      "op": "JUMP"
    },
    "4046": {
      "op": "JUMPDEST"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4049": {
      "op": "JUMPDEST"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "DUP2"
    },
    "4052": {
      "op": "LT"
    },
    "4053": {
      "op": "ISZERO"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0xFE9"
    },
    "4057": {
      "op": "JUMPI"
    },
    "4058": {
      "op": "DUP2"
    },
    "4059": {
      "op": "DUP2"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "MLOAD"
    },
    "4062": {
      "op": "DUP4"
    },
    "4063": {
      "op": "DUP3"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4068": {
      "op": "ADD"
    },
    "4069": {
      "op": "PUSH2",
      "value": "0xFD1"
    },
    "4072": {
      "op": "JUMP"
    },
    "4073": {
      "op": "JUMPDEST"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4078": {
      "op": "SWAP2"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "jump": "o",
      "op": "JUMP"
    },
    "4082": {
      "op": "JUMPDEST"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4085": {
      "op": "DUP2"
    },
    "4086": {
      "op": "MLOAD"
    },
    "4087": {
      "op": "DUP1"
    },
    "4088": {
      "op": "DUP5"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0x100A"
    },
    "4093": {
      "op": "DUP2"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4096": {
      "op": "DUP7"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "DUP7"
    },
    "4101": {
      "op": "ADD"
    },
    "4102": {
      "op": "PUSH2",
      "value": "0xFCE"
    },
    "4105": {
      "jump": "i",
      "op": "JUMP"
    },
    "4106": {
      "op": "JUMPDEST"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4112": {
      "op": "NOT"
    },
    "4113": {
      "op": "AND"
    },
    "4114": {
      "op": "SWAP3"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "SWAP3"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "SWAP3"
    },
    "4122": {
      "op": "SWAP2"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "POP"
    },
    "4125": {
      "jump": "o",
      "op": "JUMP"
    },
    "4126": {
      "op": "JUMPDEST"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4129": {
      "op": "DUP2"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "op": "DUP4"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "DUP5"
    },
    "4141": {
      "op": "PUSH2",
      "value": "0xFF2"
    },
    "4144": {
      "jump": "i",
      "op": "JUMP"
    },
    "4145": {
      "op": "JUMPDEST"
    },
    "4146": {
      "op": "SWAP4"
    },
    "4147": {
      "op": "SWAP3"
    },
    "4148": {
      "op": "POP"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "POP"
    },
    "4151": {
      "jump": "o",
      "op": "JUMP"
    },
    "4152": {
      "op": "JUMPDEST"
    },
    "4153": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4160": {
      "op": "SHL"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4168": {
      "op": "MSTORE"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4173": {
      "op": "REVERT"
    },
    "4174": {
      "op": "JUMPDEST"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4177": {
      "op": "MLOAD"
    },
    "4178": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4181": {
      "op": "DUP2"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4192": {
      "op": "DUP2"
    },
    "4193": {
      "op": "GT"
    },
    "4194": {
      "op": "DUP3"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "LT"
    },
    "4197": {
      "op": "OR"
    },
    "4198": {
      "op": "ISZERO"
    },
    "4199": {
      "op": "PUSH2",
      "value": "0x1072"
    },
    "4202": {
      "op": "JUMPI"
    },
    "4203": {
      "op": "PUSH2",
      "value": "0x1072"
    },
    "4206": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4209": {
      "jump": "i",
      "op": "JUMP"
    },
    "4210": {
      "op": "JUMPDEST"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4213": {
      "op": "MSTORE"
    },
    "4214": {
      "op": "SWAP1"
    },
    "4215": {
      "jump": "o",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4219": {
      "op": "MLOAD"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4226": {
      "op": "NOT"
    },
    "4227": {
      "op": "AND"
    },
    "4228": {
      "op": "DUP2"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4239": {
      "op": "DUP2"
    },
    "4240": {
      "op": "GT"
    },
    "4241": {
      "op": "DUP3"
    },
    "4242": {
      "op": "DUP3"
    },
    "4243": {
      "op": "LT"
    },
    "4244": {
      "op": "OR"
    },
    "4245": {
      "op": "ISZERO"
    },
    "4246": {
      "op": "PUSH2",
      "value": "0x10A1"
    },
    "4249": {
      "op": "JUMPI"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A1"
    },
    "4253": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4256": {
      "jump": "i",
      "op": "JUMP"
    },
    "4257": {
      "op": "JUMPDEST"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "SWAP2"
    },
    "4262": {
      "op": "SWAP1"
    },
    "4263": {
      "op": "POP"
    },
    "4264": {
      "jump": "o",
      "op": "JUMP"
    },
    "4265": {
      "op": "JUMPDEST"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4268": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "GT"
    },
    "4279": {
      "op": "ISZERO"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4283": {
      "op": "JUMPI"
    },
    "4284": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4290": {
      "jump": "i",
      "op": "JUMP"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4298": {
      "op": "NOT"
    },
    "4299": {
      "op": "AND"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "SWAP1"
    },
    "4304": {
      "jump": "o",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "DUP1"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4313": {
      "op": "DUP5"
    },
    "4314": {
      "op": "DUP7"
    },
    "4315": {
      "op": "SUB"
    },
    "4316": {
      "op": "SLT"
    },
    "4317": {
      "op": "ISZERO"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4321": {
      "op": "JUMPI"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4324": {
      "op": "DUP1"
    },
    "4325": {
      "op": "REVERT"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "DUP4"
    },
    "4328": {
      "op": "CALLDATALOAD"
    },
    "4329": {
      "op": "SWAP3"
    },
    "4330": {
      "op": "POP"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4333": {
      "op": "DUP5"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "CALLDATALOAD"
    },
    "4336": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4345": {
      "op": "DUP2"
    },
    "4346": {
      "op": "GT"
    },
    "4347": {
      "op": "ISZERO"
    },
    "4348": {
      "op": "PUSH2",
      "value": "0x1104"
    },
    "4351": {
      "op": "JUMPI"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "DUP1"
    },
    "4355": {
      "op": "REVERT"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "DUP5"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4361": {
      "op": "DUP2"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "DUP7"
    },
    "4364": {
      "op": "SGT"
    },
    "4365": {
      "op": "PUSH2",
      "value": "0x1115"
    },
    "4368": {
      "op": "JUMPI"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4371": {
      "op": "DUP1"
    },
    "4372": {
      "op": "REVERT"
    },
    "4373": {
      "op": "JUMPDEST"
    },
    "4374": {
      "op": "DUP1"
    },
    "4375": {
      "op": "CALLDATALOAD"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x1128"
    },
    "4379": {
      "op": "PUSH2",
      "value": "0x1123"
    },
    "4382": {
      "op": "DUP3"
    },
    "4383": {
      "op": "PUSH2",
      "value": "0x10A9"
    },
    "4386": {
      "jump": "i",
      "op": "JUMP"
    },
    "4387": {
      "op": "JUMPDEST"
    },
    "4388": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4391": {
      "jump": "i",
      "op": "JUMP"
    },
    "4392": {
      "op": "JUMPDEST"
    },
    "4393": {
      "op": "DUP2"
    },
    "4394": {
      "op": "DUP2"
    },
    "4395": {
      "op": "MSTORE"
    },
    "4396": {
      "op": "DUP8"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4399": {
      "op": "DUP4"
    },
    "4400": {
      "op": "DUP6"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "GT"
    },
    "4404": {
      "op": "ISZERO"
    },
    "4405": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4408": {
      "op": "JUMPI"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "REVERT"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "DUP2"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4417": {
      "op": "DUP5"
    },
    "4418": {
      "op": "ADD"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4421": {
      "op": "DUP4"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "CALLDATACOPY"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4428": {
      "op": "DUP4"
    },
    "4429": {
      "op": "DUP4"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "op": "ADD"
    },
    "4432": {
      "op": "MSTORE"
    },
    "4433": {
      "op": "DUP1"
    },
    "4434": {
      "op": "SWAP5"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "op": "POP"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4441": {
      "op": "DUP5"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "CALLDATALOAD"
    },
    "4444": {
      "op": "SWAP1"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "SWAP3"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "SWAP3"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "SWAP3"
    },
    "4451": {
      "jump": "o",
      "op": "JUMP"
    },
    "4452": {
      "op": "JUMPDEST"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4455": {
      "op": "DUP1"
    },
    "4456": {
      "op": "DUP4"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4459": {
      "op": "DUP5"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "SLT"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "REVERT"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "DUP2"
    },
    "4473": {
      "op": "CALLDATALOAD"
    },
    "4474": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4483": {
      "op": "DUP2"
    },
    "4484": {
      "op": "GT"
    },
    "4485": {
      "op": "ISZERO"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4489": {
      "op": "JUMPI"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "DUP1"
    },
    "4493": {
      "op": "REVERT"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4497": {
      "op": "DUP4"
    },
    "4498": {
      "op": "ADD"
    },
    "4499": {
      "op": "SWAP2"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "DUP4"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "op": "DUP3"
    },
    "4505": {
      "op": "DUP6"
    },
    "4506": {
      "op": "ADD"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "op": "GT"
    },
    "4509": {
      "op": "ISZERO"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4513": {
      "op": "JUMPI"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4516": {
      "op": "DUP1"
    },
    "4517": {
      "op": "REVERT"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "SWAP3"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "SWAP3"
    },
    "4522": {
      "op": "SWAP1"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "jump": "o",
      "op": "JUMP"
    },
    "4525": {
      "op": "JUMPDEST"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4528": {
      "op": "DUP1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4533": {
      "op": "DUP5"
    },
    "4534": {
      "op": "DUP7"
    },
    "4535": {
      "op": "SUB"
    },
    "4536": {
      "op": "SLT"
    },
    "4537": {
      "op": "ISZERO"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C2"
    },
    "4541": {
      "op": "JUMPI"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4544": {
      "op": "DUP1"
    },
    "4545": {
      "op": "REVERT"
    },
    "4546": {
      "op": "JUMPDEST"
    },
    "4547": {
      "op": "DUP4"
    },
    "4548": {
      "op": "CALLDATALOAD"
    },
    "4549": {
      "op": "SWAP3"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4553": {
      "op": "DUP5"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "CALLDATALOAD"
    },
    "4556": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4565": {
      "op": "DUP2"
    },
    "4566": {
      "op": "GT"
    },
    "4567": {
      "op": "ISZERO"
    },
    "4568": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4571": {
      "op": "JUMPI"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4574": {
      "op": "DUP1"
    },
    "4575": {
      "op": "REVERT"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "PUSH2",
      "value": "0x11EC"
    },
    "4580": {
      "op": "DUP7"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "DUP8"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4587": {
      "jump": "i",
      "op": "JUMP"
    },
    "4588": {
      "op": "JUMPDEST"
    },
    "4589": {
      "op": "SWAP5"
    },
    "4590": {
      "op": "SWAP8"
    },
    "4591": {
      "op": "SWAP1"
    },
    "4592": {
      "op": "SWAP7"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "op": "SWAP4"
    },
    "4595": {
      "op": "SWAP5"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "jump": "o",
      "op": "JUMP"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "DUP1"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "DUP4"
    },
    "4608": {
      "op": "DUP6"
    },
    "4609": {
      "op": "SUB"
    },
    "4610": {
      "op": "SLT"
    },
    "4611": {
      "op": "ISZERO"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x120C"
    },
    "4615": {
      "op": "JUMPI"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "DUP1"
    },
    "4619": {
      "op": "REVERT"
    },
    "4620": {
      "op": "JUMPDEST"
    },
    "4621": {
      "op": "DUP3"
    },
    "4622": {
      "op": "CALLDATALOAD"
    },
    "4623": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4632": {
      "op": "DUP2"
    },
    "4633": {
      "op": "GT"
    },
    "4634": {
      "op": "ISZERO"
    },
    "4635": {
      "op": "PUSH2",
      "value": "0x1223"
    },
    "4638": {
      "op": "JUMPI"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "REVERT"
    },
    "4643": {
      "op": "JUMPDEST"
    },
    "4644": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "4647": {
      "op": "DUP6"
    },
    "4648": {
      "op": "DUP3"
    },
    "4649": {
      "op": "DUP7"
    },
    "4650": {
      "op": "ADD"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4654": {
      "jump": "i",
      "op": "JUMP"
    },
    "4655": {
      "op": "JUMPDEST"
    },
    "4656": {
      "op": "SWAP1"
    },
    "4657": {
      "op": "SWAP7"
    },
    "4658": {
      "op": "SWAP1"
    },
    "4659": {
      "op": "SWAP6"
    },
    "4660": {
      "op": "POP"
    },
    "4661": {
      "op": "SWAP4"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "jump": "o",
      "op": "JUMP"
    },
    "4667": {
      "op": "JUMPDEST"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4670": {
      "op": "DUP1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4673": {
      "op": "DUP1"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4676": {
      "op": "DUP6"
    },
    "4677": {
      "op": "DUP8"
    },
    "4678": {
      "op": "SUB"
    },
    "4679": {
      "op": "SLT"
    },
    "4680": {
      "op": "ISZERO"
    },
    "4681": {
      "op": "PUSH2",
      "value": "0x1251"
    },
    "4684": {
      "op": "JUMPI"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4687": {
      "op": "DUP1"
    },
    "4688": {
      "op": "REVERT"
    },
    "4689": {
      "op": "JUMPDEST"
    },
    "4690": {
      "op": "DUP5"
    },
    "4691": {
      "op": "CALLDATALOAD"
    },
    "4692": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4701": {
      "op": "DUP1"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "GT"
    },
    "4704": {
      "op": "ISZERO"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x1269"
    },
    "4708": {
      "op": "JUMPI"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4711": {
      "op": "DUP1"
    },
    "4712": {
      "op": "REVERT"
    },
    "4713": {
      "op": "JUMPDEST"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0x1275"
    },
    "4717": {
      "op": "DUP9"
    },
    "4718": {
      "op": "DUP4"
    },
    "4719": {
      "op": "DUP10"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4724": {
      "jump": "i",
      "op": "JUMP"
    },
    "4725": {
      "op": "JUMPDEST"
    },
    "4726": {
      "op": "SWAP1"
    },
    "4727": {
      "op": "SWAP7"
    },
    "4728": {
      "op": "POP"
    },
    "4729": {
      "op": "SWAP5"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4733": {
      "op": "DUP8"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "CALLDATALOAD"
    },
    "4736": {
      "op": "SWAP2"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "DUP1"
    },
    "4739": {
      "op": "DUP3"
    },
    "4740": {
      "op": "GT"
    },
    "4741": {
      "op": "ISZERO"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4745": {
      "op": "JUMPI"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4748": {
      "op": "DUP1"
    },
    "4749": {
      "op": "REVERT"
    },
    "4750": {
      "op": "JUMPDEST"
    },
    "4751": {
      "op": "POP"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x129B"
    },
    "4755": {
      "op": "DUP8"
    },
    "4756": {
      "op": "DUP3"
    },
    "4757": {
      "op": "DUP9"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4762": {
      "jump": "i",
      "op": "JUMP"
    },
    "4763": {
      "op": "JUMPDEST"
    },
    "4764": {
      "op": "SWAP6"
    },
    "4765": {
      "op": "SWAP9"
    },
    "4766": {
      "op": "SWAP5"
    },
    "4767": {
      "op": "SWAP8"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "SWAP6"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "op": "POP"
    },
    "4774": {
      "jump": "o",
      "op": "JUMP"
    },
    "4775": {
      "op": "JUMPDEST"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4778": {
      "op": "DUP1"
    },
    "4779": {
      "op": "DUP3"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4783": {
      "op": "SWAP1"
    },
    "4784": {
      "op": "DUP3"
    },
    "4785": {
      "op": "ADD"
    },
    "4786": {
      "op": "MSTORE"
    },
    "4787": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "ADD"
    },
    "4824": {
      "op": "MSTORE"
    },
    "4825": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "ADD"
    },
    "4838": {
      "op": "MSTORE"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "op": "SWAP1"
    },
    "4843": {
      "jump": "o",
      "op": "JUMP"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "DUP1"
    },
    "4846": {
      "op": "MLOAD"
    },
    "4847": {
      "op": "DUP1"
    },
    "4848": {
      "op": "ISZERO"
    },
    "4849": {
      "op": "ISZERO"
    },
    "4850": {
      "op": "DUP2"
    },
    "4851": {
      "op": "EQ"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "4855": {
      "op": "JUMPI"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4858": {
      "op": "DUP1"
    },
    "4859": {
      "op": "REVERT"
    },
    "4860": {
      "op": "JUMPDEST"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4865": {
      "op": "DUP3"
    },
    "4866": {
      "op": "DUP5"
    },
    "4867": {
      "op": "SUB"
    },
    "4868": {
      "op": "SLT"
    },
    "4869": {
      "op": "ISZERO"
    },
    "4870": {
      "op": "PUSH2",
      "value": "0x130E"
    },
    "4873": {
      "op": "JUMPI"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4876": {
      "op": "DUP1"
    },
    "4877": {
      "op": "REVERT"
    },
    "4878": {
      "op": "JUMPDEST"
    },
    "4879": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4882": {
      "op": "DUP3"
    },
    "4883": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "4886": {
      "jump": "i",
      "op": "JUMP"
    },
    "4887": {
      "op": "JUMPDEST"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4890": {
      "op": "DUP3"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4893": {
      "op": "DUP4"
    },
    "4894": {
      "op": "ADD"
    },
    "4895": {
      "op": "SLT"
    },
    "4896": {
      "op": "PUSH2",
      "value": "0x1328"
    },
    "4899": {
      "op": "JUMPI"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4902": {
      "op": "DUP1"
    },
    "4903": {
      "op": "REVERT"
    },
    "4904": {
      "op": "JUMPDEST"
    },
    "4905": {
      "op": "DUP2"
    },
    "4906": {
      "op": "MLOAD"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1336"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x1123"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "PUSH2",
      "value": "0x10A9"
    },
    "4917": {
      "jump": "i",
      "op": "JUMP"
    },
    "4918": {
      "op": "JUMPDEST"
    },
    "4919": {
      "op": "DUP2"
    },
    "4920": {
      "op": "DUP2"
    },
    "4921": {
      "op": "MSTORE"
    },
    "4922": {
      "op": "DUP5"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4925": {
      "op": "DUP4"
    },
    "4926": {
      "op": "DUP7"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "ADD"
    },
    "4929": {
      "op": "GT"
    },
    "4930": {
      "op": "ISZERO"
    },
    "4931": {
      "op": "PUSH2",
      "value": "0x134B"
    },
    "4934": {
      "op": "JUMPI"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4937": {
      "op": "DUP1"
    },
    "4938": {
      "op": "REVERT"
    },
    "4939": {
      "op": "JUMPDEST"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "4943": {
      "op": "DUP3"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4946": {
      "op": "DUP4"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4950": {
      "op": "DUP8"
    },
    "4951": {
      "op": "ADD"
    },
    "4952": {
      "op": "PUSH2",
      "value": "0xFCE"
    },
    "4955": {
      "jump": "i",
      "op": "JUMP"
    },
    "4956": {
      "op": "JUMPDEST"
    },
    "4957": {
      "op": "DUP1"
    },
    "4958": {
      "op": "MLOAD"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4965": {
      "op": "SHL"
    },
    "4966": {
      "op": "SUB"
    },
    "4967": {
      "op": "DUP2"
    },
    "4968": {
      "op": "AND"
    },
    "4969": {
      "op": "DUP2"
    },
    "4970": {
      "op": "EQ"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "4974": {
      "op": "JUMPI"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4977": {
      "op": "DUP1"
    },
    "4978": {
      "op": "REVERT"
    },
    "4979": {
      "op": "JUMPDEST"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4984": {
      "op": "DUP3"
    },
    "4985": {
      "op": "DUP5"
    },
    "4986": {
      "op": "SUB"
    },
    "4987": {
      "op": "SLT"
    },
    "4988": {
      "op": "ISZERO"
    },
    "4989": {
      "op": "PUSH2",
      "value": "0x1385"
    },
    "4992": {
      "op": "JUMPI"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4995": {
      "op": "DUP1"
    },
    "4996": {
      "op": "REVERT"
    },
    "4997": {
      "op": "JUMPDEST"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "op": "MLOAD"
    },
    "5000": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5009": {
      "op": "DUP1"
    },
    "5010": {
      "op": "DUP3"
    },
    "5011": {
      "op": "GT"
    },
    "5012": {
      "op": "ISZERO"
    },
    "5013": {
      "op": "PUSH2",
      "value": "0x139D"
    },
    "5016": {
      "op": "JUMPI"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5019": {
      "op": "DUP1"
    },
    "5020": {
      "op": "REVERT"
    },
    "5021": {
      "op": "JUMPDEST"
    },
    "5022": {
      "op": "SWAP1"
    },
    "5023": {
      "op": "DUP4"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "SWAP1"
    },
    "5026": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5029": {
      "op": "DUP3"
    },
    "5030": {
      "op": "DUP7"
    },
    "5031": {
      "op": "SUB"
    },
    "5032": {
      "op": "SLT"
    },
    "5033": {
      "op": "ISZERO"
    },
    "5034": {
      "op": "PUSH2",
      "value": "0x13B2"
    },
    "5037": {
      "op": "JUMPI"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5040": {
      "op": "DUP1"
    },
    "5041": {
      "op": "REVERT"
    },
    "5042": {
      "op": "JUMPDEST"
    },
    "5043": {
      "op": "PUSH2",
      "value": "0x13BA"
    },
    "5046": {
      "op": "PUSH2",
      "value": "0x104E"
    },
    "5049": {
      "jump": "i",
      "op": "JUMP"
    },
    "5050": {
      "op": "JUMPDEST"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "MLOAD"
    },
    "5053": {
      "op": "DUP2"
    },
    "5054": {
      "op": "MSTORE"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5057": {
      "op": "DUP4"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "MLOAD"
    },
    "5060": {
      "op": "DUP3"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "GT"
    },
    "5063": {
      "op": "ISZERO"
    },
    "5064": {
      "op": "PUSH2",
      "value": "0x13D0"
    },
    "5067": {
      "op": "JUMPI"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5070": {
      "op": "DUP1"
    },
    "5071": {
      "op": "REVERT"
    },
    "5072": {
      "op": "JUMPDEST"
    },
    "5073": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5076": {
      "op": "DUP8"
    },
    "5077": {
      "op": "DUP3"
    },
    "5078": {
      "op": "DUP7"
    },
    "5079": {
      "op": "ADD"
    },
    "5080": {
      "op": "PUSH2",
      "value": "0x1317"
    },
    "5083": {
      "jump": "i",
      "op": "JUMP"
    },
    "5084": {
      "op": "JUMPDEST"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5087": {
      "op": "DUP4"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "op": "MSTORE"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5093": {
      "op": "DUP4"
    },
    "5094": {
      "op": "ADD"
    },
    "5095": {
      "op": "MLOAD"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5098": {
      "op": "DUP3"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "MSTORE"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5103": {
      "op": "DUP4"
    },
    "5104": {
      "op": "ADD"
    },
    "5105": {
      "op": "MLOAD"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5108": {
      "op": "DUP3"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "MSTORE"
    },
    "5111": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5116": {
      "op": "DUP5"
    },
    "5117": {
      "op": "ADD"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x135C"
    },
    "5121": {
      "jump": "i",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5125": {
      "op": "DUP3"
    },
    "5126": {
      "op": "ADD"
    },
    "5127": {
      "op": "MSTORE"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x1413"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5133": {
      "op": "DUP5"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x135C"
    },
    "5138": {
      "jump": "i",
      "op": "JUMP"
    },
    "5139": {
      "op": "JUMPDEST"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5142": {
      "op": "DUP3"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "op": "MSTORE"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5147": {
      "op": "DUP4"
    },
    "5148": {
      "op": "ADD"
    },
    "5149": {
      "op": "MLOAD"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5152": {
      "op": "DUP3"
    },
    "5153": {
      "op": "ADD"
    },
    "5154": {
      "op": "MSTORE"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5157": {
      "op": "DUP4"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "MLOAD"
    },
    "5160": {
      "op": "DUP3"
    },
    "5161": {
      "op": "DUP2"
    },
    "5162": {
      "op": "GT"
    },
    "5163": {
      "op": "ISZERO"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1434"
    },
    "5167": {
      "op": "JUMPI"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5170": {
      "op": "DUP1"
    },
    "5171": {
      "op": "REVERT"
    },
    "5172": {
      "op": "JUMPDEST"
    },
    "5173": {
      "op": "PUSH2",
      "value": "0x1440"
    },
    "5176": {
      "op": "DUP8"
    },
    "5177": {
      "op": "DUP3"
    },
    "5178": {
      "op": "DUP7"
    },
    "5179": {
      "op": "ADD"
    },
    "5180": {
      "op": "PUSH2",
      "value": "0x1317"
    },
    "5183": {
      "jump": "i",
      "op": "JUMP"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5187": {
      "op": "DUP4"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "op": "MSTORE"
    },
    "5190": {
      "op": "POP"
    },
    "5191": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5194": {
      "op": "SWAP2"
    },
    "5195": {
      "op": "POP"
    },
    "5196": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5199": {
      "op": "DUP3"
    },
    "5200": {
      "op": "DUP5"
    },
    "5201": {
      "op": "ADD"
    },
    "5202": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "5205": {
      "jump": "i",
      "op": "JUMP"
    },
    "5206": {
      "op": "JUMPDEST"
    },
    "5207": {
      "op": "SWAP2"
    },
    "5208": {
      "op": "DUP2"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "SWAP2"
    },
    "5211": {
      "op": "SWAP1"
    },
    "5212": {
      "op": "SWAP2"
    },
    "5213": {
      "op": "MSTORE"
    },
    "5214": {
      "op": "SWAP5"
    },
    "5215": {
      "op": "SWAP4"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "op": "POP"
    },
    "5218": {
      "op": "POP"
    },
    "5219": {
      "op": "POP"
    },
    "5220": {
      "jump": "o",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "DUP2"
    },
    "5223": {
      "op": "DUP4"
    },
    "5224": {
      "op": "MSTORE"
    },
    "5225": {
      "op": "DUP2"
    },
    "5226": {
      "op": "DUP2"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5229": {
      "op": "DUP6"
    },
    "5230": {
      "op": "ADD"
    },
    "5231": {
      "op": "CALLDATACOPY"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5235": {
      "op": "DUP3"
    },
    "5236": {
      "op": "DUP3"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5240": {
      "op": "SWAP1"
    },
    "5241": {
      "op": "DUP2"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "SWAP2"
    },
    "5244": {
      "op": "SWAP1"
    },
    "5245": {
      "op": "SWAP2"
    },
    "5246": {
      "op": "MSTORE"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5249": {
      "op": "SWAP1"
    },
    "5250": {
      "op": "SWAP2"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5254": {
      "op": "NOT"
    },
    "5255": {
      "op": "AND"
    },
    "5256": {
      "op": "SWAP1"
    },
    "5257": {
      "op": "SWAP2"
    },
    "5258": {
      "op": "ADD"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "SWAP1"
    },
    "5261": {
      "jump": "o",
      "op": "JUMP"
    },
    "5262": {
      "op": "JUMPDEST"
    },
    "5263": {
      "op": "DUP4"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "ADD"
    },
    "5272": {
      "op": "MSTORE"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5280": {
      "op": "DUP4"
    },
    "5281": {
      "op": "ADD"
    },
    "5282": {
      "op": "DUP5"
    },
    "5283": {
      "op": "DUP7"
    },
    "5284": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5287": {
      "jump": "i",
      "op": "JUMP"
    },
    "5288": {
      "op": "JUMPDEST"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5291": {
      "op": "DUP2"
    },
    "5292": {
      "op": "MSTORE"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5300": {
      "op": "DUP4"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "DUP5"
    },
    "5303": {
      "op": "DUP7"
    },
    "5304": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5307": {
      "jump": "i",
      "op": "JUMP"
    },
    "5308": {
      "op": "JUMPDEST"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5311": {
      "op": "DUP3"
    },
    "5312": {
      "op": "MLOAD"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x14CE"
    },
    "5316": {
      "op": "DUP2"
    },
    "5317": {
      "op": "DUP5"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5320": {
      "op": "DUP8"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "PUSH2",
      "value": "0xFCE"
    },
    "5325": {
      "jump": "i",
      "op": "JUMP"
    },
    "5326": {
      "op": "JUMPDEST"
    },
    "5327": {
      "op": "SWAP2"
    },
    "5328": {
      "op": "SWAP1"
    },
    "5329": {
      "op": "SWAP2"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "SWAP3"
    },
    "5332": {
      "op": "SWAP2"
    },
    "5333": {
      "op": "POP"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "jump": "o",
      "op": "JUMP"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "DUP2"
    },
    "5340": {
      "op": "DUP2"
    },
    "5341": {
      "op": "SHR"
    },
    "5342": {
      "op": "SWAP1"
    },
    "5343": {
      "op": "DUP3"
    },
    "5344": {
      "op": "AND"
    },
    "5345": {
      "op": "DUP1"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x14EC"
    },
    "5349": {
      "op": "JUMPI"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5352": {
      "op": "DUP3"
    },
    "5353": {
      "op": "AND"
    },
    "5354": {
      "op": "SWAP2"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "op": "JUMPDEST"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5359": {
      "op": "DUP3"
    },
    "5360": {
      "op": "LT"
    },
    "5361": {
      "op": "DUP2"
    },
    "5362": {
      "op": "SUB"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x150C"
    },
    "5366": {
      "op": "JUMPI"
    },
    "5367": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5387": {
      "op": "REVERT"
    },
    "5388": {
      "op": "JUMPDEST"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "op": "SWAP2"
    },
    "5391": {
      "op": "SWAP1"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "jump": "o",
      "op": "JUMP"
    },
    "5394": {
      "op": "JUMPDEST"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5399": {
      "op": "DUP3"
    },
    "5400": {
      "op": "DUP5"
    },
    "5401": {
      "op": "SUB"
    },
    "5402": {
      "op": "SLT"
    },
    "5403": {
      "op": "ISZERO"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x1524"
    },
    "5407": {
      "op": "JUMPI"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5410": {
      "op": "DUP1"
    },
    "5411": {
      "op": "REVERT"
    },
    "5412": {
      "op": "JUMPDEST"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5415": {
      "op": "MLOAD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5418": {
      "op": "DUP2"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "DUP2"
    },
    "5421": {
      "op": "DUP2"
    },
    "5422": {
      "op": "LT"
    },
    "5423": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "GT"
    },
    "5434": {
      "op": "OR"
    },
    "5435": {
      "op": "ISZERO"
    },
    "5436": {
      "op": "PUSH2",
      "value": "0x1547"
    },
    "5439": {
      "op": "JUMPI"
    },
    "5440": {
      "op": "PUSH2",
      "value": "0x1547"
    },
    "5443": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "5446": {
      "jump": "i",
      "op": "JUMP"
    },
    "5447": {
      "op": "JUMPDEST"
    },
    "5448": {
      "op": "DUP1"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5451": {
      "op": "MSTORE"
    },
    "5452": {
      "op": "POP"
    },
    "5453": {
      "op": "DUP3"
    },
    "5454": {
      "op": "CALLDATALOAD"
    },
    "5455": {
      "op": "DUP2"
    },
    "5456": {
      "op": "MSTORE"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5459": {
      "op": "DUP4"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "CALLDATALOAD"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5464": {
      "op": "DUP3"
    },
    "5465": {
      "op": "ADD"
    },
    "5466": {
      "op": "MSTORE"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5469": {
      "op": "DUP4"
    },
    "5470": {
      "op": "ADD"
    },
    "5471": {
      "op": "CALLDATALOAD"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "MSTORE"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5479": {
      "op": "DUP4"
    },
    "5480": {
      "op": "ADD"
    },
    "5481": {
      "op": "CALLDATALOAD"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5484": {
      "op": "DUP3"
    },
    "5485": {
      "op": "ADD"
    },
    "5486": {
      "op": "MSTORE"
    },
    "5487": {
      "op": "DUP1"
    },
    "5488": {
      "op": "SWAP2"
    },
    "5489": {
      "op": "POP"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "SWAP3"
    },
    "5492": {
      "op": "SWAP2"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "op": "POP"
    },
    "5495": {
      "jump": "o",
      "op": "JUMP"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5504": {
      "op": "SHL"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5507": {
      "op": "MSTORE"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5512": {
      "op": "MSTORE"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5517": {
      "op": "REVERT"
    },
    "5518": {
      "op": "JUMPDEST"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "DUP2"
    },
    "5522": {
      "op": "DUP2"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "DUP6"
    },
    "5526": {
      "op": "GT"
    },
    "5527": {
      "op": "ISZERO"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5531": {
      "op": "JUMPI"
    },
    "5532": {
      "op": "DUP2"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5535": {
      "op": "NOT"
    },
    "5536": {
      "op": "DIV"
    },
    "5537": {
      "op": "DUP3"
    },
    "5538": {
      "op": "GT"
    },
    "5539": {
      "op": "ISZERO"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x15AF"
    },
    "5543": {
      "op": "JUMPI"
    },
    "5544": {
      "op": "PUSH2",
      "value": "0x15AF"
    },
    "5547": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5550": {
      "jump": "i",
      "op": "JUMP"
    },
    "5551": {
      "op": "JUMPDEST"
    },
    "5552": {
      "op": "DUP1"
    },
    "5553": {
      "op": "DUP6"
    },
    "5554": {
      "op": "AND"
    },
    "5555": {
      "op": "ISZERO"
    },
    "5556": {
      "op": "PUSH2",
      "value": "0x15BC"
    },
    "5559": {
      "op": "JUMPI"
    },
    "5560": {
      "op": "SWAP2"
    },
    "5561": {
      "op": "DUP2"
    },
    "5562": {
      "op": "MUL"
    },
    "5563": {
      "op": "SWAP2"
    },
    "5564": {
      "op": "JUMPDEST"
    },
    "5565": {
      "op": "SWAP4"
    },
    "5566": {
      "op": "DUP5"
    },
    "5567": {
      "op": "SHR"
    },
    "5568": {
      "op": "SWAP4"
    },
    "5569": {
      "op": "SWAP1"
    },
    "5570": {
      "op": "DUP1"
    },
    "5571": {
      "op": "MUL"
    },
    "5572": {
      "op": "SWAP1"
    },
    "5573": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "5576": {
      "op": "JUMP"
    },
    "5577": {
      "op": "JUMPDEST"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "SWAP3"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "SWAP3"
    },
    "5582": {
      "op": "SWAP1"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "jump": "o",
      "op": "JUMP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5588": {
      "op": "DUP3"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15E0"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "POP"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5599": {
      "op": "JUMP"
    },
    "5600": {
      "op": "JUMPDEST"
    },
    "5601": {
      "op": "DUP2"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15ED"
    },
    "5605": {
      "op": "JUMPI"
    },
    "5606": {
      "op": "POP"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5609": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5612": {
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "DUP2"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5617": {
      "op": "DUP2"
    },
    "5618": {
      "op": "EQ"
    },
    "5619": {
      "op": "PUSH2",
      "value": "0x1603"
    },
    "5622": {
      "op": "JUMPI"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5625": {
      "op": "DUP2"
    },
    "5626": {
      "op": "EQ"
    },
    "5627": {
      "op": "PUSH2",
      "value": "0x160D"
    },
    "5630": {
      "op": "JUMPI"
    },
    "5631": {
      "op": "PUSH2",
      "value": "0x1629"
    },
    "5634": {
      "op": "JUMP"
    },
    "5635": {
      "op": "JUMPDEST"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5638": {
      "op": "SWAP2"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5644": {
      "op": "JUMP"
    },
    "5645": {
      "op": "JUMPDEST"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5648": {
      "op": "DUP5"
    },
    "5649": {
      "op": "GT"
    },
    "5650": {
      "op": "ISZERO"
    },
    "5651": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "5654": {
      "op": "JUMPI"
    },
    "5655": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5661": {
      "jump": "i",
      "op": "JUMP"
    },
    "5662": {
      "op": "JUMPDEST"
    },
    "5663": {
      "op": "POP"
    },
    "5664": {
      "op": "POP"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5667": {
      "op": "DUP3"
    },
    "5668": {
      "op": "SHL"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5672": {
      "op": "JUMP"
    },
    "5673": {
      "op": "JUMPDEST"
    },
    "5674": {
      "op": "POP"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5677": {
      "op": "DUP4"
    },
    "5678": {
      "op": "LT"
    },
    "5679": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "5682": {
      "op": "DUP4"
    },
    "5683": {
      "op": "LT"
    },
    "5684": {
      "op": "AND"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "5687": {
      "op": "DUP5"
    },
    "5688": {
      "op": "LT"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5691": {
      "op": "DUP5"
    },
    "5692": {
      "op": "LT"
    },
    "5693": {
      "op": "AND"
    },
    "5694": {
      "op": "OR"
    },
    "5695": {
      "op": "ISZERO"
    },
    "5696": {
      "op": "PUSH2",
      "value": "0x164C"
    },
    "5699": {
      "op": "JUMPI"
    },
    "5700": {
      "op": "POP"
    },
    "5701": {
      "op": "DUP2"
    },
    "5702": {
      "op": "DUP2"
    },
    "5703": {
      "op": "EXP"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5707": {
      "op": "JUMP"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x1656"
    },
    "5712": {
      "op": "DUP4"
    },
    "5713": {
      "op": "DUP4"
    },
    "5714": {
      "op": "PUSH2",
      "value": "0x158E"
    },
    "5717": {
      "jump": "i",
      "op": "JUMP"
    },
    "5718": {
      "op": "JUMPDEST"
    },
    "5719": {
      "op": "DUP1"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5722": {
      "op": "NOT"
    },
    "5723": {
      "op": "DIV"
    },
    "5724": {
      "op": "DUP3"
    },
    "5725": {
      "op": "GT"
    },
    "5726": {
      "op": "ISZERO"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x166A"
    },
    "5730": {
      "op": "JUMPI"
    },
    "5731": {
      "op": "PUSH2",
      "value": "0x166A"
    },
    "5734": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5737": {
      "jump": "i",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "MUL"
    },
    "5740": {
      "op": "SWAP4"
    },
    "5741": {
      "op": "SWAP3"
    },
    "5742": {
      "op": "POP"
    },
    "5743": {
      "op": "POP"
    },
    "5744": {
      "op": "POP"
    },
    "5745": {
      "jump": "o",
      "op": "JUMP"
    },
    "5746": {
      "op": "JUMPDEST"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5749": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "5752": {
      "op": "DUP4"
    },
    "5753": {
      "op": "DUP4"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x15D1"
    },
    "5757": {
      "jump": "i",
      "op": "JUMP"
    },
    "5758": {
      "op": "JUMPDEST"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "DUP5"
    },
    "5765": {
      "op": "SUB"
    },
    "5766": {
      "op": "SLT"
    },
    "5767": {
      "op": "ISZERO"
    },
    "5768": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5771": {
      "op": "JUMPI"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5774": {
      "op": "DUP1"
    },
    "5775": {
      "op": "REVERT"
    },
    "5776": {
      "op": "JUMPDEST"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5779": {
      "op": "MLOAD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5782": {
      "op": "DUP2"
    },
    "5783": {
      "op": "ADD"
    },
    "5784": {
      "op": "DUP2"
    },
    "5785": {
      "op": "DUP2"
    },
    "5786": {
      "op": "LT"
    },
    "5787": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "GT"
    },
    "5798": {
      "op": "OR"
    },
    "5799": {
      "op": "ISZERO"
    },
    "5800": {
      "op": "PUSH2",
      "value": "0x16B3"
    },
    "5803": {
      "op": "JUMPI"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x16B3"
    },
    "5807": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "5810": {
      "jump": "i",
      "op": "JUMP"
    },
    "5811": {
      "op": "JUMPDEST"
    },
    "5812": {
      "op": "DUP1"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5815": {
      "op": "MSTORE"
    },
    "5816": {
      "op": "POP"
    },
    "5817": {
      "op": "DUP3"
    },
    "5818": {
      "op": "CALLDATALOAD"
    },
    "5819": {
      "op": "DUP2"
    },
    "5820": {
      "op": "MSTORE"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5823": {
      "op": "DUP4"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "CALLDATALOAD"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5828": {
      "op": "DUP3"
    },
    "5829": {
      "op": "ADD"
    },
    "5830": {
      "op": "MSTORE"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5833": {
      "op": "DUP4"
    },
    "5834": {
      "op": "ADD"
    },
    "5835": {
      "op": "CALLDATALOAD"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5838": {
      "op": "DUP3"
    },
    "5839": {
      "op": "ADD"
    },
    "5840": {
      "op": "MSTORE"
    },
    "5841": {
      "op": "DUP1"
    },
    "5842": {
      "op": "SWAP2"
    },
    "5843": {
      "op": "POP"
    },
    "5844": {
      "op": "POP"
    },
    "5845": {
      "op": "SWAP3"
    },
    "5846": {
      "op": "SWAP2"
    },
    "5847": {
      "op": "POP"
    },
    "5848": {
      "op": "POP"
    },
    "5849": {
      "jump": "o",
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5858": {
      "op": "SHL"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5861": {
      "op": "MSTORE"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5866": {
      "op": "MSTORE"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5871": {
      "op": "REVERT"
    },
    "5872": {
      "op": "JUMPDEST"
    },
    "5873": {
      "op": "DUP2"
    },
    "5874": {
      "op": "DUP2"
    },
    "5875": {
      "op": "SUB"
    },
    "5876": {
      "op": "DUP2"
    },
    "5877": {
      "op": "DUP2"
    },
    "5878": {
      "op": "GT"
    },
    "5879": {
      "op": "ISZERO"
    },
    "5880": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5883": {
      "op": "JUMPI"
    },
    "5884": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5887": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5890": {
      "jump": "i",
      "op": "JUMP"
    },
    "5891": {
      "op": "JUMPDEST"
    },
    "5892": {
      "op": "DUP1"
    },
    "5893": {
      "op": "DUP3"
    },
    "5894": {
      "op": "ADD"
    },
    "5895": {
      "op": "DUP1"
    },
    "5896": {
      "op": "DUP3"
    },
    "5897": {
      "op": "GT"
    },
    "5898": {
      "op": "ISZERO"
    },
    "5899": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5902": {
      "op": "JUMPI"
    },
    "5903": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "5906": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5909": {
      "jump": "i",
      "op": "JUMP"
    },
    "5910": {
      "op": "JUMPDEST"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5913": {
      "op": "DUP2"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5917": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5922": {
      "op": "DUP4"
    },
    "5923": {
      "op": "ADD"
    },
    "5924": {
      "op": "DUP6"
    },
    "5925": {
      "op": "PUSH2",
      "value": "0xFF2"
    },
    "5928": {
      "jump": "i",
      "op": "JUMP"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "SWAP1"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5935": {
      "op": "DUP4"
    },
    "5936": {
      "op": "ADD"
    },
    "5937": {
      "op": "MSTORE"
    },
    "5938": {
      "op": "SWAP4"
    },
    "5939": {
      "op": "SWAP3"
    },
    "5940": {
      "op": "POP"
    },
    "5941": {
      "op": "POP"
    },
    "5942": {
      "op": "POP"
    },
    "5943": {
      "jump": "o",
      "op": "JUMP"
    },
    "5944": {
      "op": "JUMPDEST"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5949": {
      "op": "DUP3"
    },
    "5950": {
      "op": "DUP5"
    },
    "5951": {
      "op": "SUB"
    },
    "5952": {
      "op": "SLT"
    },
    "5953": {
      "op": "ISZERO"
    },
    "5954": {
      "op": "PUSH2",
      "value": "0x174A"
    },
    "5957": {
      "op": "JUMPI"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "DUP1"
    },
    "5961": {
      "op": "REVERT"
    },
    "5962": {
      "op": "JUMPDEST"
    },
    "5963": {
      "op": "POP"
    },
    "5964": {
      "op": "MLOAD"
    },
    "5965": {
      "op": "SWAP2"
    },
    "5966": {
      "op": "SWAP1"
    },
    "5967": {
      "op": "POP"
    },
    "5968": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5a5ef03f5e010c91a9a67e6d71ba386c12c062f1",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./BaseClient.sol\";\n\n\ncontract TS3000 is BaseClient {\n\n    struct KeyFragment {\n        bytes32 globalHash;\n        bytes32 localHash;\n        uint passcode;\n    }\n\n    struct Input {\n        uint fragmentIndex;\n        bytes32 globalHash;\n        bytes32 localHash;\n        uint minTimestamp;\n    }\n\n    struct Result {\n        uint fragmentIndex;\n        uint timestampRestriction;\n        uint passcode;\n    }\n\n    event keyFullyMined();\n\n    string public encryptedDataRefference;\n    KeyFragment[] public keyFragments;\n    bytes32 public finalKey;\n\n    uint public fragmentDifficulty;\n    uint public rewardPerFragment;\n    uint public postProcessingGas;\n    uint public minTimeFramePerFragment;\n    bool public postProcessingEnabled;\n    \n    constructor(address brokerAddress, string memory _encryptedDataRefference, bytes32 firstLocalHash, bytes32[] memory globalHashes, uint _minTimeFramePerFragment, uint _fragmentDifficulty) BaseClient(brokerAddress) payable {\n        postProcessingGas = 400000;  // calculate postprocgas //// con 300000 funciona, con 200000 no\n        postProcessingEnabled = true;\n        fragmentDifficulty = _fragmentDifficulty;\n        rewardPerFragment = msg.value / globalHashes.length; //aca tener en cuenta el postprocgas\n        encryptedDataRefference = _encryptedDataRefference;\n        minTimeFramePerFragment = _minTimeFramePerFragment;\n        for (uint i = 0; i < globalHashes.length; i++) {\n            KeyFragment memory fragment; \n            fragment.globalHash = globalHashes[i];\n            if (i == 0) {\n                fragment.localHash = firstLocalHash;\n            }\n            keyFragments.push(fragment);\n        }\n        Input memory input = Input({\n            fragmentIndex: 0,\n            globalHash: globalHashes[0],\n            localHash: firstLocalHash,\n            minTimestamp: block.timestamp\n        });\n        _submitRequest(rewardPerFragment, abi.encode(input), postProcessingGas);\n    }\n\n    function checkResult(bytes calldata inputData, bytes calldata resultData) external override view returns (bool) {\n        Input memory input = abi.decode(inputData, (Input));\n        Result memory result = abi.decode(resultData, (Result));\n        return (input.minTimestamp == result.timestampRestriction) && (block.timestamp >= result.timestampRestriction) && (input.fragmentIndex == result.fragmentIndex) && (keccak256(abi.encode(result.passcode, input.localHash)) == input.globalHash);\n    }\n\n    function processResult(bytes calldata resultData) public override onlyClient { // decidir si quiero mantener el parametro de post processing gas, o si lo dejo limitless a criterio del ejecutor. LO MANTENGO POR QUE ESTA SETEADO EL LIMITE DESDE BASE CLIENT FUERA DEL CONTROL DE CLIENTES MALICIOSOS\n        //La hago public y only client en vez de internal porque necesito el cambio de msg.sender y necesito limitar el gas\n        Result memory result = abi.decode(resultData, (Result));\n        keyFragments[result.fragmentIndex].passcode = result.passcode;\n        if (result.fragmentIndex == keyFragments.length - 1) {\n            finalKey = keccak256(abi.encode(result.passcode));\n            emit keyFullyMined();\n        } else {\n            keyFragments[result.fragmentIndex + 1].localHash = keccak256(abi.encode(result.passcode));\n            if (postProcessingEnabled) {\n                Input memory input = Input({\n                    fragmentIndex: result.fragmentIndex + 1,\n                    globalHash: keyFragments[result.fragmentIndex + 1].globalHash,\n                    localHash: keyFragments[result.fragmentIndex + 1].localHash,\n                    minTimestamp: result.timestampRestriction + minTimeFramePerFragment\n                });\n                _submitRequest(rewardPerFragment, abi.encode(input), postProcessingGas);\n            }\n        }\n    }\n\n    function togglePostProcessing() external onlyOwner returns (bool) {\n        postProcessingEnabled = postProcessingEnabled ? false : true;\n        return postProcessingEnabled;\n    }\n\n    function getInputDataStructure() external override pure returns (string memory) {\n        return \"{uint fragmentIndex; bytes32 globalHash; bytes32 localHash; uint minTimestamp;}\";\n    }\n    \n    function getResultDataStructure() external override pure returns (string memory) {\n        return \"{uint fragmentIndex; uint timestampRestriction; uint passcode;}\";\n    }\n\n    function resolveOnChain(bytes calldata inputData) public override view returns (bytes memory) { \n        Result memory result;\n        Input memory input = abi.decode(inputData, (Input));\n        result.fragmentIndex = input.fragmentIndex;\n        result.timestampRestriction = input.minTimestamp;\n        for (uint passcode = 0; passcode < 10**fragmentDifficulty; passcode++) {\n            if (keccak256(abi.encode(passcode, input.localHash)) == input.globalHash) {\n                result.passcode = passcode;\n                break;\n            }\n        }\n        return abi.encode(result);\n    }\n}\n",
  "sourceMap": "99:4983:5:-:0;;;826:1212;;;;;;;;;;;;;;;;;;:::i;:::-;244:6:4;:19;;253:10;-1:-1:-1;;;;;;244:19:4;;;;;;;-1:-1:-1;567:47:2;;;;::::1;-1:-1:-1::0;;;;;567:47:2;::::1;;::::0;;1077:6:5::1;1057:17;:26:::0;1159:21:::1;:28:::0;;-1:-1:-1;;1159:28:5::1;::::0;;::::1;::::0;;1197:18:::1;:40:::0;;;1279:19;;1267:31:::1;::::0;:9:::1;:31;:::i;:::-;1247:17;:51:::0;1345:23:::1;:50;1371:24:::0;1345:23;:50:::1;:::i;:::-;-1:-1:-1::0;1405:23:5::1;:50:::0;;;1470:6:::1;1465:285;1486:12;:19;1482:1;:23;1465:285;;;99:4983:::0;;;;;;;;-1:-1:-1;99:4983:5;;;;;;;;;;;;;;;;1590:12:::1;1603:1;1590:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;1568:37;;:19:::1;1623:6:::0;;;1619:80:::1;;1649:18;::::0;::::1;:35:::0;;;1619:80:::1;1712:12;:27:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;1712:27:5;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;1507:3:::1;1465:285;;;;1759:18;1780:170;;;;;;;;1815:1;1780:170;;;;1842:12;1855:1;1842:15;;;;;;;;:::i;:::-;;;;;;;1780:170;;;;1882:14;1780:170;;;;1924:15;1780:170;;::::0;1759:191:::1;;1960:71;1975:17;;2005:5;1994:17;;;;;;;5847:13:10::0;;5829:32;;5917:4;5905:17;;;5899:24;5877:20;;;5870:54;5980:4;5968:17;;;5962:24;5940:20;;;5933:54;6043:4;6031:17;;;6025:24;6003:20;;;5996:54;;;;5816:3;5801:19;;5636:420;1994:17:5::1;;::::0;;-1:-1:-1;;1994:17:5;;::::1;::::0;;;;;;2013::::1;::::0;1960:14:::1;:71::i;:::-;;1047:991;826:1212:::0;;;;;;99:4983;;1371:399:2;1471:4;1506:21;1495:7;:32;;1487:63;;;;-1:-1:-1;;;1487:63:2;;6263:2:10;1487:63:2;;;6245:21:10;6302:2;6282:18;;;6275:30;-1:-1:-1;;;6321:18:10;;;6314:48;6379:18;;1487:63:2;;;;;;;;1577:14;;:70;;-1:-1:-1;;;1577:70:2;;1560:14;;-1:-1:-1;;;;;1577:14:2;;:28;;1613:7;;1577:70;;1622:5;;1629:17;;1577:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1560:87;;1662:27;1679:9;1662:27;;;;7217:25:10;;7205:2;7190:18;;7071:177;1662:27:2;;;;;;;;1699;;;;:16;:27;;;;;:34;;-1:-1:-1;;1699:34:2;1729:4;1699:34;;;1716:9;-1:-1:-1;1371:399:2;;;;;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:10;247:40;;-1:-1:-1;;;;;302:34:10;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:10:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:10;650:16;;643:27;426:250::o;681:709::-;746:5;799:3;792:4;784:6;780:17;776:27;766:55;;817:1;814;807:12;766:55;840:13;;872:4;-1:-1:-1;;;;;888:26:10;;885:52;;;917:18;;:::i;:::-;963:2;960:1;956:10;986:28;1010:2;1006;1002:11;986:28;:::i;:::-;1048:15;;;1118;;;1114:24;;;1079:12;;;;1150:15;;;1147:35;;;1178:1;1175;1168:12;1147:35;1214:2;1206:6;1202:15;1191:26;;1226:135;1242:6;1237:3;1234:15;1226:135;;;1308:10;;1296:23;;1259:12;;;;1339;;;;1226:135;;;1379:5;681:709;-1:-1:-1;;;;;;;681:709:10:o;1395:1302::-;1545:6;1553;1561;1569;1577;1585;1638:3;1626:9;1617:7;1613:23;1609:33;1606:53;;;1655:1;1652;1645:12;1606:53;1681:16;;-1:-1:-1;;;;;1726:31:10;;1716:42;;1706:70;;1772:1;1769;1762:12;1706:70;1844:2;1829:18;;1823:25;1795:5;;-1:-1:-1;;;;;;1897:14:10;;;1894:34;;;1924:1;1921;1914:12;1894:34;1962:6;1951:9;1947:22;1937:32;;2007:7;2000:4;1996:2;1992:13;1988:27;1978:55;;2029:1;2026;2019:12;1978:55;2058:2;2052:9;2080:2;2076;2073:10;2070:36;;;2086:18;;:::i;:::-;2128:53;2171:2;2152:13;;-1:-1:-1;;2148:27:10;2177:2;2144:36;2128:53;:::i;:::-;2204:2;2197:5;2190:17;2244:7;2239:2;2234;2230;2226:11;2222:20;2219:33;2216:53;;;2265:1;2262;2255:12;2216:53;2278:67;2342:2;2337;2330:5;2326:14;2321:2;2317;2313:11;2278:67;:::i;:::-;2409:2;2394:18;;2388:25;2459:2;2444:18;;2438:25;2364:5;;-1:-1:-1;2388:25:10;-1:-1:-1;2438:25:10;-1:-1:-1;;2475:16:10;;;2472:36;;;2504:1;2501;2494:12;2472:36;;2527:74;2593:7;2582:8;2571:9;2567:24;2527:74;:::i;:::-;2517:84;;;2641:3;2630:9;2626:19;2620:26;2610:36;;2686:3;2675:9;2671:19;2665:26;2655:36;;1395:1302;;;;;;;;:::o;2702:217::-;2742:1;2768;2758:132;;2812:10;2807:3;2803:20;2800:1;2793:31;2847:4;2844:1;2837:15;2875:4;2872:1;2865:15;2758:132;-1:-1:-1;2904:9:10;;2702:217::o;2924:380::-;3003:1;2999:12;;;;3046;;;3067:61;;3121:4;3113:6;3109:17;3099:27;;3067:61;3174:2;3166:6;3163:14;3143:18;3140:38;3137:161;;3220:10;3215:3;3211:20;3208:1;3201:31;3255:4;3252:1;3245:15;3283:4;3280:1;3273:15;3137:161;;2924:380;;;:::o;3435:543::-;3537:2;3532:3;3529:11;3526:446;;;3573:1;3597:5;3594:1;3587:16;3641:4;3638:1;3628:18;3711:2;3699:10;3695:19;3692:1;3688:27;3682:4;3678:38;3747:4;3735:10;3732:20;3729:47;;;-1:-1:-1;3770:4:10;3729:47;3825:2;3820:3;3816:12;3813:1;3809:20;3803:4;3799:31;3789:41;;3880:82;3898:2;3891:5;3888:13;3880:82;;;3943:17;;;3924:1;3913:13;3880:82;;;3884:3;;;3526:446;3435:543;;;:::o;4154:1345::-;4274:10;;-1:-1:-1;;;;;4296:30:10;;4293:56;;;4329:18;;:::i;:::-;4358:97;4448:6;4408:38;4440:4;4434:11;4408:38;:::i;:::-;4402:4;4358:97;:::i;:::-;4510:4;;4567:2;4556:14;;4584:1;4579:663;;;;5286:1;5303:6;5300:89;;;-1:-1:-1;5355:19:10;;;5349:26;5300:89;-1:-1:-1;;4111:1:10;4107:11;;;4103:24;4099:29;4089:40;4135:1;4131:11;;;4086:57;5402:81;;4549:944;;4579:663;3382:1;3375:14;;;3419:4;3406:18;;-1:-1:-1;;4615:20:10;;;4733:236;4747:7;4744:1;4741:14;4733:236;;;4836:19;;;4830:26;4815:42;;4928:27;;;;4896:1;4884:14;;;;4763:19;;4733:236;;;4737:3;4997:6;4988:7;4985:19;4982:201;;;5058:19;;;5052:26;-1:-1:-1;;5141:1:10;5137:14;;;5153:3;5133:24;5129:37;5125:42;5110:58;5095:74;;4982:201;-1:-1:-1;;;;;5229:1:10;5213:14;;;5209:22;5196:36;;-1:-1:-1;4154:1345:10:o;5504:127::-;5565:10;5560:3;5556:20;5553:1;5546:31;5596:4;5593:1;5586:15;5620:4;5617:1;5610:15;6408:469;6583:2;6572:9;6565:21;6546:4;6615:6;6609:13;6658:6;6653:2;6642:9;6638:18;6631:34;6674:81;6748:6;6743:2;6732:9;6728:18;6721:4;6713:6;6709:17;6674:81;:::i;:::-;6857:4;6842:20;;6835:36;;;;-1:-1:-1;6816:2:10;6795:15;;;;-1:-1:-1;;6791:29:10;6776:45;6823:2;6772:54;;6408:469;-1:-1:-1;6408:469:10:o;6882:184::-;6952:6;7005:2;6993:9;6984:7;6980:23;6976:32;6973:52;;;7021:1;7018;7011:12;6973:52;-1:-1:-1;7044:16:10;;6882:184;-1:-1:-1;6882:184:10:o;7071:177::-;99:4983:5;;;;;;",
  "sourcePath": "contracts/TS3000.sol",
  "type": "contract"
}