{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "7": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        1620
      ]
    },
    "id": 1621,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1579,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1620,
        "linearizedBaseContracts": [
          1620
        ],
        "name": "Ownable",
        "nameLocation": "79:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "112:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1582,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1619,
                          "src": "126:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "126:9:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206f776e6572202121",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "137:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3271bdcc62002bb6e06fcf14808980920908e6b0b00c885979054f57541ad334",
                          "typeString": "literal_string \"Function accessible only by the owner !!\""
                        },
                        "value": "Function accessible only by the owner !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3271bdcc62002bb6e06fcf14808980920908e6b0b00c885979054f57541ad334",
                          "typeString": "literal_string \"Function accessible only by the owner !!\""
                        }
                      ],
                      "id": 1581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "118:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "118:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "118:62:7"
                },
                {
                  "id": 1587,
                  "nodeType": "PlaceholderStatement",
                  "src": "186:1:7"
                }
              ]
            },
            "id": 1589,
            "name": "onlyOwner",
            "nameLocation": "100:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "109:2:7"
            },
            "src": "91:101:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1591,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "211:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1620,
            "src": "195:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1590,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "195:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1599,
              "nodeType": "Block",
              "src": "235:24:7",
              "statements": [
                {
                  "expression": {
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1594,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "237:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1595,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "246:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "250:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "246:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "237:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "237:19:7"
                }
              ]
            },
            "id": 1600,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:2:7"
            },
            "returnParameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "235:0:7"
            },
            "scope": 1620,
            "src": "221:38:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1607,
              "nodeType": "Block",
              "src": "308:18:7",
              "statements": [
                {
                  "expression": {
                    "id": 1605,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1591,
                    "src": "317:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1604,
                  "id": 1606,
                  "nodeType": "Return",
                  "src": "310:13:7"
                }
              ]
            },
            "functionSelector": "8da5cb5b",
            "id": 1608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "271:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:2:7"
            },
            "returnParameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "299:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:9:7"
            },
            "scope": 1620,
            "src": "262:64:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "376:32:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1613,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "385:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "389:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "385:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1615,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "399:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "385:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1612,
                  "id": 1617,
                  "nodeType": "Return",
                  "src": "378:27:7"
                }
              ]
            },
            "functionSelector": "8f32d59b",
            "id": 1619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "340:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:2:7"
            },
            "returnParameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "370:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:6:7"
            },
            "scope": 1620,
            "src": "331:77:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1621,
        "src": "70:340:7",
        "usedErrors": []
      }
    ],
    "src": "37:373:7"
  },
  "bytecode": "6080604052348015600f57600080fd5b50600080546001600160a01b0319163317905560aa806100306000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea26469706673582212206db6039e0ad7891c23a6118f2dcf24a30a4741f059e666815d30ad285a28b3a364736f6c63430008130033",
  "bytecodeSha1": "672f70f06f11b1d7dfeb0f73ad0bb11d0c9972ad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Ownable",
  "coverageMap": {
    "branches": {
      "7": {}
    },
    "statements": {
      "7": {
        "Ownable.isOwner": {
          "1": [
            378,
            405
          ]
        },
        "Ownable.owner": {
          "0": [
            310,
            323
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c80638da5cb5b1460375780638f32d59b146057575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b031633146040519015158152602001604e56fea26469706673582212206db6039e0ad7891c23a6118f2dcf24a30a4741f059e666815d30ad285a28b3a364736f6c63430008130033",
  "deployedSourceMap": "70:340:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:64;299:7;317:6;262:64;;-1:-1:-1;;;;;317:6:7;;;160:51:9;;148:2;133:18;262:64:7;;;;;;;;331:77;370:4;399:6;-1:-1:-1;;;;;399:6:7;385:10;:20;331:77;;387:14:9;;380:22;362:41;;350:2;335:18;331:77:7;222:187:9",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    70,
    410
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB6039E0AD7891C23A6118F2DCF24 LOG3 EXP SELFBALANCE COINBASE CREATE MSIZE 0xE6 PUSH7 0x815D30AD285A28 0xB3 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "REVERT",
      "path": "7"
    },
    "15": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "POP",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "LT",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "24": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "27": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "SHR",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "EQ",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "40": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "DUP1",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8F32D59B"
    },
    "46": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "EQ",
      "path": "7"
    },
    "47": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x57"
    },
    "49": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "51": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "DUP1",
      "path": "7"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        70,
        410
      ],
      "op": "REVERT",
      "path": "7"
    },
    "55": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "56": {
      "fn": "Ownable.owner",
      "offset": [
        299,
        306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "58": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 0
    },
    "59": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "61": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "62": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "64": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "66": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "68": {
      "op": "SHL"
    },
    "69": {
      "op": "SUB"
    },
    "70": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "71": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "72": {
      "fn": "Ownable.owner",
      "offset": [
        317,
        323
      ],
      "op": "AND",
      "path": "7"
    },
    "73": {
      "op": "DUP2"
    },
    "74": {
      "op": "MSTORE"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "77": {
      "op": "ADD"
    },
    "78": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "79": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "81": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "82": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "DUP1",
      "path": "7"
    },
    "83": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "84": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "SUB",
      "path": "7"
    },
    "85": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "86": {
      "fn": "Ownable.owner",
      "offset": [
        262,
        326
      ],
      "op": "RETURN",
      "path": "7"
    },
    "87": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "88": {
      "fn": "Ownable.isOwner",
      "offset": [
        370,
        374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "90": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 1
    },
    "91": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "97": {
      "op": "SHL"
    },
    "98": {
      "op": "SUB"
    },
    "99": {
      "fn": "Ownable.isOwner",
      "offset": [
        399,
        405
      ],
      "op": "AND",
      "path": "7"
    },
    "100": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        395
      ],
      "op": "CALLER",
      "path": "7"
    },
    "101": {
      "fn": "Ownable.isOwner",
      "offset": [
        385,
        405
      ],
      "op": "EQ",
      "path": "7"
    },
    "102": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "104": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "105": {
      "op": "SWAP1"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "ISZERO"
    },
    "108": {
      "op": "DUP2"
    },
    "109": {
      "op": "MSTORE"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "112": {
      "op": "ADD"
    },
    "113": {
      "fn": "Ownable.isOwner",
      "offset": [
        331,
        408
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4E"
    },
    "115": {
      "op": "JUMP"
    }
  },
  "sha1": "723e1a1adc67241e7d38bf7b768431a1a62a60ee",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Ownable {\n  modifier onlyOwner() {\n    require(isOwner(), \"Function accessible only by the owner !!\");\n    _;\n  }\n  address private _owner;\n  constructor() { _owner = msg.sender; }\n  function owner() public view returns(address) { return _owner; }  \n  function isOwner() public view returns(bool) { return msg.sender == _owner; }\n}",
  "sourceMap": "70:340:7:-:0;;;221:38;;;;;;;;;-1:-1:-1;237:6:7;:19;;-1:-1:-1;;;;;;237:19:7;246:10;237:19;;;70:340;;;;;;",
  "sourcePath": "contracts/Ownable.sol",
  "type": "contract"
}