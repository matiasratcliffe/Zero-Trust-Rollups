{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "RegisteredAPIs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "apiIdentifier",
          "type": "string"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "apiIdentifier",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "apiAddress",
          "type": "address"
        }
      ],
      "name": "setAPIAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/APIProvider.sol",
    "4": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIProvider.sol",
    "exportedSymbols": {
      "APIProvider": [
        2509
      ],
      "Ownable": [
        2552
      ]
    },
    "id": 2510,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2455,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2456,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2510,
        "sourceUnit": 2553,
        "src": "74:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2457,
              "name": "Ownable",
              "nameLocations": [
                "127:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2552,
              "src": "127:7:1"
            },
            "id": 2458,
            "nodeType": "InheritanceSpecifier",
            "src": "127:7:1"
          }
        ],
        "canonicalName": "APIProvider",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2509,
        "linearizedBaseContracts": [
          2509,
          2552
        ],
        "name": "APIProvider",
        "nameLocation": "112:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5346eb83",
            "id": 2462,
            "mutability": "mutable",
            "name": "RegisteredAPIs",
            "nameLocation": "178:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "144:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2461,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2459,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "152:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "144:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "162:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "226:2:1",
              "statements": []
            },
            "id": 2468,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2465,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2464,
                  "name": "Ownable",
                  "nameLocations": [
                    "216:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2552,
                  "src": "216:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "216:9:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:2:1"
            },
            "returnParameters": {
              "id": 2466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:1"
            },
            "scope": 2509,
            "src": "201:27:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2483,
              "nodeType": "Block",
              "src": "327:61:1",
              "statements": [
                {
                  "expression": {
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2477,
                        "name": "RegisteredAPIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2462,
                        "src": "338:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 2479,
                      "indexExpression": {
                        "id": 2478,
                        "name": "apiIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2470,
                        "src": "353:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "338:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2480,
                      "name": "apiAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2472,
                      "src": "370:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "338:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2482,
                  "nodeType": "ExpressionStatement",
                  "src": "338:42:1"
                }
              ]
            },
            "functionSelector": "a226039c",
            "id": 2484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2474,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "317:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2521,
                  "src": "317:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "317:9:1"
              }
            ],
            "name": "setAPIAddress",
            "nameLocation": "245:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "apiIdentifier",
                  "nameLocation": "275:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "259:29:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "apiAddress",
                  "nameLocation": "298:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "290:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:51:1"
            },
            "returnParameters": {
              "id": 2476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:0:1"
            },
            "scope": 2509,
            "src": "236:152:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2507,
              "nodeType": "Block",
              "src": "477:163:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2492,
                            "name": "RegisteredAPIs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2462,
                            "src": "496:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 2494,
                          "indexExpression": {
                            "id": 2493,
                            "name": "apiIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2486,
                            "src": "511:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "496:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "537:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "529:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2495,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "529:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "496:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206964656e74696669657220686173206e6f74206265656e2072656769737465726564",
                        "id": 2500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "543:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2915ea0ddfca5c75f9d808f495c1c1dafdca30095c052246db1a4da8050a4ab",
                          "typeString": "literal_string \"This identifier has not been registered\""
                        },
                        "value": "This identifier has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2915ea0ddfca5c75f9d808f495c1c1dafdca30095c052246db1a4da8050a4ab",
                          "typeString": "literal_string \"This identifier has not been registered\""
                        }
                      ],
                      "id": 2491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "488:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "488:97:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2503,
                      "name": "RegisteredAPIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2462,
                      "src": "603:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 2505,
                    "indexExpression": {
                      "id": 2504,
                      "name": "apiIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "618:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "603:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2490,
                  "id": 2506,
                  "nodeType": "Return",
                  "src": "596:36:1"
                }
              ]
            },
            "functionSelector": "bf40fac1",
            "id": 2508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "405:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "apiIdentifier",
                  "nameLocation": "432:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "416:29:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:31:1"
            },
            "returnParameters": {
              "id": 2490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2489,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "468:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:9:1"
            },
            "scope": 2509,
            "src": "396:244:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2510,
        "src": "103:542:1",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "39:606:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561047a806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635346eb831461005c5780638da5cb5b146100ad5780638f32d59b146100be578063a226039c146100dc578063bf40fac1146100f1575b600080fd5b61009061006a366004610295565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b0316610090565b6000546001600160a01b0316331460405190151581526020016100a4565b6100ef6100ea36600461038f565b610104565b005b6100906100ff3660046103f2565b6101b8565b6000546001600160a01b031633146101715760405162461bcd60e51b815260206004820152602560248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526437bbb732b960d91b60648201526084015b60405180910390fd5b8060018484604051610184929190610434565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055505050565b6000806001600160a01b0316600184846040516101d6929190610434565b908152604051908190036020019020546001600160a01b03160361024c5760405162461bcd60e51b815260206004820152602760248201527f54686973206964656e74696669657220686173206e6f74206265656e207265676044820152661a5cdd195c995960ca1b6064820152608401610168565b6001838360405161025e929190610434565b908152604051908190036020019020546001600160a01b0316905092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102a757600080fd5b813567ffffffffffffffff808211156102bf57600080fd5b818401915084601f8301126102d357600080fd5b8135818111156102e5576102e561027f565b604051601f8201601f19908116603f0116810190838211818310171561030d5761030d61027f565b8160405282815287602084870101111561032657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f84011261035857600080fd5b50813567ffffffffffffffff81111561037057600080fd5b60208301915083602082850101111561038857600080fd5b9250929050565b6000806000604084860312156103a457600080fd5b833567ffffffffffffffff8111156103bb57600080fd5b6103c786828701610346565b90945092505060208401356001600160a01b03811681146103e757600080fd5b809150509250925092565b6000806020838503121561040557600080fd5b823567ffffffffffffffff81111561041c57600080fd5b61042885828601610346565b90969095509350505050565b818382376000910190815291905056fea2646970667358221220d9bc5221609ec3bb30ae68f171a842bb2b6bfb8dee2715b042b9105ace06bcfb64736f6c63430008170033",
  "bytecodeSha1": "9b08f00b064623d04f2c099f68afc2d5ba0361e5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.23+commit.f704f362"
  },
  "contractName": "APIProvider",
  "coverageMap": {
    "branches": {
      "1": {
        "APIProvider.getAddress": {
          "5": [
            496,
            541,
            true
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "1": {
        "APIProvider.getAddress": {
          "3": [
            488,
            585
          ],
          "4": [
            596,
            632
          ]
        },
        "APIProvider.setAPIAddress": {
          "2": [
            338,
            380
          ]
        }
      },
      "4": {
        "Ownable.isOwner": {
          "1": [
            387,
            414
          ]
        },
        "Ownable.owner": {
          "0": [
            318,
            331
          ]
        }
      }
    }
  },
  "dependencies": [
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80635346eb831461005c5780638da5cb5b146100ad5780638f32d59b146100be578063a226039c146100dc578063bf40fac1146100f1575b600080fd5b61009061006a366004610295565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b0316610090565b6000546001600160a01b0316331460405190151581526020016100a4565b6100ef6100ea36600461038f565b610104565b005b6100906100ff3660046103f2565b6101b8565b6000546001600160a01b031633146101715760405162461bcd60e51b815260206004820152602560248201527f46756e6374696f6e2061636365737369626c65206f6e6c79206279207468652060448201526437bbb732b960d91b60648201526084015b60405180910390fd5b8060018484604051610184929190610434565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055505050565b6000806001600160a01b0316600184846040516101d6929190610434565b908152604051908190036020019020546001600160a01b03160361024c5760405162461bcd60e51b815260206004820152602760248201527f54686973206964656e74696669657220686173206e6f74206265656e207265676044820152661a5cdd195c995960ca1b6064820152608401610168565b6001838360405161025e929190610434565b908152604051908190036020019020546001600160a01b0316905092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102a757600080fd5b813567ffffffffffffffff808211156102bf57600080fd5b818401915084601f8301126102d357600080fd5b8135818111156102e5576102e561027f565b604051601f8201601f19908116603f0116810190838211818310171561030d5761030d61027f565b8160405282815287602084870101111561032657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f84011261035857600080fd5b50813567ffffffffffffffff81111561037057600080fd5b60208301915083602082850101111561038857600080fd5b9250929050565b6000806000604084860312156103a457600080fd5b833567ffffffffffffffff8111156103bb57600080fd5b6103c786828701610346565b90945092505060208401356001600160a01b03811681146103e757600080fd5b809150509250925092565b6000806020838503121561040557600080fd5b823567ffffffffffffffff81111561041c57600080fd5b61042885828601610346565b90969095509350505050565b818382376000910190815291905056fea2646970667358221220d9bc5221609ec3bb30ae68f171a842bb2b6bfb8dee2715b042b9105ace06bcfb64736f6c63430008170033",
  "deployedSourceMap": "103:542:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;144:48:1;;;;;;-1:-1:-1;;;;;1237:32:9;;;1219:51;;1207:2;1192:18;144:48:1;;;;;;;;270:64:4;307:7;325:6;-1:-1:-1;;;;;325:6:4;270:64;;340:77;379:4;408:6;-1:-1:-1;;;;;408:6:4;394:10;:20;340:77;;1446:14:9;;1439:22;1421:41;;1409:2;1394:18;340:77:4;1281:187:9;236:152:1;;;;;;:::i;:::-;;:::i;:::-;;396:244;;;;;;:::i;:::-;;:::i;236:152::-;379:4:4;408:6;-1:-1:-1;;;;;408:6:4;394:10;:20;124:59;;;;-1:-1:-1;;;124:59:4;;3034:2:9;124:59:4;;;3016:21:9;3073:2;3053:18;;;3046:30;3112:34;3092:18;;;3085:62;-1:-1:-1;;;3163:18:9;;;3156:35;3208:19;;124:59:4;;;;;;;;;370:10:1::1;338:14;353:13;;338:29;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:42;;-1:-1:-1;;;;;338:42:1;;;::::1;-1:-1:-1::0;;;;;;338:42:1;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;236:152:1:o;396:244::-;468:7;537:3;-1:-1:-1;;;;;496:45:1;:14;511:13;;496:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;496:29:1;:45;488:97;;;;-1:-1:-1;;;488:97:1;;3718:2:9;488:97:1;;;3700:21:9;3757:2;3737:18;;;3730:30;3796:34;3776:18;;;3769:62;-1:-1:-1;;;3847:18:9;;;3840:37;3894:19;;488:97:1;3516:403:9;488:97:1;603:14;618:13;;603:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;603:29:1;;-1:-1:-1;396:244:1;;;;:::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:9;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:9;146:922;-1:-1:-1;;;;;146:922:9:o;1473:348::-;1525:8;1535:6;1589:3;1582:4;1574:6;1570:17;1566:27;1556:55;;1607:1;1604;1597:12;1556:55;-1:-1:-1;1630:20:9;;1673:18;1662:30;;1659:50;;;1705:1;1702;1695:12;1659:50;1742:4;1734:6;1730:17;1718:29;;1794:3;1787:4;1778:6;1770;1766:19;1762:30;1759:39;1756:59;;;1811:1;1808;1801:12;1756:59;1473:348;;;;;:::o;1826:585::-;1906:6;1914;1922;1975:2;1963:9;1954:7;1950:23;1946:32;1943:52;;;1991:1;1988;1981:12;1943:52;2031:9;2018:23;2064:18;2056:6;2053:30;2050:50;;;2096:1;2093;2086:12;2050:50;2135:59;2186:7;2177:6;2166:9;2162:22;2135:59;:::i;:::-;2213:8;;-1:-1:-1;2109:85:9;-1:-1:-1;;2298:2:9;2283:18;;2270:32;-1:-1:-1;;;;;2331:31:9;;2321:42;;2311:70;;2377:1;2374;2367:12;2311:70;2400:5;2390:15;;;1826:585;;;;;:::o;2416:411::-;2487:6;2495;2548:2;2536:9;2527:7;2523:23;2519:32;2516:52;;;2564:1;2561;2554:12;2516:52;2604:9;2591:23;2637:18;2629:6;2626:30;2623:50;;;2669:1;2666;2659:12;2623:50;2708:59;2759:7;2750:6;2739:9;2735:22;2708:59;:::i;:::-;2786:8;;2682:85;;-1:-1:-1;2416:411:9;-1:-1:-1;;;;2416:411:9:o;3238:273::-;3423:6;3415;3410:3;3397:33;3379:3;3449:16;;3474:13;;;3449:16;3238:273;-1:-1:-1;3238:273:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    103,
    645
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5346EB83 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xA226039C EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xBF40FAC1 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x295 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x184 SWAP3 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP3 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x24C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206964656E74696669657220686173206E6F74206265656E20726567 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1A5CDD195C9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x168 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x25E SWAP3 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30D JUMPI PUSH2 0x30D PUSH2 0x27F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C7 DUP7 DUP3 DUP8 ADD PUSH2 0x346 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x428 DUP6 DUP3 DUP7 ADD PUSH2 0x346 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xBC MSTORE 0x21 PUSH1 0x9E 0xC3 0xBB ADDRESS 0xAE PUSH9 0xF171A842BB2B6BFB8D 0xEE 0x27 ISZERO 0xB0 TIMESTAMP 0xB9 LT GAS 0xCE MOD 0xBC 0xFB PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5346EB83"
    },
    "38": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8F32D59B"
    },
    "60": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE"
    },
    "64": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA226039C"
    },
    "71": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "75": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBF40FAC1"
    },
    "82": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "86": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        103,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "92": {
      "offset": [
        144,
        192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90"
    },
    "96": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A"
    },
    "99": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "100": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "102": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "105": {
      "fn": null,
      "jump": "i",
      "offset": [
        144,
        192
      ],
      "op": "JUMP",
      "path": "1"
    },
    "106": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "107": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP1",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "111": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP2",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP4",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "ADD",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP2",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "ADD",
      "path": "1"
    },
    "116": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP1",
      "path": "1"
    },
    "117": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "118": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "120": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP3",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "122": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP3",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "ADD",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "127": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "128": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "ADD",
      "path": "1"
    },
    "129": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "131": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "139": {
      "op": "SHL"
    },
    "140": {
      "op": "SUB"
    },
    "141": {
      "offset": [
        144,
        192
      ],
      "op": "AND",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP2",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "JUMP",
      "path": "1"
    },
    "144": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "145": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "147": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "154": {
      "op": "SHL"
    },
    "155": {
      "op": "SUB"
    },
    "156": {
      "op": "SWAP1"
    },
    "157": {
      "op": "SWAP2"
    },
    "158": {
      "op": "AND"
    },
    "159": {
      "op": "DUP2"
    },
    "160": {
      "op": "MSTORE"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "163": {
      "op": "ADD"
    },
    "164": {
      "offset": [
        144,
        192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "167": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "DUP1",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SUB",
      "path": "1"
    },
    "171": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        144,
        192
      ],
      "op": "RETURN",
      "path": "1"
    },
    "173": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "174": {
      "fn": "Ownable.owner",
      "offset": [
        307,
        314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "176": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 0
    },
    "177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "183": {
      "op": "SHL"
    },
    "184": {
      "op": "SUB"
    },
    "185": {
      "fn": "Ownable.owner",
      "offset": [
        325,
        331
      ],
      "op": "AND",
      "path": "4"
    },
    "186": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90"
    },
    "189": {
      "fn": "Ownable.owner",
      "offset": [
        270,
        334
      ],
      "op": "JUMP",
      "path": "4"
    },
    "190": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "191": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "193": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 1
    },
    "194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "200": {
      "op": "SHL"
    },
    "201": {
      "op": "SUB"
    },
    "202": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "203": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "204": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "205": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "207": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "208": {
      "op": "SWAP1"
    },
    "209": {
      "op": "ISZERO"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "DUP2"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "fn": "Ownable.isOwner",
      "offset": [
        340,
        417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA4"
    },
    "219": {
      "op": "JUMP"
    },
    "220": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "224": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA"
    },
    "227": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "228": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "230": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38F"
    },
    "233": {
      "fn": "APIProvider.setAPIAddress",
      "jump": "i",
      "offset": [
        236,
        388
      ],
      "op": "JUMP",
      "path": "1"
    },
    "234": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "235": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "238": {
      "fn": "APIProvider.setAPIAddress",
      "jump": "i",
      "offset": [
        236,
        388
      ],
      "op": "JUMP",
      "path": "1"
    },
    "239": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "STOP",
      "path": "1"
    },
    "241": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "242": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90"
    },
    "245": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF"
    },
    "248": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "249": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "251": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F2"
    },
    "254": {
      "fn": "APIProvider.getAddress",
      "jump": "i",
      "offset": [
        396,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "255": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "256": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B8"
    },
    "259": {
      "fn": "APIProvider.getAddress",
      "jump": "i",
      "offset": [
        396,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        236,
        388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "Ownable.isOwner",
      "offset": [
        379,
        383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "263": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "fn": "Ownable.isOwner",
      "offset": [
        408,
        414
      ],
      "op": "AND",
      "path": "4"
    },
    "273": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        404
      ],
      "op": "CALLER",
      "path": "4"
    },
    "274": {
      "fn": "Ownable.isOwner",
      "offset": [
        394,
        414
      ],
      "op": "EQ",
      "path": "4"
    },
    "275": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x171"
    },
    "278": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "279": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "281": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "offset": [
        124,
        183
      ],
      "op": "DUP2",
      "path": "4"
    },
    "290": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "295": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "DUP3",
      "path": "4"
    },
    "296": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "ADD",
      "path": "4"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2061636365737369626C65206F6E6C792062792074686520"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "351": {
      "op": "SHL"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "354": {
      "op": "DUP3"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "359": {
      "op": "ADD"
    },
    "360": {
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "361": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "363": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "364": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "DUP1",
      "path": "4"
    },
    "365": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "366": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SUB",
      "path": "4"
    },
    "367": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "368": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "369": {
      "fn": "Ownable.isOwner",
      "offset": [
        124,
        183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "370": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        370,
        380
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 2
    },
    "371": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "373": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        353,
        366
      ],
      "op": "DUP5",
      "path": "1"
    },
    "374": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        353,
        366
      ],
      "op": "DUP5",
      "path": "1"
    },
    "375": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "377": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "378": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x184"
    },
    "381": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "382": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "383": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "384": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x434"
    },
    "387": {
      "fn": "APIProvider.setAPIAddress",
      "jump": "i",
      "offset": [
        338,
        367
      ],
      "op": "JUMP",
      "path": "1"
    },
    "388": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "389": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "390": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "391": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "392": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "394": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "395": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "396": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "397": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "398": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SUB",
      "path": "1"
    },
    "399": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "401": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "ADD",
      "path": "1"
    },
    "402": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "403": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        367
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "404": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "405": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "415": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "416": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "417": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "AND",
      "path": "1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "424": {
      "op": "SHL"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "op": "NOT"
    },
    "427": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "428": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "429": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "AND",
      "path": "1"
    },
    "430": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "431": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "432": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "433": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "OR",
      "path": "1"
    },
    "434": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "435": {
      "fn": "APIProvider.setAPIAddress",
      "offset": [
        338,
        380
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "436": {
      "op": "POP"
    },
    "437": {
      "op": "POP"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "APIProvider.setAPIAddress",
      "jump": "o",
      "offset": [
        236,
        388
      ],
      "op": "JUMP",
      "path": "1"
    },
    "440": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "APIProvider.getAddress",
      "offset": [
        468,
        475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "443": {
      "fn": "APIProvider.getAddress",
      "offset": [
        537,
        540
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 3
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "450": {
      "op": "SHL"
    },
    "451": {
      "op": "SUB"
    },
    "452": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        541
      ],
      "op": "AND",
      "path": "1"
    },
    "453": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "455": {
      "fn": "APIProvider.getAddress",
      "offset": [
        511,
        524
      ],
      "op": "DUP5",
      "path": "1"
    },
    "456": {
      "fn": "APIProvider.getAddress",
      "offset": [
        511,
        524
      ],
      "op": "DUP5",
      "path": "1"
    },
    "457": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "459": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "460": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6"
    },
    "463": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "464": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "465": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "466": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x434"
    },
    "469": {
      "fn": "APIProvider.getAddress",
      "jump": "i",
      "offset": [
        496,
        525
      ],
      "op": "JUMP",
      "path": "1"
    },
    "470": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "471": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "472": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "DUP2",
      "path": "1"
    },
    "473": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "474": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "476": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "477": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "478": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "DUP2",
      "path": "1"
    },
    "479": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "480": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SUB",
      "path": "1"
    },
    "481": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "483": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "ADD",
      "path": "1"
    },
    "484": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "485": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "486": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        525
      ],
      "op": "AND",
      "path": "1"
    },
    "496": {
      "branch": 5,
      "fn": "APIProvider.getAddress",
      "offset": [
        496,
        541
      ],
      "op": "SUB",
      "path": "1"
    },
    "497": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24C"
    },
    "500": {
      "branch": 5,
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "501": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "503": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "DUP2",
      "path": "1"
    },
    "512": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "515": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "517": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "DUP3",
      "path": "1"
    },
    "518": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "ADD",
      "path": "1"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "524": {
      "op": "DUP3"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH32",
      "value": "0x54686973206964656E74696669657220686173206E6F74206265656E20726567"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH7",
      "value": "0x1A5CDD195C9959"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "578": {
      "op": "DUP3"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168"
    },
    "587": {
      "op": "JUMP"
    },
    "588": {
      "fn": "APIProvider.getAddress",
      "offset": [
        488,
        585
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "589": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        617
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x1"
    },
    "591": {
      "fn": "APIProvider.getAddress",
      "offset": [
        618,
        631
      ],
      "op": "DUP4",
      "path": "1"
    },
    "592": {
      "fn": "APIProvider.getAddress",
      "offset": [
        618,
        631
      ],
      "op": "DUP4",
      "path": "1"
    },
    "593": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "595": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "596": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25E"
    },
    "599": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "600": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "601": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "602": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x434"
    },
    "605": {
      "fn": "APIProvider.getAddress",
      "jump": "i",
      "offset": [
        603,
        632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "606": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "607": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "608": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "609": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "610": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "612": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "613": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "614": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "615": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "616": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SUB",
      "path": "1"
    },
    "617": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "619": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "ADD",
      "path": "1"
    },
    "620": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "622": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "629": {
      "op": "SHL"
    },
    "630": {
      "op": "SUB"
    },
    "631": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "AND",
      "path": "1"
    },
    "632": {
      "fn": "APIProvider.getAddress",
      "offset": [
        603,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "635": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "636": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "637": {
      "fn": "APIProvider.getAddress",
      "offset": [
        396,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "638": {
      "fn": "APIProvider.getAddress",
      "jump": "o",
      "offset": [
        396,
        640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "639": {
      "op": "JUMPDEST"
    },
    "640": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "650": {
      "op": "MSTORE"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "660": {
      "op": "REVERT"
    },
    "661": {
      "op": "JUMPDEST"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "666": {
      "op": "DUP3"
    },
    "667": {
      "op": "DUP5"
    },
    "668": {
      "op": "SUB"
    },
    "669": {
      "op": "SLT"
    },
    "670": {
      "op": "ISZERO"
    },
    "671": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "674": {
      "op": "JUMPI"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "677": {
      "op": "DUP1"
    },
    "678": {
      "op": "REVERT"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "DUP2"
    },
    "681": {
      "op": "CALLDATALOAD"
    },
    "682": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "DUP3"
    },
    "693": {
      "op": "GT"
    },
    "694": {
      "op": "ISZERO"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x2BF"
    },
    "698": {
      "op": "JUMPI"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "701": {
      "op": "DUP1"
    },
    "702": {
      "op": "REVERT"
    },
    "703": {
      "op": "JUMPDEST"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "DUP5"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "op": "SWAP2"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "op": "DUP5"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "712": {
      "op": "DUP4"
    },
    "713": {
      "op": "ADD"
    },
    "714": {
      "op": "SLT"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2D3"
    },
    "718": {
      "op": "JUMPI"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "DUP1"
    },
    "722": {
      "op": "REVERT"
    },
    "723": {
      "op": "JUMPDEST"
    },
    "724": {
      "op": "DUP2"
    },
    "725": {
      "op": "CALLDATALOAD"
    },
    "726": {
      "op": "DUP2"
    },
    "727": {
      "op": "DUP2"
    },
    "728": {
      "op": "GT"
    },
    "729": {
      "op": "ISZERO"
    },
    "730": {
      "op": "PUSH2",
      "value": "0x2E5"
    },
    "733": {
      "op": "JUMPI"
    },
    "734": {
      "op": "PUSH2",
      "value": "0x2E5"
    },
    "737": {
      "op": "PUSH2",
      "value": "0x27F"
    },
    "740": {
      "jump": "i",
      "op": "JUMP"
    },
    "741": {
      "op": "JUMPDEST"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "744": {
      "op": "MLOAD"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "747": {
      "op": "DUP3"
    },
    "748": {
      "op": "ADD"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "751": {
      "op": "NOT"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "AND"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "AND"
    },
    "759": {
      "op": "DUP2"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "op": "SWAP1"
    },
    "762": {
      "op": "DUP4"
    },
    "763": {
      "op": "DUP3"
    },
    "764": {
      "op": "GT"
    },
    "765": {
      "op": "DUP2"
    },
    "766": {
      "op": "DUP4"
    },
    "767": {
      "op": "LT"
    },
    "768": {
      "op": "OR"
    },
    "769": {
      "op": "ISZERO"
    },
    "770": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "773": {
      "op": "JUMPI"
    },
    "774": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "777": {
      "op": "PUSH2",
      "value": "0x27F"
    },
    "780": {
      "jump": "i",
      "op": "JUMP"
    },
    "781": {
      "op": "JUMPDEST"
    },
    "782": {
      "op": "DUP2"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "785": {
      "op": "MSTORE"
    },
    "786": {
      "op": "DUP3"
    },
    "787": {
      "op": "DUP2"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "DUP8"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "792": {
      "op": "DUP5"
    },
    "793": {
      "op": "DUP8"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "op": "ADD"
    },
    "796": {
      "op": "GT"
    },
    "797": {
      "op": "ISZERO"
    },
    "798": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "801": {
      "op": "JUMPI"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "804": {
      "op": "DUP1"
    },
    "805": {
      "op": "REVERT"
    },
    "806": {
      "op": "JUMPDEST"
    },
    "807": {
      "op": "DUP3"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "810": {
      "op": "DUP7"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "814": {
      "op": "DUP4"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "op": "CALLDATACOPY"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "819": {
      "op": "SWAP3"
    },
    "820": {
      "op": "DUP2"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "SWAP3"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "SWAP3"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "SWAP6"
    },
    "831": {
      "op": "SWAP5"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "jump": "o",
      "op": "JUMP"
    },
    "838": {
      "op": "JUMPDEST"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "841": {
      "op": "DUP1"
    },
    "842": {
      "op": "DUP4"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "845": {
      "op": "DUP5"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "SLT"
    },
    "848": {
      "op": "PUSH2",
      "value": "0x358"
    },
    "851": {
      "op": "JUMPI"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "854": {
      "op": "DUP1"
    },
    "855": {
      "op": "REVERT"
    },
    "856": {
      "op": "JUMPDEST"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "DUP2"
    },
    "859": {
      "op": "CALLDATALOAD"
    },
    "860": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "869": {
      "op": "DUP2"
    },
    "870": {
      "op": "GT"
    },
    "871": {
      "op": "ISZERO"
    },
    "872": {
      "op": "PUSH2",
      "value": "0x370"
    },
    "875": {
      "op": "JUMPI"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "878": {
      "op": "DUP1"
    },
    "879": {
      "op": "REVERT"
    },
    "880": {
      "op": "JUMPDEST"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "883": {
      "op": "DUP4"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "SWAP2"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "op": "DUP4"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "DUP6"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "GT"
    },
    "895": {
      "op": "ISZERO"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x388"
    },
    "899": {
      "op": "JUMPI"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "902": {
      "op": "DUP1"
    },
    "903": {
      "op": "REVERT"
    },
    "904": {
      "op": "JUMPDEST"
    },
    "905": {
      "op": "SWAP3"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "op": "SWAP3"
    },
    "908": {
      "op": "SWAP1"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "jump": "o",
      "op": "JUMP"
    },
    "911": {
      "op": "JUMPDEST"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "914": {
      "op": "DUP1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "919": {
      "op": "DUP5"
    },
    "920": {
      "op": "DUP7"
    },
    "921": {
      "op": "SUB"
    },
    "922": {
      "op": "SLT"
    },
    "923": {
      "op": "ISZERO"
    },
    "924": {
      "op": "PUSH2",
      "value": "0x3A4"
    },
    "927": {
      "op": "JUMPI"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "930": {
      "op": "DUP1"
    },
    "931": {
      "op": "REVERT"
    },
    "932": {
      "op": "JUMPDEST"
    },
    "933": {
      "op": "DUP4"
    },
    "934": {
      "op": "CALLDATALOAD"
    },
    "935": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "944": {
      "op": "DUP2"
    },
    "945": {
      "op": "GT"
    },
    "946": {
      "op": "ISZERO"
    },
    "947": {
      "op": "PUSH2",
      "value": "0x3BB"
    },
    "950": {
      "op": "JUMPI"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "953": {
      "op": "DUP1"
    },
    "954": {
      "op": "REVERT"
    },
    "955": {
      "op": "JUMPDEST"
    },
    "956": {
      "op": "PUSH2",
      "value": "0x3C7"
    },
    "959": {
      "op": "DUP7"
    },
    "960": {
      "op": "DUP3"
    },
    "961": {
      "op": "DUP8"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "PUSH2",
      "value": "0x346"
    },
    "966": {
      "jump": "i",
      "op": "JUMP"
    },
    "967": {
      "op": "JUMPDEST"
    },
    "968": {
      "op": "SWAP1"
    },
    "969": {
      "op": "SWAP5"
    },
    "970": {
      "op": "POP"
    },
    "971": {
      "op": "SWAP3"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "976": {
      "op": "DUP5"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "CALLDATALOAD"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "op": "DUP2"
    },
    "988": {
      "op": "AND"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "EQ"
    },
    "991": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "994": {
      "op": "JUMPI"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "997": {
      "op": "DUP1"
    },
    "998": {
      "op": "REVERT"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "DUP1"
    },
    "1001": {
      "op": "SWAP2"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "SWAP3"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "SWAP3"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "SWAP3"
    },
    "1009": {
      "jump": "o",
      "op": "JUMP"
    },
    "1010": {
      "op": "JUMPDEST"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "DUP1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "op": "DUP4"
    },
    "1017": {
      "op": "DUP6"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "op": "SLT"
    },
    "1020": {
      "op": "ISZERO"
    },
    "1021": {
      "op": "PUSH2",
      "value": "0x405"
    },
    "1024": {
      "op": "JUMPI"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "op": "REVERT"
    },
    "1029": {
      "op": "JUMPDEST"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "CALLDATALOAD"
    },
    "1032": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "GT"
    },
    "1043": {
      "op": "ISZERO"
    },
    "1044": {
      "op": "PUSH2",
      "value": "0x41C"
    },
    "1047": {
      "op": "JUMPI"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1050": {
      "op": "DUP1"
    },
    "1051": {
      "op": "REVERT"
    },
    "1052": {
      "op": "JUMPDEST"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "1056": {
      "op": "DUP6"
    },
    "1057": {
      "op": "DUP3"
    },
    "1058": {
      "op": "DUP7"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "op": "PUSH2",
      "value": "0x346"
    },
    "1063": {
      "jump": "i",
      "op": "JUMP"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "SWAP1"
    },
    "1066": {
      "op": "SWAP7"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "SWAP6"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "op": "SWAP4"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "jump": "o",
      "op": "JUMP"
    },
    "1076": {
      "op": "JUMPDEST"
    },
    "1077": {
      "op": "DUP2"
    },
    "1078": {
      "op": "DUP4"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "CALLDATACOPY"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1083": {
      "op": "SWAP2"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "SWAP1"
    },
    "1086": {
      "op": "DUP2"
    },
    "1087": {
      "op": "MSTORE"
    },
    "1088": {
      "op": "SWAP2"
    },
    "1089": {
      "op": "SWAP1"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "894fa5f982baa8b32c90b9309fa831f0562dba08",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Ownable.sol\";\n\n\ncontract APIProvider is Ownable {\n\n    mapping(string => address) public RegisteredAPIs;\n\n    constructor () Ownable() {}\n\n    function setAPIAddress(string calldata apiIdentifier, address apiAddress) public onlyOwner {\n        RegisteredAPIs[apiIdentifier] = apiAddress;\n    }\n\n    function getAddress(string calldata apiIdentifier) public view returns (address) {\n        require(RegisteredAPIs[apiIdentifier] != address(0x0), \"This identifier has not been registered\");\n        return RegisteredAPIs[apiIdentifier];\n    }\n\n}",
  "sourceMap": "103:542:1:-:0;;;201:27;;;;;;;;;-1:-1:-1;244:6:4;:19;;-1:-1:-1;;;;;;244:19:4;253:10;244:19;;;103:542:1;;;;;;",
  "sourcePath": "contracts/APIProvider.sol",
  "type": "contract"
}